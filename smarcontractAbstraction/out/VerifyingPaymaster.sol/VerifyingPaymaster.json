{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_verifyingSigner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "paymasterAndData",
          "type": "bytes"
        }
      ],
      "name": "parsePaymasterAndData",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "senderNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyingSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "779:4039:19:-:0;;;1066:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1143:11;936:32:31;719:10:50;936:18:31;:32::i;:::-;-1:-1:-1;;;;;564:24:1;;;;;1166:34:19::1;;::::0;-1:-1:-1;779:4039:19;;2426:187:31;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:31;;;-1:-1:-1;;;;;;2534:17:31;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:144:58:-;-1:-1:-1;;;;;102:31:58;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:431::-;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:44;428:5;390:44;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:46:58;482:25;516:46;:::i;:::-;581:7;571:17;;;163:431;;;;;:::o;:::-;779:4039:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "779:4039:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:141:1;;;;;;:::i;:::-;;:::i;:::-;;2721:149;;;;;;;;;;-1:-1:-1;2721:149:1;;;;;:::i;:::-;;:::i;907:40:19:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;939:32:58;;;921:51;;909:2;894:18;907:40:19;;;;;;;;1824:101:31;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:31;1273:6;-1:-1:-1;;;;;1273:6:31;1201:85;;4481:335:19;;;;;;;;;;-1:-1:-1;4481:335:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2409:464::-;;;;;;;;;;-1:-1:-1;2409:464:19;;;;;:::i;:::-;;:::i;:::-;;;3336:25:58;;;3324:2;3309:18;2409:464:19;3190:177:58;1213:46:19;;;;;;;;;;-1:-1:-1;1213:46:19;;;;;:::i;:::-;;;;;;;;;;;;;;1143:186:1;;;;;;;;;;-1:-1:-1;1143:186:1;;;;;:::i;:::-;;:::i;471:39::-;;;;;;;;;;;;;;;3588:83;;;;;;;;;;;;;:::i;3890:133::-;;;;;;;;;;-1:-1:-1;3890:133:1;;;;;:::i;:::-;;:::i;3318:111::-;;;;;;;;;;;;;:::i;2474:105::-;;;:::i;2074:198:31:-;;;;;;;;;;-1:-1:-1;2074:198:31;;;;;:::i;:::-;;:::i;632:290:1:-;;;;;;;;;;-1:-1:-1;632:290:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3094:141::-;1094:13:31;:11;:13::i;:::-;3173:55:1::1;::::0;-1:-1:-1;;;3173:55:1;;6354:10:58;6342:23;;3173:55:1::1;::::0;::::1;6324:42:58::0;3173:10:1::1;-1:-1:-1::0;;;;;3173:19:1::1;::::0;::::1;::::0;3201:9:::1;::::0;6297:18:58;;3173:55:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3094:141:::0;:::o;2721:149::-;1094:13:31;:11;:13::i;:::-;2817:46:1::1;::::0;-1:-1:-1;;;2817:46:1;;-1:-1:-1;;;;;6585:32:58;;;2817:46:1::1;::::0;::::1;6567:51:58::0;6634:18;;;6627:34;;;2817:10:1::1;:21;::::0;::::1;::::0;6540:18:58;;2817:46:1::1;;;;;;;;;;;;;;;;;::::0;::::1;1824:101:31::0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;4481:335:19:-;4565:17;;4603:24;4565:17;4677:57;1057:2;1004;4677:16;;:57;:::i;:::-;4666:86;;;;;;;:::i;:::-;4639:113;;-1:-1:-1;4639:113:19;-1:-1:-1;4774:35:19;:16;1057:2;4774:16;;:35;:::i;:::-;4481:335;;;;-1:-1:-1;4762:47:19;-1:-1:-1;;;4481:335:19:o;2409:464::-;2520:7;2672:12;2677:6;2672:4;:12::i;:::-;-1:-1:-1;;;;;1877:20:13;;2764:31:19;;;;;:11;:31;;;;;;;;;;2644:221;;;;;2702:13;;2741:4;;2813:10;;2841;;2644:221;;:::i;:::-;;;;;;;;;;;;;2634:232;;;;;;2627:239;;2409:464;;;;;:::o;1143:186:1:-;1251:24;:22;:24::i;:::-;1285:37;1293:4;1299:7;;1308:13;1285:7;:37::i;:::-;1143:186;;;;:::o;3588:83::-;1094:13:31;:11;:13::i;:::-;3640:10:1::1;-1:-1:-1::0;;;;;3640:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3890:133:::0;1094:13:31;:11;:13::i;:::-;3975:41:1::1;::::0;-1:-1:-1;;;3975:41:1;;-1:-1:-1;;;;;939:32:58;;;3975:41:1::1;::::0;::::1;921:51:58::0;3975:10:1::1;:24;::::0;::::1;::::0;894:18:58;;3975:41:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3890:133:::0;:::o;3318:111::-;3387:35;;-1:-1:-1;;;3387:35:1;;3416:4;3387:35;;;921:51:58;3361:7:1;;3387:10;-1:-1:-1;;;;;3387:20:1;;;;894:18:58;;3387:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3380:42;;3318:111;:::o;2474:105::-;2518:54;;-1:-1:-1;;;2518:54:1;;2566:4;2518:54;;;921:51:58;2518:10:1;-1:-1:-1;;;;;2518:20:1;;;;2547:9;;894:18:58;;2518:54:1;;;;;;;;;;;;;;;;;;;2074:198:31;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:31;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:31;;8538:2:58;2154:73:31::1;::::0;::::1;8520:21:58::0;8577:2;8557:18;;;8550:30;8616:34;8596:18;;;8589:62;-1:-1:-1;;;8667:18:58;;;8660:36;8713:19;;2154:73:31::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;632:290:1:-;764:20;786:22;821:24;:22;:24::i;:::-;862:53;887:6;895:10;907:7;862:24;:53::i;:::-;855:60;;;;632:290;;;;;;;:::o;1359:130:31:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:31;719:10:50;1422:23:31;1414:68;;;;-1:-1:-1;;;1414:68:31;;8945:2:58;1414:68:31;;;8927:21:58;;;8964:18;;;8957:30;9023:34;9003:18;;;8996:62;9075:18;;1414:68:31;8743:356:58;2426:187:31;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:31;;;-1:-1:-1;;;;;;2534:17:31;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1266:729:19:-;1334:16;1431:18;;1452:23;;;;:6;:23;:::i;:::-;1431:44;;;;1762:6;1818:2;1812:3;1800:10;1796:20;1792:29;1847:4;1841:11;1834:18;;1896:2;1891:3;1887:12;1882:3;1878:22;1872:4;1865:36;1926:3;1921;1914:16;1975:3;1970;1965:2;1960:3;1956:12;1943:36;;;1737:252;;1266:729;;;:::o;4087:135:1:-;4156:10;-1:-1:-1;;;;;4178:10:1;4156:33;;4148:67;;;;-1:-1:-1;;;4148:67:1;;9832:2:58;4148:67:1;;;9814:21:58;9871:2;9851:18;;;9844:30;-1:-1:-1;;;9890:18:58;;;9883:51;9951:18;;4148:67:1;9630:345:58;2089:285:1;2344:23;;-1:-1:-1;;;2344:23:1;;10182:2:58;2344:23:1;;;10164:21:58;10221:2;10201:18;;;10194:30;-1:-1:-1;;;10240:18:58;;;10233:43;10293:18;;2344:23:1;9980:337:58;3213:1262:19;3358:20;3380:22;;;3481:24;3380:22;3509:46;3531:23;;;;:6;:23;:::i;3509:46::-;3442:113;;-1:-1:-1;3442:113:19;;-1:-1:-1;3442:113:19;-1:-1:-1;3442:113:19;-1:-1:-1;3796:2:19;3776:22;;;:48;;-1:-1:-1;3822:2:19;3802:22;;3776:48;3768:125;;;;;-1:-1:-1;;;3768:125:19;;10524:2:58;3768:125:19;;;10506:21:58;10543:18;;;10536:30;;;;10602:34;10582:18;;;10575:62;10673:34;10653:18;;;10646:62;10725:19;;3768:125:19;10322:428:58;3768:125:19;3903:12;3918:69;3947:39;3955:6;3963:10;3975;3947:7;:39::i;:::-;7389:34:54;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;3918:69:19;-1:-1:-1;;;;;1877:20:13;;3997:31:19;;;;;:11;:31;;;;;:33;;3903:84;;-1:-1:-1;3997:31:19;:33;;;:::i;:::-;;;;;;4138:30;4152:4;4158:9;;4138:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4138:13:19;;-1:-1:-1;;;4138:30:19:i;:::-;-1:-1:-1;;;;;4119:49:19;:15;-1:-1:-1;;;;;4119:49:19;;4115:139;;4195:47;4215:4;4220:10;4231;4195:19;:47::i;:::-;4184:59;;;;;;;;;;;;;;;;;;;;;;;;4115:139;4419:48;4439:5;4445:10;4456;4419:19;:48::i;:::-;4408:60;;;;;;;;;-1:-1:-1;4408:60:19;;;;;-1:-1:-1;3213:1262:19;-1:-1:-1;;;;;;;;;3213:1262:19:o;3661:227:54:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:54;3661:227;-1:-1:-1;;;3661:227:54:o;2956:218:3:-;3053:7;3157:8;3141:10;3133:19;;:33;;3125:3;3110:10;3102:19;;:26;;3080:9;:17;;3096:1;3080:17;;;3092:1;3080:17;3079:50;;;:88;;2956:218;-1:-1:-1;;;;2956:218:3:o;2145:730:54:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:54;;-1:-1:-1;2822:35:54;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:54;;11326:2:58;788:34:54;;;11308:21:58;11365:2;11345:18;;;11338:30;11404:26;11384:18;;;11377:54;11448:18;;788:34:54;11124:348:58;730:345:54;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:54;;11679:2:58;903:41:54;;;11661:21:58;11718:2;11698:18;;;11691:30;11757:33;11737:18;;;11730:61;11808:18;;903:41:54;11477:355:58;839:236:54;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:54;;12039:2:58;1020:44:54;;;12021:21:58;12078:2;12058:18;;;12051:30;12117:34;12097:18;;;12090:62;-1:-1:-1;;;12168:18:58;;;12161:32;12210:19;;1020:44:54;11837:398:58;5009:1456:54;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:54;;-1:-1:-1;6123:30:54;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;12467:25:58;;;12540:4;12528:17;;12508:18;;;12501:45;;;;12562:18;;;12555:34;;;12605:18;;;12598:34;;;6276:24:54;;12439:19:58;;6276:24:54;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:54;;-1:-1:-1;;6276:24:54;;;-1:-1:-1;;;;;;;6314:20:54;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:54;;-1:-1:-1;5009:1456:54;;;;;;;;:::o;14:276:58:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:58:o;295:139::-;-1:-1:-1;;;;;378:31:58;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:58:o;983:347::-;1034:8;1044:6;1098:3;1091:4;1083:6;1079:17;1075:27;1065:55;;1116:1;1113;1106:12;1065:55;-1:-1:-1;1139:20:58;;1182:18;1171:30;;1168:50;;;1214:1;1211;1204:12;1168:50;1251:4;1243:6;1239:17;1227:29;;1303:3;1296:4;1287:6;1279;1275:19;1271:30;1268:39;1265:59;;;1320:1;1317;1310:12;1335:409;1405:6;1413;1466:2;1454:9;1445:7;1441:23;1437:32;1434:52;;;1482:1;1479;1472:12;1434:52;1522:9;1509:23;1555:18;1547:6;1544:30;1541:50;;;1587:1;1584;1577:12;1541:50;1626:58;1676:7;1667:6;1656:9;1652:22;1626:58;:::i;:::-;1703:8;;1600:84;;-1:-1:-1;1335:409:58;-1:-1:-1;;;;1335:409:58:o;1749:580::-;1921:4;1950:14;2003:2;1995:6;1991:15;1980:9;1973:34;2055:2;2047:6;2043:15;2038:2;2027:9;2023:18;2016:43;;2095:2;2090;2079:9;2075:18;2068:30;2134:6;2129:2;2118:9;2114:18;2107:34;2192:6;2184;2178:3;2167:9;2163:19;2150:49;2249:1;2243:3;2234:6;2223:9;2219:22;2215:32;2208:43;2319:3;2312:2;2308:7;2303:2;2295:6;2291:15;2287:29;2276:9;2272:45;2268:55;2260:63;;1749:580;;;;;;;:::o;2334:162::-;2400:5;2445:3;2436:6;2431:3;2427:16;2423:26;2420:46;;;2462:1;2459;2452:12;2420:46;-1:-1:-1;2484:6:58;2334:162;-1:-1:-1;2334:162:58:o;2501:167::-;2568:20;;2628:14;2617:26;;2607:37;;2597:65;;2658:1;2655;2648:12;2597:65;2501:167;;;:::o;2673:512::-;2781:6;2789;2797;2850:2;2838:9;2829:7;2825:23;2821:32;2818:52;;;2866:1;2863;2856:12;2818:52;2906:9;2893:23;2939:18;2931:6;2928:30;2925:50;;;2971:1;2968;2961:12;2925:50;2994:73;3059:7;3050:6;3039:9;3035:22;2994:73;:::i;:::-;2984:83;;;3086:37;3119:2;3108:9;3104:18;3086:37;:::i;:::-;3076:47;;3142:37;3175:2;3164:9;3160:18;3142:37;:::i;:::-;3132:47;;2673:512;;;;;:::o;3372:255::-;3431:6;3484:2;3472:9;3463:7;3459:23;3455:32;3452:52;;;3500:1;3497;3490:12;3452:52;3539:9;3526:23;3558:39;3591:5;3558:39;:::i;3814:636::-;3917:6;3925;3933;3941;3994:2;3982:9;3973:7;3969:23;3965:32;3962:52;;;4010:1;4007;4000:12;3962:52;4049:9;4036:23;4088:1;4081:5;4078:12;4068:40;;4104:1;4101;4094:12;4068:40;4127:5;-1:-1:-1;4183:2:58;4168:18;;4155:32;4210:18;4199:30;;4196:50;;;4242:1;4239;4232:12;4196:50;4281:58;4331:7;4322:6;4311:9;4307:22;4281:58;:::i;:::-;3814:636;;4358:8;;-1:-1:-1;4255:84:58;;4440:2;4425:18;4412:32;;3814:636;-1:-1:-1;;;;3814:636:58:o;4951:504::-;5061:6;5069;5077;5130:2;5118:9;5109:7;5105:23;5101:32;5098:52;;;5146:1;5143;5136:12;5098:52;5186:9;5173:23;5219:18;5211:6;5208:30;5205:50;;;5251:1;5248;5241:12;5205:50;5274:73;5339:7;5330:6;5319:9;5315:22;5274:73;:::i;:::-;5264:83;5394:2;5379:18;;5366:32;;-1:-1:-1;5445:2:58;5430:18;;;5417:32;;4951:504;-1:-1:-1;;;;4951:504:58:o;5460:422::-;5501:3;5539:5;5533:12;5566:6;5561:3;5554:19;5591:1;5601:162;5615:6;5612:1;5609:13;5601:162;;;5677:4;5733:13;;;5729:22;;5723:29;5705:11;;;5701:20;;5694:59;5630:12;5601:162;;;5605:3;5808:1;5801:4;5792:6;5787:3;5783:16;5779:27;5772:38;5871:4;5864:2;5860:7;5855:2;5847:6;5843:15;5839:29;5834:3;5830:39;5826:50;5819:57;;;5460:422;;;;:::o;5887:288::-;6062:2;6051:9;6044:21;6025:4;6082:44;6122:2;6111:9;6107:18;6099:6;6082:44;:::i;:::-;6074:52;;6162:6;6157:2;6146:9;6142:18;6135:34;5887:288;;;;;:::o;6672:331::-;6777:9;6788;6830:8;6818:10;6815:24;6812:44;;;6852:1;6849;6842:12;6812:44;6881:6;6871:8;6868:20;6865:40;;;6901:1;6898;6891:12;6865:40;-1:-1:-1;;6927:23:58;;;6972:25;;;;;-1:-1:-1;6672:331:58:o;7008:256::-;7074:6;7082;7135:2;7123:9;7114:7;7110:23;7106:32;7103:52;;;7151:1;7148;7141:12;7103:52;7174:28;7192:9;7174:28;:::i;:::-;7164:38;;7221:37;7254:2;7243:9;7239:18;7221:37;:::i;:::-;7211:47;;7008:256;;;;;:::o;7269:649::-;7552:3;7541:9;7534:22;7515:4;7573:45;7613:3;7602:9;7598:19;7590:6;7573:45;:::i;:::-;7649:2;7634:18;;7627:34;;;;-1:-1:-1;;;;;;7697:32:58;;;;7692:2;7677:18;;7670:60;7761:2;7746:18;;7739:34;;;;7792:14;7843:15;;;7837:3;7822:19;;7815:44;7896:15;7717:3;7875:19;;;7868:44;7565:53;7269:649;-1:-1:-1;7269:649:58:o;8147:184::-;8217:6;8270:2;8258:9;8249:7;8245:23;8241:32;8238:52;;;8286:1;8283;8276:12;8238:52;-1:-1:-1;8309:16:58;;8147:184;-1:-1:-1;8147:184:58:o;9104:521::-;9181:4;9187:6;9247:11;9234:25;9341:2;9337:7;9326:8;9310:14;9306:29;9302:43;9282:18;9278:68;9268:96;;9360:1;9357;9350:12;9268:96;9387:33;;9439:20;;;-1:-1:-1;9482:18:58;9471:30;;9468:50;;;9514:1;9511;9504:12;9468:50;9547:4;9535:17;;-1:-1:-1;9578:14:58;9574:27;;;9564:38;;9561:58;;;9615:1;9612;9605:12;10755:232;10794:3;10815:17;;;10812:140;;10874:10;10869:3;10865:20;10862:1;10855:31;10909:4;10906:1;10899:15;10937:4;10934:1;10927:15;10812:140;-1:-1:-1;10979:1:58;10968:13;;10755:232::o;10992:127::-;11053:10;11048:3;11044:20;11041:1;11034:31;11084:4;11081:1;11074:15;11108:4;11105:1;11098:15",
    "linkReferences": {},
    "immutableReferences": {
      "155": [
        {
          "start": 622,
          "length": 32
        },
        {
          "start": 850,
          "length": 32
        },
        {
          "start": 1001,
          "length": 32
        },
        {
          "start": 1279,
          "length": 32
        },
        {
          "start": 1427,
          "length": 32
        },
        {
          "start": 1546,
          "length": 32
        },
        {
          "start": 1687,
          "length": 32
        },
        {
          "start": 2170,
          "length": 32
        }
      ],
      "5210": [
        {
          "start": 319,
          "length": 32
        },
        {
          "start": 2680,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": "94e1fc19",
    "owner()": "8da5cb5b",
    "parsePaymasterAndData(bytes)": "94d4ad60",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "senderNonce(address)": "9c90b443",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "verifyingSigner()": "23d9ac9b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"parsePaymasterAndData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"A sample paymaster that uses external service to decide whether to pay for the UserOp. The paymaster trusts an external signer to sign the transaction. The calling user must pass the UserOp to that external signer first, which performs whatever off-chain verification before signing the UserOp. Note that this signature is NOT a replacement for the account-specific signature: - the paymaster checks a signature to agree to PAY for GAS. - the account checks a signature to prove identity and account ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/VerifyingPaymaster.sol\":\"VerifyingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"contracts/samples/VerifyingPaymaster.sol\":{\"keccak256\":\"0x96791c74f4610449bba4ca8a9992e4dcdfa2c96a3872d25e1dbe47dc9585ac49\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1d132bc8ea168f340d734ceb979e701ba7461b21b6e21d961d48138e82768d19\",\"dweb:/ipfs/QmTJGeu5SbsKnnp1jBZACiB1H6jDZVwcjN9R6Y4M4tYWSB\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_verifyingSigner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parsePaymasterAndData",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "senderNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyingSigner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": {
            "notice": "return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\", which will carry the signature itself."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/samples/VerifyingPaymaster.sol": "VerifyingPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/core/BasePaymaster.sol": {
        "keccak256": "0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443",
        "urls": [
          "bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0",
          "dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq"
        ],
        "license": "GPL-3.0"
      },
      "contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456",
        "urls": [
          "bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8",
          "dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/VerifyingPaymaster.sol": {
        "keccak256": "0x96791c74f4610449bba4ca8a9992e4dcdfa2c96a3872d25e1dbe47dc9585ac49",
        "urls": [
          "bzz-raw://1d132bc8ea168f340d734ceb979e701ba7461b21b6e21d961d48138e82768d19",
          "dweb:/ipfs/QmTJGeu5SbsKnnp1jBZACiB1H6jDZVwcjN9R6Y4M4tYWSB"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/samples/VerifyingPaymaster.sol",
    "id": 5411,
    "exportedSymbols": {
      "BasePaymaster": [
        361
      ],
      "Context": [
        11111
      ],
      "ECDSA": [
        11897
      ],
      "IAggregator": [
        3436
      ],
      "IEntryPoint": [
        3640
      ],
      "INonceManager": [
        3659
      ],
      "IPaymaster": [
        3694
      ],
      "IStakeManager": [
        3799
      ],
      "Math": [
        12775
      ],
      "Ownable": [
        8794
      ],
      "SignedMath": [
        12880
      ],
      "Strings": [
        11531
      ],
      "UserOperation": [
        3826
      ],
      "UserOperationLib": [
        3996
      ],
      "ValidationData": [
        2594
      ],
      "VerifyingPaymaster": [
        5410
      ],
      "_intersectTimeRange": [
        2738
      ],
      "_packValidationData": [
        2775,
        2813
      ],
      "_parseValidationData": [
        2653
      ],
      "calldataKeccak": [
        2823
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4783:19",
    "nodes": [
      {
        "id": 5196,
        "nodeType": "PragmaDirective",
        "src": "36:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 5197,
        "nodeType": "ImportDirective",
        "src": "140:35:19",
        "nodes": [],
        "absolutePath": "contracts/core/BasePaymaster.sol",
        "file": "../core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5411,
        "sourceUnit": 362,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5198,
        "nodeType": "ImportDirective",
        "src": "176:62:19",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5411,
        "sourceUnit": 11898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5410,
        "nodeType": "ContractDefinition",
        "src": "779:4039:19",
        "nodes": [
          {
            "id": 5204,
            "nodeType": "UsingForDirective",
            "src": "831:24:19",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5202,
              "name": "ECDSA",
              "nameLocations": [
                "837:5:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11897,
              "src": "837:5:19"
            },
            "typeName": {
              "id": 5203,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 5208,
            "nodeType": "UsingForDirective",
            "src": "860:41:19",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5205,
              "name": "UserOperationLib",
              "nameLocations": [
                "866:16:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3996,
              "src": "866:16:19"
            },
            "typeName": {
              "id": 5207,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5206,
                "name": "UserOperation",
                "nameLocations": [
                  "887:13:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3826,
                "src": "887:13:19"
              },
              "referencedDeclaration": 3826,
              "src": "887:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 5210,
            "nodeType": "VariableDeclaration",
            "src": "907:40:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "23d9ac9b",
            "mutability": "immutable",
            "name": "verifyingSigner",
            "nameLocation": "932:15:19",
            "scope": 5410,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5209,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5213,
            "nodeType": "VariableDeclaration",
            "src": "954:52:19",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VALID_TIMESTAMP_OFFSET",
            "nameLocation": "979:22:19",
            "scope": 5410,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5211,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "954:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 5212,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1004:2:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "private"
          },
          {
            "id": 5216,
            "nodeType": "VariableDeclaration",
            "src": "1013:46:19",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIGNATURE_OFFSET",
            "nameLocation": "1038:16:19",
            "scope": 5410,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1013:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3834",
              "id": 5215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1057:2:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_84_by_1",
                "typeString": "int_const 84"
              },
              "value": "84"
            },
            "visibility": "private"
          },
          {
            "id": 5232,
            "nodeType": "FunctionDefinition",
            "src": "1066:141:19",
            "nodes": [],
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "1156:51:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5227,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5210,
                      "src": "1166:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5228,
                      "name": "_verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5221,
                      "src": "1184:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1166:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:34:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5224,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5219,
                    "src": "1143:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 5225,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5223,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "1129:13:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 361,
                  "src": "1129:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1129:26:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5219,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "1090:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1078:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 5218,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5217,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1078:11:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3640,
                      "src": "1078:11:19"
                    },
                    "referencedDeclaration": 3640,
                    "src": "1078:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5221,
                  "mutability": "mutable",
                  "name": "_verifyingSigner",
                  "nameLocation": "1111:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1103:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:51:19"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:19"
            },
            "scope": 5410,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5236,
            "nodeType": "VariableDeclaration",
            "src": "1213:46:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c90b443",
            "mutability": "mutable",
            "name": "senderNonce",
            "nameLocation": "1248:11:19",
            "scope": 5410,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5235,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5233,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1221:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1213:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5234,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1232:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 5251,
            "nodeType": "FunctionDefinition",
            "src": "1266:729:19",
            "nodes": [],
            "body": {
              "id": 5250,
              "nodeType": "Block",
              "src": "1352:643:19",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5245,
                      "mutability": "mutable",
                      "name": "pnd",
                      "nameLocation": "1446:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 5250,
                      "src": "1431:18:19",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5244,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1431:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5248,
                  "initialValue": {
                    "expression": {
                      "id": 5246,
                      "name": "userOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5239,
                      "src": "1452:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                        "typeString": "struct UserOperation calldata"
                      }
                    },
                    "id": 5247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1459:16:19",
                    "memberName": "paymasterAndData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3823,
                    "src": "1452:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1431:44:19"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1737:252:19",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1751:17:19",
                        "value": {
                          "name": "userOp",
                          "nodeType": "YulIdentifier",
                          "src": "1762:6:19"
                        },
                        "variables": [
                          {
                            "name": "ofs",
                            "nodeType": "YulTypedName",
                            "src": "1755:3:19",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1781:40:19",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pnd.offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1800:10:19"
                                },
                                {
                                  "name": "ofs",
                                  "nodeType": "YulIdentifier",
                                  "src": "1812:3:19"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1796:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1796:20:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1818:2:19",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1792:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1792:29:19"
                        },
                        "variables": [
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "1785:3:19",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1834:18:19",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1847:4:19",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1841:5:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1841:11:19"
                        },
                        "variableNames": [
                          {
                            "name": "ret",
                            "nodeType": "YulIdentifier",
                            "src": "1834:3:19"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:4:19",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "1882:3:19"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "1891:3:19"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1896:2:19",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1887:3:19"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1887:12:19"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1878:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1878:22:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1865:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1865:36:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1865:36:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "1921:3:19"
                            },
                            {
                              "name": "len",
                              "nodeType": "YulIdentifier",
                              "src": "1926:3:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1914:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1914:16:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1914:16:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "1960:3:19"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1965:2:19",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1956:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1956:12:19"
                            },
                            {
                              "name": "ofs",
                              "nodeType": "YulIdentifier",
                              "src": "1970:3:19"
                            },
                            {
                              "name": "len",
                              "nodeType": "YulIdentifier",
                              "src": "1975:3:19"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1943:12:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1943:36:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1943:36:19"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 5245,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "1800:10:19",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5242,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1834:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5242,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1882:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5242,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1921:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5242,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1960:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5239,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1762:6:19",
                      "valueSize": 1
                    }
                  ],
                  "id": 5249,
                  "nodeType": "InlineAssembly",
                  "src": "1728:261:19"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pack",
            "nameLocation": "1275:4:19",
            "parameters": {
              "id": 5240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5239,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1303:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5251,
                  "src": "1280:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 5238,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5237,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1280:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3826,
                      "src": "1280:13:19"
                    },
                    "referencedDeclaration": 3826,
                    "src": "1280:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:31:19"
            },
            "returnParameters": {
              "id": 5243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5242,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1347:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5251,
                  "src": "1334:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5241,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:18:19"
            },
            "scope": 5410,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5287,
            "nodeType": "FunctionDefinition",
            "src": "2409:464:19",
            "nodes": [],
            "body": {
              "id": 5286,
              "nodeType": "Block",
              "src": "2529:344:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5268,
                                "name": "userOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5255,
                                "src": "2677:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              ],
                              "id": 5267,
                              "name": "pack",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5251,
                              "src": "2672:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$3826_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
                              }
                            },
                            "id": 5269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2672:12:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 5270,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2702:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 5271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2708:7:19",
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2702:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 5274,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2741:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VerifyingPaymaster_$5410",
                                  "typeString": "contract VerifyingPaymaster"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VerifyingPaymaster_$5410",
                                  "typeString": "contract VerifyingPaymaster"
                                }
                              ],
                              "id": 5273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2733:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5272,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2733:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2733:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5276,
                              "name": "senderNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5236,
                              "src": "2764:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 5280,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 5277,
                                  "name": "userOp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5255,
                                  "src": "2776:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                                    "typeString": "struct UserOperation calldata"
                                  }
                                },
                                "id": 5278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2783:9:19",
                                "memberName": "getSender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3848,
                                "src": "2776:16:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$3826_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3826_calldata_ptr_$",
                                  "typeString": "function (struct UserOperation calldata) pure returns (address)"
                                }
                              },
                              "id": 5279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2776:18:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2764:31:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5281,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5257,
                            "src": "2813:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 5282,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5259,
                            "src": "2841:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "expression": {
                            "id": 5265,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2644:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2648:6:19",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2644:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2644:221:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5264,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2634:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2634:232:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5263,
                  "id": 5285,
                  "nodeType": "Return",
                  "src": "2627:239:19"
                }
              ]
            },
            "documentation": {
              "id": 5252,
              "nodeType": "StructuredDocumentation",
              "src": "2001:403:19",
              "text": " return the hash we're going to sign off-chain (and validate on-chain)\n this method is called by the off-chain service, to sign the request.\n it is called on-chain from the validatePaymasterUserOp, to validate the signature.\n note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n which will carry the signature itself."
            },
            "functionSelector": "94e1fc19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHash",
            "nameLocation": "2418:7:19",
            "parameters": {
              "id": 5260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5255,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "2449:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5287,
                  "src": "2426:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 5254,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5253,
                      "name": "UserOperation",
                      "nameLocations": [
                        "2426:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3826,
                      "src": "2426:13:19"
                    },
                    "referencedDeclaration": 3826,
                    "src": "2426:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5257,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2464:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5287,
                  "src": "2457:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 5256,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2457:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5259,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "2483:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5287,
                  "src": "2476:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 5258,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2425:69:19"
            },
            "returnParameters": {
              "id": 5263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5287,
                  "src": "2520:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5261,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2519:9:19"
            },
            "scope": 5410,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5374,
            "nodeType": "FunctionDefinition",
            "src": "3213:1262:19",
            "nodes": [],
            "body": {
              "id": 5373,
              "nodeType": "Block",
              "src": "3404:1071:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 5303,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5295,
                        "src": "3415:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5304,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3414:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5305,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:17:19"
                },
                {
                  "assignments": [
                    5307,
                    5309,
                    5311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5307,
                      "mutability": "mutable",
                      "name": "validUntil",
                      "nameLocation": "3450:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 5373,
                      "src": "3443:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 5306,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "3443:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5309,
                      "mutability": "mutable",
                      "name": "validAfter",
                      "nameLocation": "3469:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 5373,
                      "src": "3462:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 5308,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "3462:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5311,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "3496:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 5373,
                      "src": "3481:24:19",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5310,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3481:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5316,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5313,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5291,
                          "src": "3531:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 5314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3538:16:19",
                        "memberName": "paymasterAndData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3823,
                        "src": "3531:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 5312,
                      "name": "parsePaymasterAndData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5409,
                      "src": "3509:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (uint48,uint48,bytes calldata)"
                      }
                    },
                    "id": 5315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3509:46:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(uint48,uint48,bytes calldata)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3442:113:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5318,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5311,
                              "src": "3776:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 5319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3786:6:19",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3776:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3634",
                            "id": 5320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3796:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "value": "64"
                          },
                          "src": "3776:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5322,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5311,
                              "src": "3802:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 5323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3812:6:19",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3802:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 5324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3822:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "3802:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3776:48:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566572696679696e675061796d61737465723a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461",
                        "id": 5327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3826:66:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
                          "typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
                        },
                        "value": "VerifyingPaymaster: invalid signature length in paymasterAndData"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
                          "typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
                        }
                      ],
                      "id": 5317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3768:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:125:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5329,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:125:19"
                },
                {
                  "assignments": [
                    5331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5331,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "3911:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 5373,
                      "src": "3903:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5330,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3903:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5340,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5335,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5291,
                            "src": "3955:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          {
                            "id": 5336,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5307,
                            "src": "3963:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 5337,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5309,
                            "src": "3975:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "id": 5334,
                          "name": "getHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5287,
                          "src": "3947:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_UserOperation_$3826_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes32_$",
                            "typeString": "function (struct UserOperation calldata,uint48,uint48) view returns (bytes32)"
                          }
                        },
                        "id": 5338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3947:39:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 5332,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11897,
                        "src": "3918:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$11897_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 5333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3924:22:19",
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11842,
                      "src": "3918:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 5339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3918:69:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3903:84:19"
                },
                {
                  "expression": {
                    "id": 5346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3997:33:19",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5341,
                        "name": "senderNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5236,
                        "src": "3997:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5345,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 5342,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5291,
                            "src": "4009:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 5343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4016:9:19",
                          "memberName": "getSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3848,
                          "src": "4009:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$3826_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3826_calldata_ptr_$",
                            "typeString": "function (struct UserOperation calldata) pure returns (address)"
                          }
                        },
                        "id": 5344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4009:18:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3997:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5347,
                  "nodeType": "ExpressionStatement",
                  "src": "3997:33:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5348,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5210,
                      "src": "4119:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5351,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5331,
                          "src": "4152:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 5352,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5311,
                          "src": "4158:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 5349,
                          "name": "ECDSA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11897,
                          "src": "4138:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ECDSA_$11897_$",
                            "typeString": "type(library ECDSA)"
                          }
                        },
                        "id": 5350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4144:7:19",
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11658,
                        "src": "4138:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 5353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4138:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4119:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5364,
                  "nodeType": "IfStatement",
                  "src": "4115:139:19",
                  "trueBody": {
                    "id": 5363,
                    "nodeType": "Block",
                    "src": "4170:84:19",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 5355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4192:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "74727565",
                                  "id": 5357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4215:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 5358,
                                  "name": "validUntil",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5307,
                                  "src": "4220:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                {
                                  "id": 5359,
                                  "name": "validAfter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5309,
                                  "src": "4231:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                ],
                                "id": 5356,
                                "name": "_packValidationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2775,
                                  2813
                                ],
                                "referencedDeclaration": 2813,
                                "src": "4195:19:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
                                  "typeString": "function (bool,uint48,uint48) pure returns (uint256)"
                                }
                              },
                              "id": 5360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4195:47:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5361,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4191:52:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
                            "typeString": "tuple(literal_string \"\",uint256)"
                          }
                        },
                        "functionReturnParameters": 5302,
                        "id": 5362,
                        "nodeType": "Return",
                        "src": "4184:59:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 5365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 5367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4439:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 5368,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5307,
                            "src": "4445:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 5369,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5309,
                            "src": "4456:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "id": 5366,
                          "name": "_packValidationData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2775,
                            2813
                          ],
                          "referencedDeclaration": 2813,
                          "src": "4419:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
                            "typeString": "function (bool,uint48,uint48) pure returns (uint256)"
                          }
                        },
                        "id": 5370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4419:48:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5371,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4415:53:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
                      "typeString": "tuple(literal_string \"\",uint256)"
                    }
                  },
                  "functionReturnParameters": 5302,
                  "id": 5372,
                  "nodeType": "Return",
                  "src": "4408:60:19"
                }
              ]
            },
            "baseFunctions": [
              206
            ],
            "documentation": {
              "id": 5288,
              "nodeType": "StructuredDocumentation",
              "src": "2879:329:19",
              "text": " verify our external signer signed this request.\n the \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\n paymasterAndData[:20] : address(this)\n paymasterAndData[20:84] : abi.encode(validUntil, validAfter)\n paymasterAndData[84:] : signature"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validatePaymasterUserOp",
            "nameLocation": "3222:24:19",
            "overrides": {
              "id": 5297,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3340:8:19"
            },
            "parameters": {
              "id": 5296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5291,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "3270:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5374,
                  "src": "3247:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 5290,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5289,
                      "name": "UserOperation",
                      "nameLocations": [
                        "3247:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3826,
                      "src": "3247:13:19"
                    },
                    "referencedDeclaration": 3826,
                    "src": "3247:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5374,
                  "src": "3278:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5292,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5295,
                  "mutability": "mutable",
                  "name": "requiredPreFund",
                  "nameLocation": "3310:15:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5374,
                  "src": "3302:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3246:80:19"
            },
            "returnParameters": {
              "id": 5302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5299,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "3371:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5374,
                  "src": "3358:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5298,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5301,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "3388:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5374,
                  "src": "3380:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3357:46:19"
            },
            "scope": 5410,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5409,
            "nodeType": "FunctionDefinition",
            "src": "4481:335:19",
            "nodes": [],
            "body": {
              "id": 5408,
              "nodeType": "Block",
              "src": "4629:187:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 5385,
                          "name": "validUntil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5379,
                          "src": "4640:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "id": 5386,
                          "name": "validAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5381,
                          "src": "4652:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "id": 5387,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4639:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
                        "typeString": "tuple(uint48,uint48)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 5390,
                            "name": "paymasterAndData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5376,
                            "src": "4677:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "id": 5392,
                            "name": "SIGNATURE_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5216,
                            "src": "4717:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "4677:57:19",
                          "startExpression": {
                            "id": 5391,
                            "name": "VALID_TIMESTAMP_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5213,
                            "src": "4694:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 5395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4736:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 5394,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "4736:6:19",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 5397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4744:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 5396,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "4744:6:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 5398,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4735:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
                            "typeString": "tuple(type(uint48),type(uint48))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
                            "typeString": "tuple(type(uint48),type(uint48))"
                          }
                        ],
                        "expression": {
                          "id": 5388,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "4666:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 5389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4670:6:19",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "4666:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4666:86:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
                        "typeString": "tuple(uint48,uint48)"
                      }
                    },
                    "src": "4639:113:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5401,
                  "nodeType": "ExpressionStatement",
                  "src": "4639:113:19"
                },
                {
                  "expression": {
                    "id": 5406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5402,
                      "name": "signature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "4762:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 5403,
                        "name": "paymasterAndData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5376,
                        "src": "4774:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 5405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexRangeAccess",
                      "src": "4774:35:19",
                      "startExpression": {
                        "id": 5404,
                        "name": "SIGNATURE_OFFSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5216,
                        "src": "4791:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr_slice",
                        "typeString": "bytes calldata slice"
                      }
                    },
                    "src": "4762:47:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 5407,
                  "nodeType": "ExpressionStatement",
                  "src": "4762:47:19"
                }
              ]
            },
            "functionSelector": "94d4ad60",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parsePaymasterAndData",
            "nameLocation": "4490:21:19",
            "parameters": {
              "id": 5377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5376,
                  "mutability": "mutable",
                  "name": "paymasterAndData",
                  "nameLocation": "4527:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5409,
                  "src": "4512:31:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5375,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4512:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4511:33:19"
            },
            "returnParameters": {
              "id": 5384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5379,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "4572:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5409,
                  "src": "4565:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 5378,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4565:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5381,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "4591:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5409,
                  "src": "4584:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 5380,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4584:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5383,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "4618:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5409,
                  "src": "4603:24:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5382,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4603:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4564:64:19"
            },
            "scope": 5410,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5200,
              "name": "BasePaymaster",
              "nameLocations": [
                "810:13:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 361,
              "src": "810:13:19"
            },
            "id": 5201,
            "nodeType": "InheritanceSpecifier",
            "src": "810:13:19"
          }
        ],
        "canonicalName": "VerifyingPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5199,
          "nodeType": "StructuredDocumentation",
          "src": "239:539:19",
          "text": " A sample paymaster that uses external service to decide whether to pay for the UserOp.\n The paymaster trusts an external signer to sign the transaction.\n The calling user must pass the UserOp to that external signer first, which performs\n whatever off-chain verification before signing the UserOp.\n Note that this signature is NOT a replacement for the account-specific signature:\n - the paymaster checks a signature to agree to PAY for GAS.\n - the account checks a signature to prove identity and account ownership."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5410,
          361,
          8794,
          11111,
          3694
        ],
        "name": "VerifyingPaymaster",
        "nameLocation": "788:18:19",
        "scope": 5411,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 19
}