{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COST_OF_POST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addDepositFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "contract IOracle",
          "name": "tokenPriceOracle",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "depositInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unlockBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTokenDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracles",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unlockBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockTokenDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokensTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051620018f6380380620018f6833981016040819052610031916100b4565b8061003b33610064565b6001600160a01b031660805261005e336000908152600360205260409020439055565b506100e4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c657600080fd5b81516001600160a01b03811681146100dd57600080fd5b9392505050565b6080516117c5620001316000396000818161033f0152818161049d015281816105340152818161071d015281816107b1015281816108280152818161098c0152610b9501526117c56000f3fe6080604052600436106101355760003560e01c8063addd5099116100ab578063c399ec881161006f578063c399ec88146103ce578063cc9c837c146103e3578063cd8f80c214610403578063d0e30db014610425578063f2fde38b1461042d578063f465c77e1461044d57600080fd5b8063addd5099146102f7578063b0d691fe1461032d578063bb9fe6bf14610361578063c23a5cea14610376578063c23f001f1461039657600080fd5b80635476bd72116100fd5780635476bd7214610236578063715018a614610256578063796d43711461026b5780638da5cb5b146102815780639ed0fb68146102b3578063a9a23409146102d757600080fd5b80630396cb601461013a578063205c28781461014f578063382edd9e1461016f578063493b01701461018f5780634a6f84cf146101fb575b600080fd5b61014d610148366004611349565b61047b565b005b34801561015b57600080fd5b5061014d61016a366004611384565b610506565b34801561017b57600080fd5b5061014d61018a3660046113b0565b610578565b34801561019b57600080fd5b506101e16101aa3660046113f1565b6001600160a01b03918216600090815260026020908152604080832093909416825291825282812054600390925291909120549091565b604080519283526020830191909152015b60405180910390f35b34801561020757600080fd5b5061022861021636600461142a565b60036020526000908152604090205481565b6040519081526020016101f2565b34801561024257600080fd5b5061014d6102513660046113f1565b610653565b34801561026257600080fd5b5061014d6106e5565b34801561027757600080fd5b506102286188b881565b34801561028d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101f2565b3480156102bf57600080fd5b5061014d336000908152600360205260409020439055565b3480156102e357600080fd5b5061014d6102f2366004611447565b6106f9565b34801561030357600080fd5b5061029b61031236600461142a565b6001602052600090815260409020546001600160a01b031681565b34801561033957600080fd5b5061029b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036d57600080fd5b5061014d610713565b34801561038257600080fd5b5061014d61039136600461142a565b61078a565b3480156103a257600080fd5b506102286103b13660046113f1565b600260209081526000928352604080842090915290825290205481565b3480156103da57600080fd5b50610228610810565b3480156103ef57600080fd5b5061014d6103fe3660046113b0565b6108a0565b34801561040f57600080fd5b5061014d33600090815260036020526040812055565b61014d610977565b34801561043957600080fd5b5061014d61044836600461142a565b6109d9565b34801561045957600080fd5b5061046d6104683660046114d6565b610a52565b6040516101f292919061157a565b610483610a75565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b505050505050565b61050e610a75565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156104ea57600080fd5b6001600160a01b03838116600090815260016020526040902054166105d85760405162461bcd60e51b81526020600482015260116024820152703ab739bab83837b93a32b2103a37b5b2b760791b60448201526064015b60405180910390fd5b6105ed6001600160a01b038416333084610acf565b6001600160a01b038084166000908152600260209081526040808320938616835292905290812080548392906106249084906115b2565b90915550506001600160a01b038216330361064e5761064e33600090815260036020526040812055565b505050565b61065b610a75565b6001600160a01b0382811660009081526001602052604090205416156106b75760405162461bcd60e51b8152602060048201526011602482015270151bdad95b88185b1c9958591e481cd95d607a1b60448201526064016105cf565b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6106ed610a75565b6106f76000610b3a565b565b610701610b8a565b61070d84848484610bfa565b50505050565b61071b610a75565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561077657600080fd5b505af115801561070d573d6000803e3d6000fd5b610792610a75565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b1580156107f557600080fd5b505af1158015610809573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089b91906115c5565b905090565b33600090815260036020526040902054158015906108cc57503360009081526003602052604090205443115b61092a5760405162461bcd60e51b815260206004820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b604482015268195b91195c1bdcda5d60ba1b60648201526084016105cf565b6001600160a01b03831660009081526002602090815260408083203384529091528120805483929061095d9084906115de565b9091555061064e90506001600160a01b0384168383610d24565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b1580156107f557600080fd5b6109e1610a75565b6001600160a01b038116610a465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b610a4f81610b3a565b50565b60606000610a5e610b8a565b610a69858585610d54565b91509150935093915050565b6000546001600160a01b031633146106f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cf565b6040516001600160a01b038085166024830152831660448201526064810182905261070d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610fbc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106f75760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016105cf565b600080808080610c0c878901896115f1565b9450945094509450945060008183856188b8610c289190611642565b610c32908a6115b2565b610c3c9190611642565b610c469190611659565b905060028a6002811115610c5c57610c5c61167b565b14610c7b57610c766001600160a01b038616873084610acf565b610cb8565b6001600160a01b038086166000908152600260209081526040808320938a1683529290529081208054839290610cb29084906115de565b90915550505b6001600160a01b03851660009081526002602052604081208291610ce46000546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d1391906115b2565b909155505050505050505050505050565b6040516001600160a01b03831660248201526044810182905261064e90849063a9059cbb60e01b90606401610b03565b606060006188b88560a0013511610dbe5760405162461bcd60e51b815260206004820152602860248201527f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f60448201526707220706f73744f760c41b60648201526084016105cf565b366000610dcf610120880188611691565b909250905060288114610e425760405162461bcd60e51b815260206004820152603560248201527f4465706f7369745061796d61737465723a207061796d6173746572416e6444616044820152743a309036bab9ba1039b832b1b4b33c903a37b5b2b760591b60648201526084016105cf565b6000610e5182601481866116df565b610e5a91611709565b60601c905087356000610e6d8389611091565b90506000610e7a8b61117a565b6001600160a01b03841660009081526003602052604090205490915015610eef5760405162461bcd60e51b8152602060048201526024808201527f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f60448201526318dad95960e21b60648201526084016105cf565b6001600160a01b03808516600090815260026020908152604080832093871683529290522054821115610f6e5760405162461bcd60e51b815260206004820152602160248201527f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f6044820152607760f81b60648201526084016105cf565b604080516001600160a01b03948516602082015294909316848401526060840152608083015260a0808301979097528051808303909701875260c09091019052509295600095509350505050565b6000611011826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111a99092919063ffffffff16565b9050805160001480611032575080806020019051810190611032919061173e565b61064e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105cf565b6001600160a01b03808316600090815260016020526040812054909116806111075760405162461bcd60e51b815260206004820152602360248201527f4465706f7369745061796d61737465723a20756e737570706f7274656420746f60448201526235b2b760e91b60648201526084016105cf565b60405163d1eca9cf60e01b8152600481018490526001600160a01b0382169063d1eca9cf90602401602060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117091906115c5565b9150505b92915050565b600060e0820135610100830135808203611195575092915050565b6111a1824883016111b8565b949350505050565b60606111a184846000856111d0565b60008183106111c757816111c9565b825b9392505050565b6060824710156112315760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105cf565b600080866001600160a01b0316858760405161124d9190611760565b60006040518083038185875af1925050503d806000811461128a576040519150601f19603f3d011682016040523d82523d6000602084013e61128f565b606091505b50915091506112a0878383876112ab565b979650505050505050565b6060831561131a578251600003611313576001600160a01b0385163b6113135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105cf565b50816111a1565b6111a1838381511561132f5781518083602001fd5b8060405162461bcd60e51b81526004016105cf919061177c565b60006020828403121561135b57600080fd5b813563ffffffff811681146111c957600080fd5b6001600160a01b0381168114610a4f57600080fd5b6000806040838503121561139757600080fd5b82356113a28161136f565b946020939093013593505050565b6000806000606084860312156113c557600080fd5b83356113d08161136f565b925060208401356113e08161136f565b929592945050506040919091013590565b6000806040838503121561140457600080fd5b823561140f8161136f565b9150602083013561141f8161136f565b809150509250929050565b60006020828403121561143c57600080fd5b81356111c98161136f565b6000806000806060858703121561145d57600080fd5b84356003811061146c57600080fd5b9350602085013567ffffffffffffffff8082111561148957600080fd5b818701915087601f83011261149d57600080fd5b8135818111156114ac57600080fd5b8860208285010111156114be57600080fd5b95986020929092019750949560400135945092505050565b6000806000606084860312156114eb57600080fd5b833567ffffffffffffffff81111561150257600080fd5b8401610160818703121561151557600080fd5b95602085013595506040909401359392505050565b60005b8381101561154557818101518382015260200161152d565b50506000910152565b6000815180845261156681602086016020860161152a565b601f01601f19169290920160200192915050565b60408152600061158d604083018561154e565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156111745761117461159c565b6000602082840312156115d757600080fd5b5051919050565b818103818111156111745761117461159c565b600080600080600060a0868803121561160957600080fd5b85356116148161136f565b945060208601356116248161136f565b94979496505050506040830135926060810135926080909101359150565b80820281158282048414176111745761117461159c565b60008261167657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6000808335601e198436030181126116a857600080fd5b83018035915067ffffffffffffffff8211156116c357600080fd5b6020019150368190038213156116d857600080fd5b9250929050565b600080858511156116ef57600080fd5b838611156116fc57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156117365780818660140360031b1b83161692505b505092915050565b60006020828403121561175057600080fd5b815180151581146111c957600080fd5b6000825161177281846020870161152a565b9190910192915050565b6020815260006111c9602083018461154e56fea26469706673582212205a3a924f8a69064fc47f3de39b5a4a100ddd6911750932f07ef507a25cd6671c64736f6c63430008130033",
    "sourceMap": "1215:6492:14:-:0;;;1663:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1714:11;936:32:31;719:10:50;936:18:31;:32::i;:::-;-1:-1:-1;;;;;564:24:1;;;1809:20:14::1;3629:10:::0;3617:23;;;;:11;:23;;;;;3643:12;3617:38;;3570:92;1809:20:::1;1663:173:::0;1215:6492;;2426:187:31;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:31;;;-1:-1:-1;;;;;;2534:17:31;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:310:58:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:58;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:58:o;:::-;1215:6492:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101355760003560e01c8063addd5099116100ab578063c399ec881161006f578063c399ec88146103ce578063cc9c837c146103e3578063cd8f80c214610403578063d0e30db014610425578063f2fde38b1461042d578063f465c77e1461044d57600080fd5b8063addd5099146102f7578063b0d691fe1461032d578063bb9fe6bf14610361578063c23a5cea14610376578063c23f001f1461039657600080fd5b80635476bd72116100fd5780635476bd7214610236578063715018a614610256578063796d43711461026b5780638da5cb5b146102815780639ed0fb68146102b3578063a9a23409146102d757600080fd5b80630396cb601461013a578063205c28781461014f578063382edd9e1461016f578063493b01701461018f5780634a6f84cf146101fb575b600080fd5b61014d610148366004611349565b61047b565b005b34801561015b57600080fd5b5061014d61016a366004611384565b610506565b34801561017b57600080fd5b5061014d61018a3660046113b0565b610578565b34801561019b57600080fd5b506101e16101aa3660046113f1565b6001600160a01b03918216600090815260026020908152604080832093909416825291825282812054600390925291909120549091565b604080519283526020830191909152015b60405180910390f35b34801561020757600080fd5b5061022861021636600461142a565b60036020526000908152604090205481565b6040519081526020016101f2565b34801561024257600080fd5b5061014d6102513660046113f1565b610653565b34801561026257600080fd5b5061014d6106e5565b34801561027757600080fd5b506102286188b881565b34801561028d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101f2565b3480156102bf57600080fd5b5061014d336000908152600360205260409020439055565b3480156102e357600080fd5b5061014d6102f2366004611447565b6106f9565b34801561030357600080fd5b5061029b61031236600461142a565b6001602052600090815260409020546001600160a01b031681565b34801561033957600080fd5b5061029b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036d57600080fd5b5061014d610713565b34801561038257600080fd5b5061014d61039136600461142a565b61078a565b3480156103a257600080fd5b506102286103b13660046113f1565b600260209081526000928352604080842090915290825290205481565b3480156103da57600080fd5b50610228610810565b3480156103ef57600080fd5b5061014d6103fe3660046113b0565b6108a0565b34801561040f57600080fd5b5061014d33600090815260036020526040812055565b61014d610977565b34801561043957600080fd5b5061014d61044836600461142a565b6109d9565b34801561045957600080fd5b5061046d6104683660046114d6565b610a52565b6040516101f292919061157a565b610483610a75565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b505050505050565b61050e610a75565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156104ea57600080fd5b6001600160a01b03838116600090815260016020526040902054166105d85760405162461bcd60e51b81526020600482015260116024820152703ab739bab83837b93a32b2103a37b5b2b760791b60448201526064015b60405180910390fd5b6105ed6001600160a01b038416333084610acf565b6001600160a01b038084166000908152600260209081526040808320938616835292905290812080548392906106249084906115b2565b90915550506001600160a01b038216330361064e5761064e33600090815260036020526040812055565b505050565b61065b610a75565b6001600160a01b0382811660009081526001602052604090205416156106b75760405162461bcd60e51b8152602060048201526011602482015270151bdad95b88185b1c9958591e481cd95d607a1b60448201526064016105cf565b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6106ed610a75565b6106f76000610b3a565b565b610701610b8a565b61070d84848484610bfa565b50505050565b61071b610a75565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561077657600080fd5b505af115801561070d573d6000803e3d6000fd5b610792610a75565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b1580156107f557600080fd5b505af1158015610809573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089b91906115c5565b905090565b33600090815260036020526040902054158015906108cc57503360009081526003602052604090205443115b61092a5760405162461bcd60e51b815260206004820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b604482015268195b91195c1bdcda5d60ba1b60648201526084016105cf565b6001600160a01b03831660009081526002602090815260408083203384529091528120805483929061095d9084906115de565b9091555061064e90506001600160a01b0384168383610d24565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b1580156107f557600080fd5b6109e1610a75565b6001600160a01b038116610a465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b610a4f81610b3a565b50565b60606000610a5e610b8a565b610a69858585610d54565b91509150935093915050565b6000546001600160a01b031633146106f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cf565b6040516001600160a01b038085166024830152831660448201526064810182905261070d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610fbc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106f75760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016105cf565b600080808080610c0c878901896115f1565b9450945094509450945060008183856188b8610c289190611642565b610c32908a6115b2565b610c3c9190611642565b610c469190611659565b905060028a6002811115610c5c57610c5c61167b565b14610c7b57610c766001600160a01b038616873084610acf565b610cb8565b6001600160a01b038086166000908152600260209081526040808320938a1683529290529081208054839290610cb29084906115de565b90915550505b6001600160a01b03851660009081526002602052604081208291610ce46000546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d1391906115b2565b909155505050505050505050505050565b6040516001600160a01b03831660248201526044810182905261064e90849063a9059cbb60e01b90606401610b03565b606060006188b88560a0013511610dbe5760405162461bcd60e51b815260206004820152602860248201527f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f60448201526707220706f73744f760c41b60648201526084016105cf565b366000610dcf610120880188611691565b909250905060288114610e425760405162461bcd60e51b815260206004820152603560248201527f4465706f7369745061796d61737465723a207061796d6173746572416e6444616044820152743a309036bab9ba1039b832b1b4b33c903a37b5b2b760591b60648201526084016105cf565b6000610e5182601481866116df565b610e5a91611709565b60601c905087356000610e6d8389611091565b90506000610e7a8b61117a565b6001600160a01b03841660009081526003602052604090205490915015610eef5760405162461bcd60e51b8152602060048201526024808201527f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f60448201526318dad95960e21b60648201526084016105cf565b6001600160a01b03808516600090815260026020908152604080832093871683529290522054821115610f6e5760405162461bcd60e51b815260206004820152602160248201527f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f6044820152607760f81b60648201526084016105cf565b604080516001600160a01b03948516602082015294909316848401526060840152608083015260a0808301979097528051808303909701875260c09091019052509295600095509350505050565b6000611011826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111a99092919063ffffffff16565b9050805160001480611032575080806020019051810190611032919061173e565b61064e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105cf565b6001600160a01b03808316600090815260016020526040812054909116806111075760405162461bcd60e51b815260206004820152602360248201527f4465706f7369745061796d61737465723a20756e737570706f7274656420746f60448201526235b2b760e91b60648201526084016105cf565b60405163d1eca9cf60e01b8152600481018490526001600160a01b0382169063d1eca9cf90602401602060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117091906115c5565b9150505b92915050565b600060e0820135610100830135808203611195575092915050565b6111a1824883016111b8565b949350505050565b60606111a184846000856111d0565b60008183106111c757816111c9565b825b9392505050565b6060824710156112315760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105cf565b600080866001600160a01b0316858760405161124d9190611760565b60006040518083038185875af1925050503d806000811461128a576040519150601f19603f3d011682016040523d82523d6000602084013e61128f565b606091505b50915091506112a0878383876112ab565b979650505050505050565b6060831561131a578251600003611313576001600160a01b0385163b6113135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105cf565b50816111a1565b6111a1838381511561132f5781518083602001fd5b8060405162461bcd60e51b81526004016105cf919061177c565b60006020828403121561135b57600080fd5b813563ffffffff811681146111c957600080fd5b6001600160a01b0381168114610a4f57600080fd5b6000806040838503121561139757600080fd5b82356113a28161136f565b946020939093013593505050565b6000806000606084860312156113c557600080fd5b83356113d08161136f565b925060208401356113e08161136f565b929592945050506040919091013590565b6000806040838503121561140457600080fd5b823561140f8161136f565b9150602083013561141f8161136f565b809150509250929050565b60006020828403121561143c57600080fd5b81356111c98161136f565b6000806000806060858703121561145d57600080fd5b84356003811061146c57600080fd5b9350602085013567ffffffffffffffff8082111561148957600080fd5b818701915087601f83011261149d57600080fd5b8135818111156114ac57600080fd5b8860208285010111156114be57600080fd5b95986020929092019750949560400135945092505050565b6000806000606084860312156114eb57600080fd5b833567ffffffffffffffff81111561150257600080fd5b8401610160818703121561151557600080fd5b95602085013595506040909401359392505050565b60005b8381101561154557818101518382015260200161152d565b50506000910152565b6000815180845261156681602086016020860161152a565b601f01601f19169290920160200192915050565b60408152600061158d604083018561154e565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156111745761117461159c565b6000602082840312156115d757600080fd5b5051919050565b818103818111156111745761117461159c565b600080600080600060a0868803121561160957600080fd5b85356116148161136f565b945060208601356116248161136f565b94979496505050506040830135926060810135926080909101359150565b80820281158282048414176111745761117461159c565b60008261167657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6000808335601e198436030181126116a857600080fd5b83018035915067ffffffffffffffff8211156116c357600080fd5b6020019150368190038213156116d857600080fd5b9250929050565b600080858511156116ef57600080fd5b838611156116fc57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156117365780818660140360031b1b83161692505b505092915050565b60006020828403121561175057600080fd5b815180151581146111c957600080fd5b6000825161177281846020870161152a565b9190910192915050565b6020815260006111c9602083018461154e56fea26469706673582212205a3a924f8a69064fc47f3de39b5a4a100ddd6911750932f07ef507a25cd6671c64736f6c63430008130033",
    "sourceMap": "1215:6492:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:141:1;;;;;;:::i;:::-;;:::i;:::-;;2721:149;;;;;;;;;;-1:-1:-1;2721:149:1;;;;;:::i;:::-;;:::i;2646:401:14:-;;;;;;;;;;-1:-1:-1;2646:401:14;;;;;:::i;:::-;;:::i;3233:206::-;;;;;;;;;;-1:-1:-1;3233:206:14;;;;;:::i;:::-;-1:-1:-1;;;;;3363:15:14;;;3306:14;3363:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;3412:11;:20;;;;;;;;3363:24;;3233:206;;;;;1867:25:58;;;1923:2;1908:18;;1901:34;;;;1840:18;3233:206:14;;;;;;;;1610:46;;;;;;;;;;-1:-1:-1;1610:46:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2352:25:58;;;2340:2;2325:18;1610:46:14;2206:177:58;1916:196:14;;;;;;;;;;-1:-1:-1;1916:196:14;;;;;:::i;:::-;;:::i;1824:101:31:-;;;;;;;;;;;;;:::i;1380:44:14:-;;;;;;;;;;;;1419:5;1380:44;;1201:85:31;;;;;;;;;;-1:-1:-1;1247:7:31;1273:6;-1:-1:-1;;;;;1273:6:31;1201:85;;;-1:-1:-1;;;;;2993:32:58;;;2975:51;;2963:2;2948:18;1201:85:31;2829:203:58;3570:92:14;;;;;;;;;;;;3629:10;3617:23;;;;:11;:23;;;;;3643:12;3617:38;;3570:92;1143:186:1;;;;;;;;;;-1:-1:-1;1143:186:1;;;;;:::i;:::-;;:::i;1495:41:14:-;;;;;;;;;;-1:-1:-1;1495:41:14;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1495:41:14;;;471:39:1;;;;;;;;;;;;;;;3588:83;;;;;;;;;;;;;:::i;3890:133::-;;;;;;;;;;-1:-1:-1;3890:133:1;;;;;:::i;:::-;;:::i;1542:62:14:-;;;;;;;;;;-1:-1:-1;1542:62:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3318:111:1;;;;;;;;;;;;;:::i;4206:311:14:-;;;;;;;;;;-1:-1:-1;4206:311:14;;;;;:::i;:::-;;:::i;3879:79::-;;;;;;;;;;;;3936:10;3950:1;3924:23;;;:11;:23;;;;;:27;3879:79;2474:105:1;;;:::i;2074:198:31:-;;;;;;;;;;-1:-1:-1;2074:198:31;;;;;:::i;:::-;;:::i;632:290:1:-;;;;;;;;;;-1:-1:-1;632:290:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3094:141::-;1094:13:31;:11;:13::i;:::-;3173:55:1::1;::::0;-1:-1:-1;;;3173:55:1;;6387:10:58;6375:23;;3173:55:1::1;::::0;::::1;6357:42:58::0;3173:10:1::1;-1:-1:-1::0;;;;;3173:19:1::1;::::0;::::1;::::0;3201:9:::1;::::0;6330:18:58;;3173:55:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3094:141:::0;:::o;2721:149::-;1094:13:31;:11;:13::i;:::-;2817:46:1::1;::::0;-1:-1:-1;;;2817:46:1;;-1:-1:-1;;;;;6618:32:58;;;2817:46:1::1;::::0;::::1;6600:51:58::0;6667:18;;;6660:34;;;2817:10:1::1;:21;::::0;::::1;::::0;6573:18:58;;2817:46:1::1;;;;;;;;;;;;;;;;;::::0;::::1;2646:401:14::0;-1:-1:-1;;;;;2743:14:14;;;1486:1;2743:14;;;:7;:14;;;;;;;2735:59;;;;-1:-1:-1;;;2735:59:14;;6907:2:58;2735:59:14;;;6889:21:58;6946:2;6926:18;;;6919:30;-1:-1:-1;;;6965:18:58;;;6958:47;7022:18;;2735:59:14;;;;;;;;;2860:57;-1:-1:-1;;;;;2860:22:14;;2883:10;2903:4;2910:6;2860:22;:57::i;:::-;-1:-1:-1;;;;;2927:15:14;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;:34;;2955:6;;2927:15;:34;;2955:6;;2927:34;:::i;:::-;;;;-1:-1:-1;;;;;;;2975:21:14;;:10;:21;2971:70;;3012:18;3936:10;3950:1;3924:23;;;:11;:23;;;;;:27;3879:79;3012:18;2646:401;;;:::o;1916:196::-;1094:13:31;:11;:13::i;:::-;-1:-1:-1;;;;;2011:14:14;;::::1;1486:1;2011:14:::0;;;:7:::1;:14;::::0;;;;;::::1;:29:::0;2003:59:::1;;;::::0;-1:-1:-1;;;2003:59:14;;7515:2:58;2003:59:14::1;::::0;::::1;7497:21:58::0;7554:2;7534:18;;;7527:30;-1:-1:-1;;;7573:18:58;;;7566:47;7630:18;;2003:59:14::1;7313:341:58::0;2003:59:14::1;-1:-1:-1::0;;;;;2072:14:14;;::::1;;::::0;;;:7:::1;:14;::::0;;;;:33;;-1:-1:-1;;;;;;2072:33:14::1;::::0;;;::::1;;::::0;;1916:196::o;1824:101:31:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1143:186:1:-;1251:24;:22;:24::i;:::-;1285:37;1293:4;1299:7;;1308:13;1285:7;:37::i;:::-;1143:186;;;;:::o;3588:83::-;1094:13:31;:11;:13::i;:::-;3640:10:1::1;-1:-1:-1::0;;;;;3640:22:1::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3890:133:::0;1094:13:31;:11;:13::i;:::-;3975:41:1::1;::::0;-1:-1:-1;;;3975:41:1;;-1:-1:-1;;;;;2993:32:58;;;3975:41:1::1;::::0;::::1;2975:51:58::0;3975:10:1::1;:24;::::0;::::1;::::0;2948:18:58;;3975:41:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3890:133:::0;:::o;3318:111::-;3387:35;;-1:-1:-1;;;3387:35:1;;3416:4;3387:35;;;2975:51:58;3361:7:1;;3387:10;-1:-1:-1;;;;;3387:20:1;;;;2948:18:58;;3387:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3380:42;;3318:111;:::o;4206:311:14:-;4315:10;4303:23;;;;:11;:23;;;;;;:28;;;;:70;;-1:-1:-1;4362:10:14;4350:23;;;;:11;:23;;;;;;4335:12;:38;4303:70;4295:124;;;;-1:-1:-1;;;4295:124:14;;8274:2:58;4295:124:14;;;8256:21:58;8313:2;8293:18;;;8286:30;8352:34;8332:18;;;8325:62;-1:-1:-1;;;8403:18:58;;;8396:39;8452:19;;4295:124:14;8072:405:58;4295:124:14;-1:-1:-1;;;;;4429:15:14;;;;;;:8;:15;;;;;;;;4445:10;4429:27;;;;;;;:37;;4460:6;;4429:15;:37;;4460:6;;4429:37;:::i;:::-;;;;-1:-1:-1;4476:34:14;;-1:-1:-1;;;;;;4476:18:14;;4495:6;4503;4476:18;:34::i;2474:105:1:-;2518:54;;-1:-1:-1;;;2518:54:1;;2566:4;2518:54;;;2975:51:58;2518:10:1;-1:-1:-1;;;;;2518:20:1;;;;2547:9;;2948:18:58;;2518:54:1;;;;;;;;;;;;;;;;;;;2074:198:31;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:31;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:31;;8817:2:58;2154:73:31::1;::::0;::::1;8799:21:58::0;8856:2;8836:18;;;8829:30;8895:34;8875:18;;;8868:62;-1:-1:-1;;;8946:18:58;;;8939:36;8992:19;;2154:73:31::1;8615:402:58::0;2154:73:31::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;632:290:1:-;764:20;786:22;821:24;:22;:24::i;:::-;862:53;887:6;895:10;907:7;862:24;:53::i;:::-;855:60;;;;632:290;;;;;;:::o;1359:130:31:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:31;719:10:50;1422:23:31;1414:68;;;;-1:-1:-1;;;1414:68:31;;9224:2:58;1414:68:31;;;9206:21:58;;;9243:18;;;9236:30;9302:34;9282:18;;;9275:62;9354:18;;1414:68:31;9022:356:58;1355:203:46;1482:68;;-1:-1:-1;;;;;9641:15:58;;;1482:68:46;;;9623:34:58;9693:15;;9673:18;;;9666:43;9725:18;;;9718:34;;;1455:96:46;;1475:5;;-1:-1:-1;;;1505:27:46;9558:18:58;;1482:68:46;;;;-1:-1:-1;;1482:68:46;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:46;-1:-1:-1;;;;;;1482:68:46;;;;;;;;;;1455:19;:96::i;2426:187:31:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:31;;;-1:-1:-1;;;;;;2534:17:31;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;4087:135:1:-;4156:10;-1:-1:-1;;;;;4178:10:1;4156:33;;4148:67;;;;-1:-1:-1;;;4148:67:1;;9965:2:58;4148:67:1;;;9947:21:58;10004:2;9984:18;;;9977:30;-1:-1:-1;;;10023:18:58;;;10016:51;10084:18;;4148:67:1;9763:345:58;6886:819:14;6997:15;;;;;7093:65;;;;7104:7;7093:65;:::i;:::-;6996:162;;;;;;;;;;7227:23;7318:7;7303:12;7285:14;1419:5;7270:29;;;;:::i;:::-;7254:45;;:13;:45;:::i;:::-;7253:62;;;;:::i;:::-;:72;;;;:::i;:::-;7227:98;-1:-1:-1;7347:25:14;7339:4;:33;;;;;;;;:::i;:::-;;7335:311;;7431:63;-1:-1:-1;;;;;7431:22:14;;7454:7;7471:4;7478:15;7431:22;:63::i;:::-;7335:311;;;-1:-1:-1;;;;;7592:15:14;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;:43;;7620:15;;7592;:43;;7620:15;;7592:43;:::i;:::-;;;;-1:-1:-1;;7335:311:14;-1:-1:-1;;;;;7655:15:14;;;;;;:8;:15;;;;;7683;;7671:7;1247::31;1273:6;-1:-1:-1;;;;;1273:6:31;;1201:85;7671:7:14;-1:-1:-1;;;;;7655:24:14;-1:-1:-1;;;;;7655:24:14;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;;6886:819:14:o;941:175:46:-;1050:58;;-1:-1:-1;;;;;6618:32:58;;1050:58:46;;;6600:51:58;6667:18;;;6660:34;;;1023:86:46;;1043:5;;-1:-1:-1;;;1073:23:46;6573:18:58;;1050:58:46;6410:290:58;5374:1101:14;5512:20;5534:22;1419:5;5702:6;:27;;;:42;5694:95;;;;-1:-1:-1;;;5694:95:14;;11760:2:58;5694:95:14;;;11742:21:58;11799:2;11779:18;;;11772:30;11838:34;11818:18;;;11811:62;-1:-1:-1;;;11889:18:58;;;11882:38;11937:19;;5694:95:14;11558:404:58;5694:95:14;5800:31;;5834:23;;;;:6;:23;:::i;:::-;5800:57;;-1:-1:-1;5800:57:14;-1:-1:-1;5902:5:14;5875:32;;5867:98;;;;-1:-1:-1;;;5867:98:14;;12695:2:58;5867:98:14;;;12677:21:58;12734:2;12714:18;;;12707:30;12773:34;12753:18;;;12746:62;-1:-1:-1;;;12824:18:58;;;12817:51;12885:19;;5867:98:14;12493:417:58;5867:98:14;5975:12;6013:21;:16;6030:2;6013:16;;:21;:::i;:::-;6005:30;;;:::i;:::-;5997:39;;;-1:-1:-1;1877:20:13;;6047:15:14;6116:34;5997:39;6142:7;6116:18;:34::i;:::-;6093:57;;6160:22;6185:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6220:20:14;;;;;;:11;:20;;;;;;6160:42;;-1:-1:-1;6220:25:14;6212:74;;;;-1:-1:-1;;;6212:74:14;;13795:2:58;6212:74:14;;;13777:21:58;13834:2;13814:18;;;13807:30;13873:34;13853:18;;;13846:62;-1:-1:-1;;;13924:18:58;;;13917:34;13968:19;;6212:74:14;13593:400:58;6212:74:14;-1:-1:-1;;;;;6304:15:14;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;:40;-1:-1:-1;6304:40:14;6296:86;;;;-1:-1:-1;;;6296:86:14;;14200:2:58;6296:86:14;;;14182:21:58;14239:2;14219:18;;;14212:30;14278:34;14258:18;;;14251:62;-1:-1:-1;;;14329:18:58;;;14322:31;14370:19;;6296:86:14;13998:397:58;6296:86:14;6400:65;;;-1:-1:-1;;;;;14731:15:58;;;6400:65:14;;;14713:34:58;14783:15;;;;14763:18;;;14756:43;14815:18;;;14808:34;14858:18;;;14851:34;14901:19;;;;14894:35;;;;6400:65:14;;;;;;;;;;14647:19:58;;;;6400:65:14;;-1:-1:-1;6400:65:14;;-1:-1:-1;;;6400:65:14;-1:-1:-1;;;;5374:1101:14:o;5173:642:46:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:46;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:46;;15424:2:58;5697:111:46;;;15406:21:58;15463:2;15443:18;;;15436:30;15502:34;15482:18;;;15475:62;-1:-1:-1;;;15553:18:58;;;15546:40;15603:19;;5697:111:46;15222:406:58;4779:296:14;-1:-1:-1;;;;;4922:14:14;;;4871:22;4922:14;;;:7;:14;;;;;;4871:22;;4922:14;;4946:69;;;;-1:-1:-1;;;4946:69:14;;15835:2:58;4946:69:14;;;15817:21:58;15874:2;15854:18;;;15847:30;15913:34;15893:18;;;15886:62;-1:-1:-1;;;15964:18:58;;;15957:33;16007:19;;4946:69:14;15633:399:58;4946:69:14;5032:36;;-1:-1:-1;;;5032:36:14;;;;;2352:25:58;;;-1:-1:-1;;;;;5032:25:14;;;;;2325:18:58;;5032:36:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5025:43;;;4779:296;;;;;:::o;2083:472:13:-;2155:7;2213:19;;;;2273:27;;;;2314:36;;;2310:161;;-1:-1:-1;2448:12:13;2083:472;-1:-1:-1;;2083:472:13:o;2310:161::-;2487:55;2491:12;2528:13;2505:20;:36;2487:3;:55::i;:::-;2480:62;2083:472;-1:-1:-1;;;;2083:472:13:o;4108:223:49:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;3639:104:13:-;3697:7;3727:1;3723;:5;:13;;3735:1;3723:13;;;3731:1;3723:13;3716:20;3639:104;-1:-1:-1;;;3639:104:13:o;5165:446:49:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:49;;16239:2:58;5354:81:49;;;16221:21:58;16278:2;16258:18;;;16251:30;16317:34;16297:18;;;16290:62;-1:-1:-1;;;16368:18:58;;;16361:36;16414:19;;5354:81:49;16037:402:58;5354:81:49;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:49;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:49:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:49;;;8113:60;;;;-1:-1:-1;;;8113:60:49;;16938:2:58;8113:60:49;;;16920:21:58;16977:2;16957:18;;;16950:30;17016:31;16996:18;;;16989:59;17065:18;;8113:60:49;16736:353:58;8113:60:49;-1:-1:-1;8208:10:49;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:49;;;;;;;;:::i;14:276:58:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;295:139;-1:-1:-1;;;;;378:31:58;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:58:o;775:488::-;868:6;876;884;937:2;925:9;916:7;912:23;908:32;905:52;;;953:1;950;943:12;905:52;992:9;979:23;1011:39;1044:5;1011:39;:::i;:::-;1069:5;-1:-1:-1;1126:2:58;1111:18;;1098:32;1139:41;1098:32;1139:41;:::i;:::-;775:488;;1199:7;;-1:-1:-1;;;1253:2:58;1238:18;;;;1225:32;;775:488::o;1268:420::-;1352:6;1360;1413:2;1401:9;1392:7;1388:23;1384:32;1381:52;;;1429:1;1426;1419:12;1381:52;1468:9;1455:23;1487:39;1520:5;1487:39;:::i;:::-;1545:5;-1:-1:-1;1602:2:58;1587:18;;1574:32;1615:41;1574:32;1615:41;:::i;:::-;1675:7;1665:17;;;1268:420;;;;;:::o;1946:255::-;2005:6;2058:2;2046:9;2037:7;2033:23;2029:32;2026:52;;;2074:1;2071;2064:12;2026:52;2113:9;2100:23;2132:39;2165:5;2132:39;:::i;3037:818::-;3140:6;3148;3156;3164;3217:2;3205:9;3196:7;3192:23;3188:32;3185:52;;;3233:1;3230;3223:12;3185:52;3272:9;3259:23;3311:1;3304:5;3301:12;3291:40;;3327:1;3324;3317:12;3291:40;3350:5;-1:-1:-1;3406:2:58;3391:18;;3378:32;3429:18;3459:14;;;3456:34;;;3486:1;3483;3476:12;3456:34;3524:6;3513:9;3509:22;3499:32;;3569:7;3562:4;3558:2;3554:13;3550:27;3540:55;;3591:1;3588;3581:12;3540:55;3631:2;3618:16;3657:2;3649:6;3646:14;3643:34;;;3673:1;3670;3663:12;3643:34;3718:7;3713:2;3704:6;3700:2;3696:15;3692:24;3689:37;3686:57;;;3739:1;3736;3729:12;3686:57;3037:818;;3770:2;3762:11;;;;;-1:-1:-1;3792:6:58;;3845:2;3830:18;3817:32;;-1:-1:-1;3037:818:58;-1:-1:-1;;;3037:818:58:o;4856:529::-;4966:6;4974;4982;5035:2;5023:9;5014:7;5010:23;5006:32;5003:52;;;5051:1;5048;5041:12;5003:52;5091:9;5078:23;5124:18;5116:6;5113:30;5110:50;;;5156:1;5153;5146:12;5110:50;5179:22;;5235:3;5217:16;;;5213:26;5210:46;;;5252:1;5249;5242:12;5210:46;5275:2;5324;5309:18;;5296:32;;-1:-1:-1;5375:2:58;5360:18;;;5347:32;;4856:529;-1:-1:-1;;;4856:529:58:o;5390:250::-;5475:1;5485:113;5499:6;5496:1;5493:13;5485:113;;;5575:11;;;5569:18;5556:11;;;5549:39;5521:2;5514:10;5485:113;;;-1:-1:-1;;5632:1:58;5614:16;;5607:27;5390:250::o;5645:270::-;5686:3;5724:5;5718:12;5751:6;5746:3;5739:19;5767:76;5836:6;5829:4;5824:3;5820:14;5813:4;5806:5;5802:16;5767:76;:::i;:::-;5897:2;5876:15;-1:-1:-1;;5872:29:58;5863:39;;;;5904:4;5859:50;;5645:270;-1:-1:-1;;5645:270:58:o;5920:288::-;6095:2;6084:9;6077:21;6058:4;6115:44;6155:2;6144:9;6140:18;6132:6;6115:44;:::i;:::-;6107:52;;6195:6;6190:2;6179:9;6175:18;6168:34;5920:288;;;;;:::o;7051:127::-;7112:10;7107:3;7103:20;7100:1;7093:31;7143:4;7140:1;7133:15;7167:4;7164:1;7157:15;7183:125;7248:9;;;7269:10;;;7266:36;;;7282:18;;:::i;7883:184::-;7953:6;8006:2;7994:9;7985:7;7981:23;7977:32;7974:52;;;8022:1;8019;8012:12;7974:52;-1:-1:-1;8045:16:58;;7883:184;-1:-1:-1;7883:184:58:o;8482:128::-;8549:9;;;8570:11;;;8567:37;;;8584:18;;:::i;10113:634::-;10232:6;10240;10248;10256;10264;10317:3;10305:9;10296:7;10292:23;10288:33;10285:53;;;10334:1;10331;10324:12;10285:53;10373:9;10360:23;10392:39;10425:5;10392:39;:::i;:::-;10450:5;-1:-1:-1;10507:2:58;10492:18;;10479:32;10520:41;10479:32;10520:41;:::i;:::-;10113:634;;10580:7;;-1:-1:-1;;;;10634:2:58;10619:18;;10606:32;;10685:2;10670:18;;10657:32;;10736:3;10721:19;;;10708:33;;-1:-1:-1;10113:634:58:o;10752:168::-;10825:9;;;10856;;10873:15;;;10867:22;;10853:37;10843:71;;10894:18;;:::i;10925:217::-;10965:1;10991;10981:132;;11035:10;11030:3;11026:20;11023:1;11016:31;11070:4;11067:1;11060:15;11098:4;11095:1;11088:15;10981:132;-1:-1:-1;11127:9:58;;10925:217::o;11147:127::-;11208:10;11203:3;11199:20;11196:1;11189:31;11239:4;11236:1;11229:15;11263:4;11260:1;11253:15;11967:521;12044:4;12050:6;12110:11;12097:25;12204:2;12200:7;12189:8;12173:14;12169:29;12165:43;12145:18;12141:68;12131:96;;12223:1;12220;12213:12;12131:96;12250:33;;12302:20;;;-1:-1:-1;12345:18:58;12334:30;;12331:50;;;12377:1;12374;12367:12;12331:50;12410:4;12398:17;;-1:-1:-1;12441:14:58;12437:27;;;12427:38;;12424:58;;;12478:1;12475;12468:12;12424:58;11967:521;;;;;:::o;12915:331::-;13020:9;13031;13073:8;13061:10;13058:24;13055:44;;;13095:1;13092;13085:12;13055:44;13124:6;13114:8;13111:20;13108:40;;;13144:1;13141;13134:12;13108:40;-1:-1:-1;;13170:23:58;;;13215:25;;;;;-1:-1:-1;12915:331:58:o;13251:337::-;-1:-1:-1;;13372:19:58;;13459:11;;;;13490:2;13482:11;;13479:103;;;13569:2;13563;13556:3;13552:2;13548:12;13545:1;13541:20;13537:29;13533:2;13529:38;13525:47;13516:56;;13479:103;;;13251:337;;;;:::o;14940:277::-;15007:6;15060:2;15048:9;15039:7;15035:23;15031:32;15028:52;;;15076:1;15073;15066:12;15028:52;15108:9;15102:16;15161:5;15154:13;15147:21;15140:5;15137:32;15127:60;;15183:1;15180;15173:12;16444:287;16573:3;16611:6;16605:13;16627:66;16686:6;16681:3;16674:4;16666:6;16662:17;16627:66;:::i;:::-;16709:16;;;;;16444:287;-1:-1:-1;;16444:287:58:o;17094:219::-;17243:2;17232:9;17225:21;17206:4;17263:44;17303:2;17292:9;17288:18;17280:6;17263:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "155": [
        {
          "start": 831,
          "length": 32
        },
        {
          "start": 1181,
          "length": 32
        },
        {
          "start": 1332,
          "length": 32
        },
        {
          "start": 1821,
          "length": 32
        },
        {
          "start": 1969,
          "length": 32
        },
        {
          "start": 2088,
          "length": 32
        },
        {
          "start": 2444,
          "length": 32
        },
        {
          "start": 2965,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "COST_OF_POST()": "796d4371",
    "addDepositFor(address,address,uint256)": "382edd9e",
    "addStake(uint32)": "0396cb60",
    "addToken(address,address)": "5476bd72",
    "balances(address,address)": "c23f001f",
    "deposit()": "d0e30db0",
    "depositInfo(address,address)": "493b0170",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "lockTokenDeposit()": "cd8f80c2",
    "oracles(address)": "addd5099",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "unlockBlock(address)": "4a6f84cf",
    "unlockStake()": "bb9fe6bf",
    "unlockTokenDeposit()": "9ed0fb68",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878",
    "withdrawTokensTo(address,address,uint256)": "cc9c837c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COST_OF_POST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addDepositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"tokenPriceOracle\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlockBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTokenDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unlockBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokenDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokensTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addDepositFor(address,address,uint256)\":{\"params\":{\"account\":\"the account to deposit for.\",\"amount\":\"the amount of token to deposit.\",\"token\":\"the token to deposit.\"}},\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"depositInfo(address,address)\":{\"returns\":{\"_unlockBlock\":\"- the block height at which the deposit can be withdrawn.\",\"amount\":\"- the amount of given token deposited to the Paymaster.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}},\"withdrawTokensTo(address,address,uint256)\":{\"params\":{\"amount\":\"amount to withdraw\",\"target\":\"address to send to\",\"token\":\"the token deposit to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDepositFor(address,address,uint256)\":{\"notice\":\"deposit tokens that a specific account can use to pay for gas. The sender must first approve this paymaster to withdraw these tokens (they are only withdrawn in this method). Note depositing the tokens is equivalent to transferring them to the \\\"account\\\" - only the account can later  use them - either as gas, or using withdrawTo()\"},\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"addToken(address,address)\":{\"notice\":\"owner of the paymaster should add supported tokens\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"lockTokenDeposit()\":{\"notice\":\"lock the tokens deposited for this account so they can be used to pay for gas. after calling unlockTokenDeposit(), the account can't use this paymaster until the deposit is locked.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"unlockTokenDeposit()\":{\"notice\":\"unlock deposit, so that it can be withdrawn. can't be called in the same block as withdrawTo()\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"},\"withdrawTokensTo(address,address,uint256)\":{\"notice\":\"withdraw tokens. can only be called after unlock() is called in a previous block.\"}},\"notice\":\"A token-based paymaster that accepts token deposits The deposit is only a safeguard: the user pays with his token balance.  only if the user didn't approve() the paymaster, or if the token balance is not enough, the deposit will be used.  thus the required deposit is to cover just one method call. The deposit is locked for the current block: the user must issue unlockTokenDeposit() to be allowed to withdraw  (but can't use the deposit for this or further operations) paymasterAndData holds the paymaster address followed by the token address to use.This paymaster will be rejected by the standard rules of EIP4337, as it uses an external oracle. (the standard rules ban accessing data of an external contract) It can only be used if it is \\\"whitelisted\\\" by the bundler. (technically, it can be used by an \\\"oracle\\\" which returns a static value, without accessing any storage)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/DepositPaymaster.sol\":\"DepositPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"contracts/samples/DepositPaymaster.sol\":{\"keccak256\":\"0x66de2d8d23fa5e0ed0c64f0553fdf338d4276076a991fdc932d2e5a71fc43b5f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d783930aec5c818e57a2cc811219dc098046864a1e5ebfd1aeef88fab4661193\",\"dweb:/ipfs/QmQsnCecrSw8dLLfwSrxWFeoSQj4ECbSyrM15JzCFdGxYY\"]},\"contracts/samples/IOracle.sol\":{\"keccak256\":\"0xdefd2ec9c4e592ad68092e9e4c15d27c697fc08f90a885bcdb47542da88b42be\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e9b56e7eebdef50c8a9edbbb31f3908f8440418cff5d11d4863cc61c0035674d\",\"dweb:/ipfs/QmS4buGEZa6xxM8gJosRbCZuEEH5nyqYQE2Vd2n3zveZH8\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COST_OF_POST",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addDepositFor"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "tokenPriceOracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToken"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_unlockBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockTokenDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "oracles",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "unlockBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockTokenDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokensTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addDepositFor(address,address,uint256)": {
            "params": {
              "account": "the account to deposit for.",
              "amount": "the amount of token to deposit.",
              "token": "the token to deposit."
            }
          },
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "depositInfo(address,address)": {
            "returns": {
              "_unlockBlock": "- the block height at which the deposit can be withdrawn.",
              "amount": "- the amount of given token deposited to the Paymaster."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          },
          "withdrawTokensTo(address,address,uint256)": {
            "params": {
              "amount": "amount to withdraw",
              "target": "address to send to",
              "token": "the token deposit to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDepositFor(address,address,uint256)": {
            "notice": "deposit tokens that a specific account can use to pay for gas. The sender must first approve this paymaster to withdraw these tokens (they are only withdrawn in this method). Note depositing the tokens is equivalent to transferring them to the \"account\" - only the account can later  use them - either as gas, or using withdrawTo()"
          },
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "addToken(address,address)": {
            "notice": "owner of the paymaster should add supported tokens"
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "lockTokenDeposit()": {
            "notice": "lock the tokens deposited for this account so they can be used to pay for gas. after calling unlockTokenDeposit(), the account can't use this paymaster until the deposit is locked."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "unlockTokenDeposit()": {
            "notice": "unlock deposit, so that it can be withdrawn. can't be called in the same block as withdrawTo()"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          },
          "withdrawTokensTo(address,address,uint256)": {
            "notice": "withdraw tokens. can only be called after unlock() is called in a previous block."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/samples/DepositPaymaster.sol": "DepositPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/core/BasePaymaster.sol": {
        "keccak256": "0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443",
        "urls": [
          "bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0",
          "dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq"
        ],
        "license": "GPL-3.0"
      },
      "contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456",
        "urls": [
          "bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8",
          "dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/DepositPaymaster.sol": {
        "keccak256": "0x66de2d8d23fa5e0ed0c64f0553fdf338d4276076a991fdc932d2e5a71fc43b5f",
        "urls": [
          "bzz-raw://d783930aec5c818e57a2cc811219dc098046864a1e5ebfd1aeef88fab4661193",
          "dweb:/ipfs/QmQsnCecrSw8dLLfwSrxWFeoSQj4ECbSyrM15JzCFdGxYY"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/IOracle.sol": {
        "keccak256": "0xdefd2ec9c4e592ad68092e9e4c15d27c697fc08f90a885bcdb47542da88b42be",
        "urls": [
          "bzz-raw://e9b56e7eebdef50c8a9edbbb31f3908f8440418cff5d11d4863cc61c0035674d",
          "dweb:/ipfs/QmS4buGEZa6xxM8gJosRbCZuEEH5nyqYQE2Vd2n3zveZH8"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/samples/DepositPaymaster.sol",
    "id": 4460,
    "exportedSymbols": {
      "Address": [
        11089
      ],
      "BasePaymaster": [
        361
      ],
      "Context": [
        11111
      ],
      "DepositPaymaster": [
        4459
      ],
      "IAggregator": [
        3436
      ],
      "IERC20": [
        10284
      ],
      "IERC20Permit": [
        10345
      ],
      "IEntryPoint": [
        3640
      ],
      "INonceManager": [
        3659
      ],
      "IOracle": [
        4470
      ],
      "IPaymaster": [
        3694
      ],
      "IStakeManager": [
        3799
      ],
      "Ownable": [
        8794
      ],
      "SafeERC20": [
        10721
      ],
      "UserOperation": [
        3826
      ],
      "UserOperationLib": [
        3996
      ],
      "ValidationData": [
        2594
      ],
      "_intersectTimeRange": [
        2738
      ],
      "_packValidationData": [
        2775,
        2813
      ],
      "_parseValidationData": [
        2653
      ],
      "calldataKeccak": [
        2823
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:7672:14",
    "nodes": [
      {
        "id": 3998,
        "nodeType": "PragmaDirective",
        "src": "36:24:14",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 3999,
        "nodeType": "ImportDirective",
        "src": "99:56:14",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4460,
        "sourceUnit": 10285,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4000,
        "nodeType": "ImportDirective",
        "src": "156:65:14",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4460,
        "sourceUnit": 10722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4001,
        "nodeType": "ImportDirective",
        "src": "223:35:14",
        "nodes": [],
        "absolutePath": "contracts/core/BasePaymaster.sol",
        "file": "../core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4460,
        "sourceUnit": 362,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4002,
        "nodeType": "ImportDirective",
        "src": "259:23:14",
        "nodes": [],
        "absolutePath": "contracts/samples/IOracle.sol",
        "file": "./IOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4460,
        "sourceUnit": 4471,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4459,
        "nodeType": "ContractDefinition",
        "src": "1215:6492:14",
        "nodes": [
          {
            "id": 4009,
            "nodeType": "UsingForDirective",
            "src": "1265:41:14",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 4006,
              "name": "UserOperationLib",
              "nameLocations": [
                "1271:16:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3996,
              "src": "1271:16:14"
            },
            "typeName": {
              "id": 4008,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4007,
                "name": "UserOperation",
                "nameLocations": [
                  "1292:13:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3826,
                "src": "1292:13:14"
              },
              "referencedDeclaration": 3826,
              "src": "1292:13:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 4013,
            "nodeType": "UsingForDirective",
            "src": "1311:27:14",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 4010,
              "name": "SafeERC20",
              "nameLocations": [
                "1317:9:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10721,
              "src": "1317:9:14"
            },
            "typeName": {
              "id": 4012,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4011,
                "name": "IERC20",
                "nameLocations": [
                  "1331:6:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10284,
                "src": "1331:6:14"
              },
              "referencedDeclaration": 10284,
              "src": "1331:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10284",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 4016,
            "nodeType": "VariableDeclaration",
            "src": "1380:44:14",
            "nodes": [],
            "constant": true,
            "functionSelector": "796d4371",
            "mutability": "constant",
            "name": "COST_OF_POST",
            "nameLocation": "1404:12:14",
            "scope": 4459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4014,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1380:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3335303030",
              "id": 4015,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1419:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_35000_by_1",
                "typeString": "int_const 35000"
              },
              "value": "35000"
            },
            "visibility": "public"
          },
          {
            "id": 4025,
            "nodeType": "VariableDeclaration",
            "src": "1431:58:14",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "NULL_ORACLE",
            "nameLocation": "1456:11:14",
            "scope": 4459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOracle_$4470",
              "typeString": "contract IOracle"
            },
            "typeName": {
              "id": 4018,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4017,
                "name": "IOracle",
                "nameLocations": [
                  "1431:7:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4470,
                "src": "1431:7:14"
              },
              "referencedDeclaration": 4470,
              "src": "1431:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$4470",
                "typeString": "contract IOracle"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "30",
                      "id": 4022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1486:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      }
                    ],
                    "id": 4021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1478:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 4020,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1478:7:14",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 4023,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1478:10:14",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4019,
                "name": "IOracle",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4470,
                "src": "1470:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IOracle_$4470_$",
                  "typeString": "type(contract IOracle)"
                }
              },
              "id": 4024,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1470:19:14",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$4470",
                "typeString": "contract IOracle"
              }
            },
            "visibility": "private"
          },
          {
            "id": 4031,
            "nodeType": "VariableDeclaration",
            "src": "1495:41:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "addd5099",
            "mutability": "mutable",
            "name": "oracles",
            "nameLocation": "1529:7:14",
            "scope": 4459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_contract$_IOracle_$4470_$",
              "typeString": "mapping(contract IERC20 => contract IOracle)"
            },
            "typeName": {
              "id": 4030,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4027,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4026,
                  "name": "IERC20",
                  "nameLocations": [
                    "1503:6:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10284,
                  "src": "1503:6:14"
                },
                "referencedDeclaration": 10284,
                "src": "1503:6:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$10284",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1495:26:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_contract$_IOracle_$4470_$",
                "typeString": "mapping(contract IERC20 => contract IOracle)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4029,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4028,
                  "name": "IOracle",
                  "nameLocations": [
                    "1513:7:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4470,
                  "src": "1513:7:14"
                },
                "referencedDeclaration": 4470,
                "src": "1513:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IOracle_$4470",
                  "typeString": "contract IOracle"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4038,
            "nodeType": "VariableDeclaration",
            "src": "1542:62:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "c23f001f",
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "1596:8:14",
            "scope": 4459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4037,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4033,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4032,
                  "name": "IERC20",
                  "nameLocations": [
                    "1550:6:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10284,
                  "src": "1550:6:14"
                },
                "referencedDeclaration": 10284,
                "src": "1550:6:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$10284",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1542:46:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4036,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 4034,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1568:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1560:27:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 4035,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1579:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4042,
            "nodeType": "VariableDeclaration",
            "src": "1610:46:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "4a6f84cf",
            "mutability": "mutable",
            "name": "unlockBlock",
            "nameLocation": "1645:11:14",
            "scope": 4459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4041,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4039,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1618:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1610:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4040,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1629:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4055,
            "nodeType": "FunctionDefinition",
            "src": "1663:173:14",
            "nodes": [],
            "body": {
              "id": 4054,
              "nodeType": "Block",
              "src": "1727:109:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4051,
                      "name": "unlockTokenDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4174,
                      "src": "1809:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4053,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:20:14"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4048,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4045,
                    "src": "1714:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 4049,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4047,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "1700:13:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 361,
                  "src": "1700:13:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1700:26:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4045,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "1687:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4055,
                  "src": "1675:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 4044,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4043,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1675:11:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3640,
                      "src": "1675:11:14"
                    },
                    "referencedDeclaration": 3640,
                    "src": "1675:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:25:14"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4083,
            "nodeType": "FunctionDefinition",
            "src": "1916:196:14",
            "nodes": [],
            "body": {
              "id": 4082,
              "nodeType": "Block",
              "src": "1993:119:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IOracle_$4470",
                          "typeString": "contract IOracle"
                        },
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4068,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "2011:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_contract$_IOracle_$4470_$",
                              "typeString": "mapping(contract IERC20 => contract IOracle)"
                            }
                          },
                          "id": 4070,
                          "indexExpression": {
                            "id": 4069,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4059,
                            "src": "2019:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$10284",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2011:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$4470",
                            "typeString": "contract IOracle"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4071,
                          "name": "NULL_ORACLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4025,
                          "src": "2029:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$4470",
                            "typeString": "contract IOracle"
                          }
                        },
                        "src": "2011:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616c726561647920736574",
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2042:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f1933bd5ead9cc60725798c84c3187e65fc3fa59401c57f2eee69bc2353d104",
                          "typeString": "literal_string \"Token already set\""
                        },
                        "value": "Token already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f1933bd5ead9cc60725798c84c3187e65fc3fa59401c57f2eee69bc2353d104",
                          "typeString": "literal_string \"Token already set\""
                        }
                      ],
                      "id": 4067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2003:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:59:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:59:14"
                },
                {
                  "expression": {
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4076,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4031,
                        "src": "2072:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_contract$_IOracle_$4470_$",
                          "typeString": "mapping(contract IERC20 => contract IOracle)"
                        }
                      },
                      "id": 4078,
                      "indexExpression": {
                        "id": 4077,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "2080:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2072:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$4470",
                        "typeString": "contract IOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4079,
                      "name": "tokenPriceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4062,
                      "src": "2089:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$4470",
                        "typeString": "contract IOracle"
                      }
                    },
                    "src": "2072:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4470",
                      "typeString": "contract IOracle"
                    }
                  },
                  "id": 4081,
                  "nodeType": "ExpressionStatement",
                  "src": "2072:33:14"
                }
              ]
            },
            "documentation": {
              "id": 4056,
              "nodeType": "StructuredDocumentation",
              "src": "1842:69:14",
              "text": " owner of the paymaster should add supported tokens"
            },
            "functionSelector": "5476bd72",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4065,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4064,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1983:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8713,
                  "src": "1983:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1983:9:14"
              }
            ],
            "name": "addToken",
            "nameLocation": "1925:8:14",
            "parameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4059,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1941:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "1934:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10284",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4058,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4057,
                      "name": "IERC20",
                      "nameLocations": [
                        "1934:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10284,
                      "src": "1934:6:14"
                    },
                    "referencedDeclaration": 10284,
                    "src": "1934:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4062,
                  "mutability": "mutable",
                  "name": "tokenPriceOracle",
                  "nameLocation": "1956:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "1948:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOracle_$4470",
                    "typeString": "contract IOracle"
                  },
                  "typeName": {
                    "id": 4061,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4060,
                      "name": "IOracle",
                      "nameLocations": [
                        "1948:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4470,
                      "src": "1948:7:14"
                    },
                    "referencedDeclaration": 4470,
                    "src": "1948:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4470",
                      "typeString": "contract IOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1933:40:14"
            },
            "returnParameters": {
              "id": 4066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4133,
            "nodeType": "FunctionDefinition",
            "src": "2646:401:14",
            "nodes": [],
            "body": {
              "id": 4132,
              "nodeType": "Block",
              "src": "2725:322:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IOracle_$4470",
                          "typeString": "contract IOracle"
                        },
                        "id": 4099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4095,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "2743:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_contract$_IOracle_$4470_$",
                              "typeString": "mapping(contract IERC20 => contract IOracle)"
                            }
                          },
                          "id": 4097,
                          "indexExpression": {
                            "id": 4096,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4087,
                            "src": "2751:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$10284",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2743:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$4470",
                            "typeString": "contract IOracle"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4098,
                          "name": "NULL_ORACLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4025,
                          "src": "2761:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$4470",
                            "typeString": "contract IOracle"
                          }
                        },
                        "src": "2743:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e737570706f7274656420746f6b656e",
                        "id": 4100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2774:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_507d798c5ad4be89d4f3da658d37b2094b23f09aca616c68bd08d2df2115802a",
                          "typeString": "literal_string \"unsupported token\""
                        },
                        "value": "unsupported token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_507d798c5ad4be89d4f3da658d37b2094b23f09aca616c68bd08d2df2115802a",
                          "typeString": "literal_string \"unsupported token\""
                        }
                      ],
                      "id": 4094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2735:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:59:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4102,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:59:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2883:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2887:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2883:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4110,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2903:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DepositPaymaster_$4459",
                              "typeString": "contract DepositPaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DepositPaymaster_$4459",
                              "typeString": "contract DepositPaymaster"
                            }
                          ],
                          "id": 4109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2895:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2895:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2895:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4112,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4091,
                        "src": "2910:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4103,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4087,
                        "src": "2860:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2866:16:14",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10405,
                      "src": "2860:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10284_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$10284_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:57:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:57:14"
                },
                {
                  "expression": {
                    "id": 4121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4115,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4038,
                          "src": "2927:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 4118,
                        "indexExpression": {
                          "id": 4116,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4087,
                          "src": "2936:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10284",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2927:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4119,
                      "indexExpression": {
                        "id": 4117,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4089,
                        "src": "2943:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2927:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4120,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4091,
                      "src": "2955:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2927:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4122,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:34:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4123,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2975:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2979:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2975:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4125,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4089,
                      "src": "2989:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2975:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4131,
                  "nodeType": "IfStatement",
                  "src": "2971:70:14",
                  "trueBody": {
                    "id": 4130,
                    "nodeType": "Block",
                    "src": "2998:43:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4127,
                            "name": "lockTokenDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4186,
                            "src": "3012:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3012:18:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4129,
                        "nodeType": "ExpressionStatement",
                        "src": "3012:18:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4084,
              "nodeType": "StructuredDocumentation",
              "src": "2118:523:14",
              "text": " deposit tokens that a specific account can use to pay for gas.\n The sender must first approve this paymaster to withdraw these tokens (they are only withdrawn in this method).\n Note depositing the tokens is equivalent to transferring them to the \"account\" - only the account can later\n  use them - either as gas, or using withdrawTo()\n @param token the token to deposit.\n @param account the account to deposit for.\n @param amount the amount of token to deposit."
            },
            "functionSelector": "382edd9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDepositFor",
            "nameLocation": "2655:13:14",
            "parameters": {
              "id": 4092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2676:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "2669:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10284",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4086,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4085,
                      "name": "IERC20",
                      "nameLocations": [
                        "2669:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10284,
                      "src": "2669:6:14"
                    },
                    "referencedDeclaration": 10284,
                    "src": "2669:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4089,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2691:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "2683:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4091,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2708:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "2700:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2668:47:14"
            },
            "returnParameters": {
              "id": 4093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2725:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4161,
            "nodeType": "FunctionDefinition",
            "src": "3233:206:14",
            "nodes": [],
            "body": {
              "id": 4160,
              "nodeType": "Block",
              "src": "3344:95:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4146,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4142,
                      "src": "3354:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4147,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4038,
                          "src": "3363:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 4149,
                        "indexExpression": {
                          "id": 4148,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4137,
                          "src": "3372:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10284",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3363:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4151,
                      "indexExpression": {
                        "id": 4150,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "3379:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3363:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3354:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4153,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:33:14"
                },
                {
                  "expression": {
                    "id": 4158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4154,
                      "name": "_unlockBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4144,
                      "src": "3397:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 4155,
                        "name": "unlockBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "3412:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4157,
                      "indexExpression": {
                        "id": 4156,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "3424:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3412:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3397:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4159,
                  "nodeType": "ExpressionStatement",
                  "src": "3397:35:14"
                }
              ]
            },
            "documentation": {
              "id": 4134,
              "nodeType": "StructuredDocumentation",
              "src": "3053:175:14",
              "text": " @return amount - the amount of given token deposited to the Paymaster.\n @return _unlockBlock - the block height at which the deposit can be withdrawn."
            },
            "functionSelector": "493b0170",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositInfo",
            "nameLocation": "3242:11:14",
            "parameters": {
              "id": 4140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4137,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3261:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4161,
                  "src": "3254:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10284",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4135,
                      "name": "IERC20",
                      "nameLocations": [
                        "3254:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10284,
                      "src": "3254:6:14"
                    },
                    "referencedDeclaration": 10284,
                    "src": "3254:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4139,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3276:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4161,
                  "src": "3268:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3253:31:14"
            },
            "returnParameters": {
              "id": 4145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4142,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3314:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4161,
                  "src": "3306:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4144,
                  "mutability": "mutable",
                  "name": "_unlockBlock",
                  "nameLocation": "3330:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4161,
                  "src": "3322:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3322:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3305:38:14"
            },
            "scope": 4459,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4174,
            "nodeType": "FunctionDefinition",
            "src": "3570:92:14",
            "nodes": [],
            "body": {
              "id": 4173,
              "nodeType": "Block",
              "src": "3607:55:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4165,
                        "name": "unlockBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "3617:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4168,
                      "indexExpression": {
                        "expression": {
                          "id": 4166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3629:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3633:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3629:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3617:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4169,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3643:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3649:6:14",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3643:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3617:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4172,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:38:14"
                }
              ]
            },
            "documentation": {
              "id": 4162,
              "nodeType": "StructuredDocumentation",
              "src": "3445:120:14",
              "text": " unlock deposit, so that it can be withdrawn.\n can't be called in the same block as withdrawTo()"
            },
            "functionSelector": "9ed0fb68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokenDeposit",
            "nameLocation": "3579:18:14",
            "parameters": {
              "id": 4163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3597:2:14"
            },
            "returnParameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3607:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4186,
            "nodeType": "FunctionDefinition",
            "src": "3879:79:14",
            "nodes": [],
            "body": {
              "id": 4185,
              "nodeType": "Block",
              "src": "3914:44:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4178,
                        "name": "unlockBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "3924:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4181,
                      "indexExpression": {
                        "expression": {
                          "id": 4179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3936:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3940:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3936:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3924:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3950:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3924:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4184,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:27:14"
                }
              ]
            },
            "documentation": {
              "id": 4175,
              "nodeType": "StructuredDocumentation",
              "src": "3668:206:14",
              "text": " lock the tokens deposited for this account so they can be used to pay for gas.\n after calling unlockTokenDeposit(), the account can't use this paymaster until the deposit is locked."
            },
            "functionSelector": "cd8f80c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokenDeposit",
            "nameLocation": "3888:16:14",
            "parameters": {
              "id": 4176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3904:2:14"
            },
            "returnParameters": {
              "id": 4177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3914:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4232,
            "nodeType": "FunctionDefinition",
            "src": "4206:311:14",
            "nodes": [],
            "body": {
              "id": 4231,
              "nodeType": "Block",
              "src": "4285:232:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 4198,
                              "name": "unlockBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4042,
                              "src": "4303:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4201,
                            "indexExpression": {
                              "expression": {
                                "id": 4199,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4315:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4319:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4315:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4303:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4330:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4303:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4204,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4335:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4341:6:14",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "4335:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 4206,
                              "name": "unlockBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4042,
                              "src": "4350:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4209,
                            "indexExpression": {
                              "expression": {
                                "id": 4207,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4362:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4366:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4362:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4350:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4335:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4303:70:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b656e4465706f736974",
                        "id": 4212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4375:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39f72ca416781d13cac1dfa31c4ffd74b13ab32dac2d833098871eacb9b639c6",
                          "typeString": "literal_string \"DepositPaymaster: must unlockTokenDeposit\""
                        },
                        "value": "DepositPaymaster: must unlockTokenDeposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39f72ca416781d13cac1dfa31c4ffd74b13ab32dac2d833098871eacb9b639c6",
                          "typeString": "literal_string \"DepositPaymaster: must unlockTokenDeposit\""
                        }
                      ],
                      "id": 4197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4295:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:124:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4214,
                  "nodeType": "ExpressionStatement",
                  "src": "4295:124:14"
                },
                {
                  "expression": {
                    "id": 4222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4215,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4038,
                          "src": "4429:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 4219,
                        "indexExpression": {
                          "id": 4216,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4190,
                          "src": "4438:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10284",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4429:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4220,
                      "indexExpression": {
                        "expression": {
                          "id": 4217,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4445:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4449:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4445:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4429:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 4221,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4194,
                      "src": "4460:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4429:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4223,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:37:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4227,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4192,
                        "src": "4495:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4228,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "4503:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4224,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4190,
                        "src": "4476:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4482:12:14",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10378,
                      "src": "4476:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10284_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$10284_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:34:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4230,
                  "nodeType": "ExpressionStatement",
                  "src": "4476:34:14"
                }
              ]
            },
            "documentation": {
              "id": 4187,
              "nodeType": "StructuredDocumentation",
              "src": "3964:237:14",
              "text": " withdraw tokens.\n can only be called after unlock() is called in a previous block.\n @param token the token deposit to withdraw\n @param target address to send to\n @param amount amount to withdraw"
            },
            "functionSelector": "cc9c837c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokensTo",
            "nameLocation": "4215:16:14",
            "parameters": {
              "id": 4195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4190,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4239:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4232,
                  "src": "4232:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10284",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4189,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4188,
                      "name": "IERC20",
                      "nameLocations": [
                        "4232:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10284,
                      "src": "4232:6:14"
                    },
                    "referencedDeclaration": 10284,
                    "src": "4232:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4192,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "4254:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4232,
                  "src": "4246:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4246:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4194,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4270:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4232,
                  "src": "4262:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4262:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4231:46:14"
            },
            "returnParameters": {
              "id": 4196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4285:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4263,
            "nodeType": "FunctionDefinition",
            "src": "4779:296:14",
            "nodes": [],
            "body": {
              "id": 4262,
              "nodeType": "Block",
              "src": "4895:180:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4245,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "4913:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4262,
                      "src": "4905:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$4470",
                        "typeString": "contract IOracle"
                      },
                      "typeName": {
                        "id": 4244,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4243,
                          "name": "IOracle",
                          "nameLocations": [
                            "4905:7:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4470,
                          "src": "4905:7:14"
                        },
                        "referencedDeclaration": 4470,
                        "src": "4905:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOracle_$4470",
                          "typeString": "contract IOracle"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4249,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4246,
                      "name": "oracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4031,
                      "src": "4922:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_contract$_IOracle_$4470_$",
                        "typeString": "mapping(contract IERC20 => contract IOracle)"
                      }
                    },
                    "id": 4248,
                    "indexExpression": {
                      "id": 4247,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4236,
                      "src": "4930:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10284",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4922:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4470",
                      "typeString": "contract IOracle"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4905:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IOracle_$4470",
                          "typeString": "contract IOracle"
                        },
                        "id": 4253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4251,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4245,
                          "src": "4954:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$4470",
                            "typeString": "contract IOracle"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4252,
                          "name": "NULL_ORACLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4025,
                          "src": "4964:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$4470",
                            "typeString": "contract IOracle"
                          }
                        },
                        "src": "4954:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369745061796d61737465723a20756e737570706f7274656420746f6b656e",
                        "id": 4254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4977:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e569da2fa5f3783d38b7d46ea8805ea326964f23a43e6933928eb417d8c0af24",
                          "typeString": "literal_string \"DepositPaymaster: unsupported token\""
                        },
                        "value": "DepositPaymaster: unsupported token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e569da2fa5f3783d38b7d46ea8805ea326964f23a43e6933928eb417d8c0af24",
                          "typeString": "literal_string \"DepositPaymaster: unsupported token\""
                        }
                      ],
                      "id": 4250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4946:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4946:69:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4256,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:69:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4259,
                        "name": "ethBought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4238,
                        "src": "5058:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4257,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4245,
                        "src": "5032:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOracle_$4470",
                          "typeString": "contract IOracle"
                        }
                      },
                      "id": 4258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5039:18:14",
                      "memberName": "getTokenValueOfEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4469,
                      "src": "5032:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:36:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4242,
                  "id": 4261,
                  "nodeType": "Return",
                  "src": "5025:43:14"
                }
              ]
            },
            "documentation": {
              "id": 4233,
              "nodeType": "StructuredDocumentation",
              "src": "4523:251:14",
              "text": " translate the given eth value to token amount\n @param token the token to use\n @param ethBought the required eth value we want to \"buy\"\n @return requiredTokens the amount of tokens required to get this amount of eth"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValueOfEth",
            "nameLocation": "4788:18:14",
            "parameters": {
              "id": 4239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4236,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4814:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4263,
                  "src": "4807:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$10284",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4234,
                      "name": "IERC20",
                      "nameLocations": [
                        "4807:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10284,
                      "src": "4807:6:14"
                    },
                    "referencedDeclaration": 10284,
                    "src": "4807:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4238,
                  "mutability": "mutable",
                  "name": "ethBought",
                  "nameLocation": "4829:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4263,
                  "src": "4821:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4821:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4806:33:14"
            },
            "returnParameters": {
              "id": 4242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4241,
                  "mutability": "mutable",
                  "name": "requiredTokens",
                  "nameLocation": "4879:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4263,
                  "src": "4871:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4871:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4870:24:14"
            },
            "scope": 4459,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 4371,
            "nodeType": "FunctionDefinition",
            "src": "5374:1101:14",
            "nodes": [],
            "body": {
              "id": 4370,
              "nodeType": "Block",
              "src": "5558:917:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 4279,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4269,
                        "src": "5570:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 4280,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5569:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4281,
                  "nodeType": "ExpressionStatement",
                  "src": "5569:12:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4283,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4267,
                            "src": "5702:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 4284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5709:20:14",
                          "memberName": "verificationGasLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3815,
                          "src": "5702:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 4285,
                          "name": "COST_OF_POST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4016,
                          "src": "5732:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5702:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f7220706f73744f70",
                        "id": 4287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5746:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76d41b66bad7418bbd05cffc309786614b3ab738d27bb600ce96cb2a2e4ebccd",
                          "typeString": "literal_string \"DepositPaymaster: gas too low for postOp\""
                        },
                        "value": "DepositPaymaster: gas too low for postOp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76d41b66bad7418bbd05cffc309786614b3ab738d27bb600ce96cb2a2e4ebccd",
                          "typeString": "literal_string \"DepositPaymaster: gas too low for postOp\""
                        }
                      ],
                      "id": 4282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5694:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:95:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4289,
                  "nodeType": "ExpressionStatement",
                  "src": "5694:95:14"
                },
                {
                  "assignments": [
                    4291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4291,
                      "mutability": "mutable",
                      "name": "paymasterAndData",
                      "nameLocation": "5815:16:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4370,
                      "src": "5800:31:14",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4290,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5800:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4294,
                  "initialValue": {
                    "expression": {
                      "id": 4292,
                      "name": "userOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4267,
                      "src": "5834:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                        "typeString": "struct UserOperation calldata"
                      }
                    },
                    "id": 4293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5841:16:14",
                    "memberName": "paymasterAndData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3823,
                    "src": "5834:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5800:57:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4296,
                            "name": "paymasterAndData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4291,
                            "src": "5875:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 4297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5892:6:14",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5875:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_40_by_1",
                            "typeString": "int_const 40"
                          },
                          "id": 4300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3230",
                            "id": 4298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5902:2:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 4299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5905:2:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "5902:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_40_by_1",
                            "typeString": "int_const 40"
                          }
                        },
                        "src": "5875:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369745061796d61737465723a207061796d6173746572416e6444617461206d757374207370656369667920746f6b656e",
                        "id": 4302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5909:55:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62c15554b125accdf17be4b76a8053ccc5e06e3a5ec8f67f1fc117698d9663a8",
                          "typeString": "literal_string \"DepositPaymaster: paymasterAndData must specify token\""
                        },
                        "value": "DepositPaymaster: paymasterAndData must specify token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62c15554b125accdf17be4b76a8053ccc5e06e3a5ec8f67f1fc117698d9663a8",
                          "typeString": "literal_string \"DepositPaymaster: paymasterAndData must specify token\""
                        }
                      ],
                      "id": 4295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5867:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5867:98:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4304,
                  "nodeType": "ExpressionStatement",
                  "src": "5867:98:14"
                },
                {
                  "assignments": [
                    4307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4307,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5982:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4370,
                      "src": "5975:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10284",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 4306,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4305,
                          "name": "IERC20",
                          "nameLocations": [
                            "5975:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10284,
                          "src": "5975:6:14"
                        },
                        "referencedDeclaration": 10284,
                        "src": "5975:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4319,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4313,
                                  "name": "paymasterAndData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4291,
                                  "src": "6013:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 4315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "6013:21:14",
                                "startExpression": {
                                  "hexValue": "3230",
                                  "id": 4314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6030:2:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_20_by_1",
                                    "typeString": "int_const 20"
                                  },
                                  "value": "20"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 4312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6005:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes20_$",
                                "typeString": "type(bytes20)"
                              },
                              "typeName": {
                                "id": 4311,
                                "name": "bytes20",
                                "nodeType": "ElementaryTypeName",
                                "src": "6005:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6005:30:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 4310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5997:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5997:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5997:39:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4308,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10284,
                      "src": "5990:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$10284_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5990:47:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5975:62:14"
                },
                {
                  "assignments": [
                    4321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4321,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "6055:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4370,
                      "src": "6047:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4320,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6047:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4325,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4322,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4267,
                        "src": "6065:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      "id": 4323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6072:9:14",
                      "memberName": "getSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3848,
                      "src": "6065:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$3826_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3826_calldata_ptr_$",
                        "typeString": "function (struct UserOperation calldata) pure returns (address)"
                      }
                    },
                    "id": 4324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6065:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6047:36:14"
                },
                {
                  "assignments": [
                    4327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4327,
                      "mutability": "mutable",
                      "name": "maxTokenCost",
                      "nameLocation": "6101:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4370,
                      "src": "6093:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6093:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4332,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4329,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4307,
                        "src": "6135:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 4330,
                        "name": "maxCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "6142:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4328,
                      "name": "getTokenValueOfEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4263,
                      "src": "6116:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$10284_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6116:34:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6093:57:14"
                },
                {
                  "assignments": [
                    4334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4334,
                      "mutability": "mutable",
                      "name": "gasPriceUserOp",
                      "nameLocation": "6168:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4370,
                      "src": "6160:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6160:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4338,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4335,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4267,
                        "src": "6185:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      "id": 4336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6192:8:14",
                      "memberName": "gasPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3883,
                      "src": "6185:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UserOperation_$3826_calldata_ptr_$returns$_t_uint256_$attached_to$_t_struct$_UserOperation_$3826_calldata_ptr_$",
                        "typeString": "function (struct UserOperation calldata) view returns (uint256)"
                      }
                    },
                    "id": 4337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:17:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6160:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4340,
                            "name": "unlockBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "6220:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4342,
                          "indexExpression": {
                            "id": 4341,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4321,
                            "src": "6232:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6220:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6244:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6220:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f636b6564",
                        "id": 4345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6247:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eb29d3c5347f8cc0d88d4fc40deca72135020a232f7dd523594048d7ddf01b7",
                          "typeString": "literal_string \"DepositPaymaster: deposit not locked\""
                        },
                        "value": "DepositPaymaster: deposit not locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eb29d3c5347f8cc0d88d4fc40deca72135020a232f7dd523594048d7ddf01b7",
                          "typeString": "literal_string \"DepositPaymaster: deposit not locked\""
                        }
                      ],
                      "id": 4339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6212:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6212:74:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4347,
                  "nodeType": "ExpressionStatement",
                  "src": "6212:74:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4349,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4038,
                              "src": "6304:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                              }
                            },
                            "id": 4351,
                            "indexExpression": {
                              "id": 4350,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4307,
                              "src": "6313:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10284",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6304:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4353,
                          "indexExpression": {
                            "id": 4352,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4321,
                            "src": "6320:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6304:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4354,
                          "name": "maxTokenCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4327,
                          "src": "6332:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6304:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f77",
                        "id": 4356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6346:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb4c3d014ab3213f2f61de4b888c6734ded30a222c61472057f0ad11219307bb",
                          "typeString": "literal_string \"DepositPaymaster: deposit too low\""
                        },
                        "value": "DepositPaymaster: deposit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb4c3d014ab3213f2f61de4b888c6734ded30a222c61472057f0ad11219307bb",
                          "typeString": "literal_string \"DepositPaymaster: deposit too low\""
                        }
                      ],
                      "id": 4348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6296:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6296:86:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4358,
                  "nodeType": "ExpressionStatement",
                  "src": "6296:86:14"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 4361,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4321,
                            "src": "6411:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4362,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "6420:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$10284",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 4363,
                            "name": "gasPriceUserOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4334,
                            "src": "6427:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4364,
                            "name": "maxTokenCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4327,
                            "src": "6443:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4365,
                            "name": "maxCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4271,
                            "src": "6457:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$10284",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4359,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6400:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6404:6:14",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6400:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6400:65:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6466:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 4368,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6399:69:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_rational_0_by_1_$",
                      "typeString": "tuple(bytes memory,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 4278,
                  "id": 4369,
                  "nodeType": "Return",
                  "src": "6392:76:14"
                }
              ]
            },
            "baseFunctions": [
              206
            ],
            "documentation": {
              "id": 4264,
              "nodeType": "StructuredDocumentation",
              "src": "5081:288:14",
              "text": " Validate the request:\n The sender should have enough deposit to pay the max possible cost.\n Note that the sender's balance is not checked. If it fails to pay from its balance,\n this deposit will be used to compensate the paymaster for the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validatePaymasterUserOp",
            "nameLocation": "5383:24:14",
            "overrides": {
              "id": 4273,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5494:8:14"
            },
            "parameters": {
              "id": 4272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4267,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "5431:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4371,
                  "src": "5408:29:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 4266,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4265,
                      "name": "UserOperation",
                      "nameLocations": [
                        "5408:13:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3826,
                      "src": "5408:13:14"
                    },
                    "referencedDeclaration": 3826,
                    "src": "5408:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4269,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "5447:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4371,
                  "src": "5439:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4268,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5439:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "5467:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4371,
                  "src": "5459:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5459:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5407:68:14"
            },
            "returnParameters": {
              "id": 4278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4275,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "5525:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4371,
                  "src": "5512:20:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4274,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4277,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "5542:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4371,
                  "src": "5534:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5511:46:14"
            },
            "scope": 4459,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4458,
            "nodeType": "FunctionDefinition",
            "src": "6886:819:14",
            "nodes": [],
            "body": {
              "id": 4457,
              "nodeType": "Block",
              "src": "6985:720:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4384,
                    4387,
                    4389,
                    4391,
                    4393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4384,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "7005:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4457,
                      "src": "6997:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4383,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6997:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4387,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7021:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4457,
                      "src": "7014:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10284",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 4386,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4385,
                          "name": "IERC20",
                          "nameLocations": [
                            "7014:6:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10284,
                          "src": "7014:6:14"
                        },
                        "referencedDeclaration": 10284,
                        "src": "7014:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10284",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4389,
                      "mutability": "mutable",
                      "name": "gasPricePostOp",
                      "nameLocation": "7036:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4457,
                      "src": "7028:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7028:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4391,
                      "mutability": "mutable",
                      "name": "maxTokenCost",
                      "nameLocation": "7060:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4457,
                      "src": "7052:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7052:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4393,
                      "mutability": "mutable",
                      "name": "maxCost",
                      "nameLocation": "7082:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4457,
                      "src": "7074:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4392,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7074:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4408,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4396,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4377,
                        "src": "7104:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 4398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7114:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4397,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7114:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 4399,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10284,
                            "src": "7123:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$10284_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          {
                            "id": 4401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7131:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4400,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7131:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 4403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7140:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4402,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7140:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 4405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7149:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4404,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7149:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 4406,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7113:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_contract$_IERC20_$10284_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(contract IERC20),type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_contract$_IERC20_$10284_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(contract IERC20),type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 4394,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7093:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 4395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7097:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7093:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 4407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7093:65:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_contract$_IERC20_$10284_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address payable,contract IERC20,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6996:162:14"
                },
                {
                  "assignments": [
                    4410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4410,
                      "mutability": "mutable",
                      "name": "actualTokenCost",
                      "nameLocation": "7235:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4457,
                      "src": "7227:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7227:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4421,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4411,
                              "name": "actualGasCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4379,
                              "src": "7254:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4412,
                                "name": "COST_OF_POST",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4016,
                                "src": "7270:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 4413,
                                "name": "gasPricePostOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4389,
                                "src": "7285:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7270:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7254:45:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4416,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7253:47:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 4417,
                        "name": "maxTokenCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4391,
                        "src": "7303:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7253:62:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4419,
                      "name": "maxCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4393,
                      "src": "7318:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7253:72:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7227:98:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PostOpMode_$3667",
                      "typeString": "enum IPaymaster.PostOpMode"
                    },
                    "id": 4425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4422,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4375,
                      "src": "7339:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PostOpMode_$3667",
                        "typeString": "enum IPaymaster.PostOpMode"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 4423,
                        "name": "PostOpMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3667,
                        "src": "7347:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PostOpMode_$3667_$",
                          "typeString": "type(enum IPaymaster.PostOpMode)"
                        }
                      },
                      "id": 4424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7358:14:14",
                      "memberName": "postOpReverted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3666,
                      "src": "7347:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PostOpMode_$3667",
                        "typeString": "enum IPaymaster.PostOpMode"
                      }
                    },
                    "src": "7339:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4446,
                    "nodeType": "Block",
                    "src": "7511:135:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4438,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4038,
                                "src": "7592:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                                }
                              },
                              "id": 4441,
                              "indexExpression": {
                                "id": 4439,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4387,
                                "src": "7601:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$10284",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7592:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4442,
                            "indexExpression": {
                              "id": 4440,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4384,
                              "src": "7608:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7592:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 4443,
                            "name": "actualTokenCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4410,
                            "src": "7620:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7592:43:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4445,
                        "nodeType": "ExpressionStatement",
                        "src": "7592:43:14"
                      }
                    ]
                  },
                  "id": 4447,
                  "nodeType": "IfStatement",
                  "src": "7335:311:14",
                  "trueBody": {
                    "id": 4437,
                    "nodeType": "Block",
                    "src": "7374:131:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4429,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4384,
                              "src": "7454:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4432,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7471:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DepositPaymaster_$4459",
                                    "typeString": "contract DepositPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DepositPaymaster_$4459",
                                    "typeString": "contract DepositPaymaster"
                                  }
                                ],
                                "id": 4431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7463:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4430,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7463:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7463:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4434,
                              "name": "actualTokenCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4410,
                              "src": "7478:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4426,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4387,
                              "src": "7431:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10284",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7437:16:14",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10405,
                            "src": "7431:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10284_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$10284_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 4435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7431:63:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4436,
                        "nodeType": "ExpressionStatement",
                        "src": "7431:63:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4448,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4038,
                          "src": "7655:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$10284_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 4452,
                        "indexExpression": {
                          "id": 4449,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4387,
                          "src": "7664:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10284",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7655:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4453,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4450,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8722,
                          "src": "7671:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7671:7:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7655:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4454,
                      "name": "actualTokenCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4410,
                      "src": "7683:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7655:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4456,
                  "nodeType": "ExpressionStatement",
                  "src": "7655:43:14"
                }
              ]
            },
            "baseFunctions": [
              249
            ],
            "documentation": {
              "id": 4372,
              "nodeType": "StructuredDocumentation",
              "src": "6481:400:14",
              "text": " perform the post-operation to charge the sender for the gas.\n in normal mode, use transferFrom to withdraw enough tokens from the sender's balance.\n in case the transferFrom fails, the _postOp reverts and the entryPoint will call it again,\n this time in *postOpReverted* mode.\n In this mode, we use the deposit to pay (which we validated to be large enough)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postOp",
            "nameLocation": "6895:7:14",
            "overrides": {
              "id": 4381,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6976:8:14"
            },
            "parameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4375,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "6914:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4458,
                  "src": "6903:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$3667",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 4374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4373,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "6903:10:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3667,
                      "src": "6903:10:14"
                    },
                    "referencedDeclaration": 3667,
                    "src": "6903:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$3667",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4377,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "6935:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4458,
                  "src": "6920:22:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4379,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "6952:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4458,
                  "src": "6944:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6944:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6902:64:14"
            },
            "returnParameters": {
              "id": 4382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6985:0:14"
            },
            "scope": 4459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4004,
              "name": "BasePaymaster",
              "nameLocations": [
                "1244:13:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 361,
              "src": "1244:13:14"
            },
            "id": 4005,
            "nodeType": "InheritanceSpecifier",
            "src": "1244:13:14"
          }
        ],
        "canonicalName": "DepositPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4003,
          "nodeType": "StructuredDocumentation",
          "src": "284:930:14",
          "text": " A token-based paymaster that accepts token deposits\n The deposit is only a safeguard: the user pays with his token balance.\n  only if the user didn't approve() the paymaster, or if the token balance is not enough, the deposit will be used.\n  thus the required deposit is to cover just one method call.\n The deposit is locked for the current block: the user must issue unlockTokenDeposit() to be allowed to withdraw\n  (but can't use the deposit for this or further operations)\n paymasterAndData holds the paymaster address followed by the token address to use.\n @notice This paymaster will be rejected by the standard rules of EIP4337, as it uses an external oracle.\n (the standard rules ban accessing data of an external contract)\n It can only be used if it is \"whitelisted\" by the bundler.\n (technically, it can be used by an \"oracle\" which returns a static value, without accessing any storage)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4459,
          361,
          8794,
          11111,
          3694
        ],
        "name": "DepositPaymaster",
        "nameLocation": "1224:16:14",
        "scope": 4460,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 14
}