{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "anEntryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "anAggregator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "oldPublicKey",
          "type": "uint256[4]"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "newPublicKey",
          "type": "uint256[4]"
        }
      ],
      "name": "PublicKeyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IEntryPoint",
          "name": "entryPoint",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "SimpleAccountInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addDeposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "func",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "dest",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "func",
          "type": "bytes[]"
        }
      ],
      "name": "executeBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlsPublicKey",
      "outputs": [
        {
          "internalType": "uint256[4]",
          "name": "",
          "type": "uint256[4]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "anOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[4]",
          "name": "aPublicKey",
          "type": "uint256[4]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[4]",
          "name": "newPublicKey",
          "type": "uint256[4]"
        }
      ],
      "name": "setBlsPublicKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawDepositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052306080523480156200001557600080fd5b5060405162001f5338038062001f5383398101604081905262000038916200013e565b6001600160a01b03821660a052816200005062000064565b506001600160a01b031660c052506200017d565b600054610100900460ff1615620000d15760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000123576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200013b57600080fd5b50565b600080604083850312156200015257600080fd5b82516200015f8162000125565b6020840151909250620001728162000125565b809150509250929050565b60805160a05160c051611d52620002016000396000818161023701526110a6015260008181610344015281816106da0152818161075b015281816109d401528181610b3701528181610c3801528181610f53015261115e0152600081816105e001528181610620015281816107ec0152818161082c01526108bf0152611d526000f3fe6080604052600436106101385760003560e01c806352d1902d116100ab578063c399ec881161006f578063c399ec88146103b7578063c4d66de8146103cc578063d087d288146103ec578063e02afbae14610401578063ee472f3614610423578063f23a6e611461044357600080fd5b806352d1902d146102fa5780638da5cb5b1461030f578063b0d691fe14610335578063b61d27f614610368578063bc197c811461038857600080fd5b8063245a7bfc116100fd578063245a7bfc146102255780633659cfe6146102715780633a871cdd146102915780634a58db19146102bf5780634d44560d146102c75780634f1ef286146102e757600080fd5b806223de291461014457806301ffc9a71461016b578063150b7a02146101a057806318dfb3c7146101e557806318fc5c441461020557600080fd5b3661013f57005b600080fd5b34801561015057600080fd5b5061016961015f3660046114b9565b5050505050505050565b005b34801561017757600080fd5b5061018b610186366004611569565b610470565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101cc6101bb366004611593565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610197565b3480156101f157600080fd5b50610169610200366004611649565b6104c2565b34801561021157600080fd5b506101696102203660046116fa565b6105c2565b34801561023157600080fd5b506102597f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610197565b34801561027d57600080fd5b5061016961028c366004611777565b6105d6565b34801561029d57600080fd5b506102b16102ac366004611794565b6106b2565b604051908152602001610197565b6101696106d8565b3480156102d357600080fd5b506101696102e23660046117e7565b610751565b6101696102f5366004611813565b6107e2565b34801561030657600080fd5b506102b16108b2565b34801561031b57600080fd5b50600054610259906201000090046001600160a01b031681565b34801561034157600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610259565b34801561037457600080fd5b506101696103833660046118ba565b610965565b34801561039457600080fd5b506101cc6103a3366004611909565b63bc197c8160e01b98975050505050505050565b3480156103c357600080fd5b506102b16109b4565b3480156103d857600080fd5b506101696103e7366004611777565b610a45565b3480156103f857600080fd5b506102b1610b10565b34801561040d57600080fd5b50610416610b66565b60405161019791906119c9565b34801561042f57600080fd5b5061016961043e3660046116fa565b610ba1565b34801561044f57600080fd5b506101cc61045e3660046119d7565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630a85bd0160e11b14806104a157506001600160e01b03198216630271189760e51b145b806104bc57506001600160e01b031982166301ffc9a760e01b145b92915050565b6104ca610c2d565b8281146105145760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b838110156105bb576105a985858381811061053457610534611a52565b90506020020160208101906105499190611777565b600085858581811061055d5761055d611a52565b905060200281019061056f9190611a68565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc292505050565b806105b381611ac4565b915050610517565b5050505050565b6105ca610d32565b6105d381610d89565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361061e5760405162461bcd60e51b815260040161050b90611add565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610667600080516020611cd6833981519152546001600160a01b031690565b6001600160a01b03161461068d5760405162461bcd60e51b815260040161050b90611b29565b61069681610dd0565b604080516000808252602082019092526105d391839190610dd8565b60006106bc610f48565b6106c68484610fc0565b90506106d1826110de565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b15801561073d57600080fd5b505af11580156105bb573d6000803e3d6000fd5b610759610d32565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156107c657600080fd5b505af11580156107da573d6000803e3d6000fd5b505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361082a5760405162461bcd60e51b815260040161050b90611add565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610873600080516020611cd6833981519152546001600160a01b031690565b6001600160a01b0316146108995760405162461bcd60e51b815260040161050b90611b29565b6108a282610dd0565b6108ae82826001610dd8565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109525760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161050b565b50600080516020611cd683398151915290565b61096d610c2d565b6109ae848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc292505050565b50505050565b6040516370a0823160e01b81523060048201526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611b75565b905090565b600054610100900460ff1615808015610a655750600054600160ff909116105b80610a7f5750303b158015610a7f575060005460ff166001145b610a9b5760405162461bcd60e51b815260040161050b90611b8e565b6000805460ff191660011790558015610abe576000805461ff0019166101001790555b610ac78261112b565b80156108ae576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b604051631aab3f0d60e11b8152306004820152600060248201819052906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335567e1a906044016109ff565b610b6e6113eb565b6040805160808101918290529060019060049082845b815481526020019060010190808311610b84575050505050905090565b600054610100900460ff1615808015610bc15750600054600160ff909116105b80610bdb5750303b158015610bdb575060005460ff166001145b610bf75760405162461bcd60e51b815260040161050b90611b8e565b6000805460ff191660011790558015610c1a576000805461ff0019166101001790555b610c24600061112b565b610ac782610d89565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610c7457506000546201000090046001600160a01b031633145b610cc05760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161050b565b565b600080846001600160a01b03168484604051610cde9190611c00565b60006040518083038185875af1925050503d8060008114610d1b576040519150601f19603f3d011682016040523d82523d6000602084013e610d20565b606091505b5091509150816105bb57805160208201fd5b6000546201000090046001600160a01b0316331480610d5057503330145b610cc05760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640161050b565b7f42e4c4ce1432650f17e41c4ea77ed12c0ab20b229d3ffd84a2ebc9f8abb25a83600182604051610dbb929190611c1c565b60405180910390a16108ae6001826004611409565b6105d3610d32565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e1057610e0b836111a7565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e6a575060408051601f3d908101601f19168201909252610e6791810190611b75565b60015b610ecd5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161050b565b600080516020611cd68339815191528114610f3c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161050b565b50610e0b838383611243565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cc05760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161050b565b6000610fcf6040840184611a68565b159050611092576000610fe0610b66565b604051602001610ff091906119c9565b604051602081830303815290604052805190602001209050808480604001906110199190611a68565b60806110286040890189611a68565b611033929150611c55565b61103e928290611c68565b60405161104c929190611c92565b6040518091039020146110905760405162461bcd60e51b815260206004820152600c60248201526b77726f6e67207075626b657960a01b604482015260640161050b565b505b604080516060810182526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001680825260006020830181905291909201529392505050565b80156105d357604051600090339060001990849084818181858888f193505050503d80600081146105bb576040519150601f19603f3d011682016040523d82523d6000602084013e6105bb565b6000805462010000600160b01b031916620100006001600160a01b038481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b6001600160a01b0381163b6112145760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161050b565b600080516020611cd683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61124c83611268565b6000825111806112595750805b15610e0b576109ae83836112a8565b611271816111a7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106d18383604051806060016040528060278152602001611cf6602791396060600080856001600160a01b0316856040516112e59190611c00565b600060405180830381855af49150503d8060008114611320576040519150601f19603f3d011682016040523d82523d6000602084013e611325565b606091505b509150915061133686838387611340565b9695505050505050565b606083156113af5782516000036113a8576001600160a01b0385163b6113a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161050b565b50816113b9565b6113b983836113c1565b949350505050565b8151156113d15781518083602001fd5b8060405162461bcd60e51b815260040161050b9190611ca2565b60405180608001604052806004906020820280368337509192915050565b8260048101928215611437579160200282015b8281111561143757825182559160200191906001019061141c565b50611443929150611447565b5090565b5b808211156114435760008155600101611448565b6001600160a01b03811681146105d357600080fd5b60008083601f84011261148357600080fd5b5081356001600160401b0381111561149a57600080fd5b6020830191508360208285010111156114b257600080fd5b9250929050565b60008060008060008060008060c0898b0312156114d557600080fd5b88356114e08161145c565b975060208901356114f08161145c565b965060408901356115008161145c565b95506060890135945060808901356001600160401b038082111561152357600080fd5b61152f8c838d01611471565b909650945060a08b013591508082111561154857600080fd5b506115558b828c01611471565b999c989b5096995094979396929594505050565b60006020828403121561157b57600080fd5b81356001600160e01b0319811681146106d157600080fd5b6000806000806000608086880312156115ab57600080fd5b85356115b68161145c565b945060208601356115c68161145c565b93506040860135925060608601356001600160401b038111156115e857600080fd5b6115f488828901611471565b969995985093965092949392505050565b60008083601f84011261161757600080fd5b5081356001600160401b0381111561162e57600080fd5b6020830191508360208260051b85010111156114b257600080fd5b6000806000806040858703121561165f57600080fd5b84356001600160401b038082111561167657600080fd5b61168288838901611605565b9096509450602087013591508082111561169b57600080fd5b506116a887828801611605565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116f2576116f26116b4565b604052919050565b60006080828403121561170c57600080fd5b82601f83011261171b57600080fd5b604051608081018181106001600160401b038211171561173d5761173d6116b4565b60405280608084018581111561175257600080fd5b845b8181101561176c578035835260209283019201611754565b509195945050505050565b60006020828403121561178957600080fd5b81356106d18161145c565b6000806000606084860312156117a957600080fd5b83356001600160401b038111156117bf57600080fd5b840161016081870312156117d257600080fd5b95602085013595506040909401359392505050565b600080604083850312156117fa57600080fd5b82356118058161145c565b946020939093013593505050565b6000806040838503121561182657600080fd5b82356118318161145c565b91506020838101356001600160401b038082111561184e57600080fd5b818601915086601f83011261186257600080fd5b813581811115611874576118746116b4565b611886601f8201601f191685016116ca565b9150808252878482850101111561189c57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600080606085870312156118d057600080fd5b84356118db8161145c565b93506020850135925060408501356001600160401b038111156118fd57600080fd5b6116a887828801611471565b60008060008060008060008060a0898b03121561192557600080fd5b88356119308161145c565b975060208901356119408161145c565b965060408901356001600160401b038082111561195c57600080fd5b6119688c838d01611605565b909850965060608b013591508082111561198157600080fd5b61198d8c838d01611605565b909650945060808b013591508082111561154857600080fd5b8060005b60048110156109ae5781518452602093840193909101906001016119aa565b608081016104bc82846119a6565b60008060008060008060a087890312156119f057600080fd5b86356119fb8161145c565b95506020870135611a0b8161145c565b9450604087013593506060870135925060808701356001600160401b03811115611a3457600080fd5b611a4089828a01611471565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611a7f57600080fd5b8301803591506001600160401b03821115611a9957600080fd5b6020019150368190038213156114b257600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ad657611ad6611aae565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611b8757600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b83811015611bf7578181015183820152602001611bdf565b50506000910152565b60008251611c12818460208701611bdc565b9190910192915050565b6101008101818460005b6004811015611c45578154835260209092019160019182019101611c26565b5050506106d160808301846119a6565b818103818111156104bc576104bc611aae565b60008085851115611c7857600080fd5b83861115611c8557600080fd5b5050820193919092039150565b8183823760009101908152919050565b6020815260008251806020840152611cc1816040850160208701611bdc565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e0efe8d9fa661a8c4ec6b3d6c363ec17148180c58fbac55a8c109db3ab55a74564736f6c63430008130033",
    "sourceMap": "578:2118:20:-:0;;;1088:4:39;1045:48;;887:131:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1278:26:17;;;;961:12:20;1314:22:17;:20;:22::i;:::-;-1:-1:-1;;;;;;986:25:20::1;;::::0;-1:-1:-1;578:2118:20;;5917:280:38;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:38;;801:2:58;5976:66:38;;;783:21:58;840:2;820:18;;;813:30;879:34;859:18;;;852:62;-1:-1:-1;;;930:18:58;;;923:37;977:19;;5976:66:38;;;;;;;;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:38;6118:15;6103:30;;;;;;6152:28;;1149:36:58;;;6152:28:38;;1137:2:58;1122:18;6152:28:38;;;;;;;6052:139;5917:280::o;14:144:58:-;-1:-1:-1;;;;;102:31:58;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:431::-;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:44;428:5;390:44;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:46:58;482:25;516:46;:::i;:::-;581:7;571:17;;;163:431;;;;;:::o;1007:184::-;578:2118:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101385760003560e01c806352d1902d116100ab578063c399ec881161006f578063c399ec88146103b7578063c4d66de8146103cc578063d087d288146103ec578063e02afbae14610401578063ee472f3614610423578063f23a6e611461044357600080fd5b806352d1902d146102fa5780638da5cb5b1461030f578063b0d691fe14610335578063b61d27f614610368578063bc197c811461038857600080fd5b8063245a7bfc116100fd578063245a7bfc146102255780633659cfe6146102715780633a871cdd146102915780634a58db19146102bf5780634d44560d146102c75780634f1ef286146102e757600080fd5b806223de291461014457806301ffc9a71461016b578063150b7a02146101a057806318dfb3c7146101e557806318fc5c441461020557600080fd5b3661013f57005b600080fd5b34801561015057600080fd5b5061016961015f3660046114b9565b5050505050505050565b005b34801561017757600080fd5b5061018b610186366004611569565b610470565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101cc6101bb366004611593565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610197565b3480156101f157600080fd5b50610169610200366004611649565b6104c2565b34801561021157600080fd5b506101696102203660046116fa565b6105c2565b34801561023157600080fd5b506102597f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610197565b34801561027d57600080fd5b5061016961028c366004611777565b6105d6565b34801561029d57600080fd5b506102b16102ac366004611794565b6106b2565b604051908152602001610197565b6101696106d8565b3480156102d357600080fd5b506101696102e23660046117e7565b610751565b6101696102f5366004611813565b6107e2565b34801561030657600080fd5b506102b16108b2565b34801561031b57600080fd5b50600054610259906201000090046001600160a01b031681565b34801561034157600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610259565b34801561037457600080fd5b506101696103833660046118ba565b610965565b34801561039457600080fd5b506101cc6103a3366004611909565b63bc197c8160e01b98975050505050505050565b3480156103c357600080fd5b506102b16109b4565b3480156103d857600080fd5b506101696103e7366004611777565b610a45565b3480156103f857600080fd5b506102b1610b10565b34801561040d57600080fd5b50610416610b66565b60405161019791906119c9565b34801561042f57600080fd5b5061016961043e3660046116fa565b610ba1565b34801561044f57600080fd5b506101cc61045e3660046119d7565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630a85bd0160e11b14806104a157506001600160e01b03198216630271189760e51b145b806104bc57506001600160e01b031982166301ffc9a760e01b145b92915050565b6104ca610c2d565b8281146105145760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b838110156105bb576105a985858381811061053457610534611a52565b90506020020160208101906105499190611777565b600085858581811061055d5761055d611a52565b905060200281019061056f9190611a68565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc292505050565b806105b381611ac4565b915050610517565b5050505050565b6105ca610d32565b6105d381610d89565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361061e5760405162461bcd60e51b815260040161050b90611add565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610667600080516020611cd6833981519152546001600160a01b031690565b6001600160a01b03161461068d5760405162461bcd60e51b815260040161050b90611b29565b61069681610dd0565b604080516000808252602082019092526105d391839190610dd8565b60006106bc610f48565b6106c68484610fc0565b90506106d1826110de565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b15801561073d57600080fd5b505af11580156105bb573d6000803e3d6000fd5b610759610d32565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156107c657600080fd5b505af11580156107da573d6000803e3d6000fd5b505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361082a5760405162461bcd60e51b815260040161050b90611add565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610873600080516020611cd6833981519152546001600160a01b031690565b6001600160a01b0316146108995760405162461bcd60e51b815260040161050b90611b29565b6108a282610dd0565b6108ae82826001610dd8565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109525760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161050b565b50600080516020611cd683398151915290565b61096d610c2d565b6109ae848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc292505050565b50505050565b6040516370a0823160e01b81523060048201526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611b75565b905090565b600054610100900460ff1615808015610a655750600054600160ff909116105b80610a7f5750303b158015610a7f575060005460ff166001145b610a9b5760405162461bcd60e51b815260040161050b90611b8e565b6000805460ff191660011790558015610abe576000805461ff0019166101001790555b610ac78261112b565b80156108ae576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b604051631aab3f0d60e11b8152306004820152600060248201819052906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335567e1a906044016109ff565b610b6e6113eb565b6040805160808101918290529060019060049082845b815481526020019060010190808311610b84575050505050905090565b600054610100900460ff1615808015610bc15750600054600160ff909116105b80610bdb5750303b158015610bdb575060005460ff166001145b610bf75760405162461bcd60e51b815260040161050b90611b8e565b6000805460ff191660011790558015610c1a576000805461ff0019166101001790555b610c24600061112b565b610ac782610d89565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610c7457506000546201000090046001600160a01b031633145b610cc05760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161050b565b565b600080846001600160a01b03168484604051610cde9190611c00565b60006040518083038185875af1925050503d8060008114610d1b576040519150601f19603f3d011682016040523d82523d6000602084013e610d20565b606091505b5091509150816105bb57805160208201fd5b6000546201000090046001600160a01b0316331480610d5057503330145b610cc05760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640161050b565b7f42e4c4ce1432650f17e41c4ea77ed12c0ab20b229d3ffd84a2ebc9f8abb25a83600182604051610dbb929190611c1c565b60405180910390a16108ae6001826004611409565b6105d3610d32565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e1057610e0b836111a7565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e6a575060408051601f3d908101601f19168201909252610e6791810190611b75565b60015b610ecd5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161050b565b600080516020611cd68339815191528114610f3c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161050b565b50610e0b838383611243565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cc05760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161050b565b6000610fcf6040840184611a68565b159050611092576000610fe0610b66565b604051602001610ff091906119c9565b604051602081830303815290604052805190602001209050808480604001906110199190611a68565b60806110286040890189611a68565b611033929150611c55565b61103e928290611c68565b60405161104c929190611c92565b6040518091039020146110905760405162461bcd60e51b815260206004820152600c60248201526b77726f6e67207075626b657960a01b604482015260640161050b565b505b604080516060810182526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001680825260006020830181905291909201529392505050565b80156105d357604051600090339060001990849084818181858888f193505050503d80600081146105bb576040519150601f19603f3d011682016040523d82523d6000602084013e6105bb565b6000805462010000600160b01b031916620100006001600160a01b038481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b6001600160a01b0381163b6112145760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161050b565b600080516020611cd683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61124c83611268565b6000825111806112595750805b15610e0b576109ae83836112a8565b611271816111a7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106d18383604051806060016040528060278152602001611cf6602791396060600080856001600160a01b0316856040516112e59190611c00565b600060405180830381855af49150503d8060008114611320576040519150601f19603f3d011682016040523d82523d6000602084013e611325565b606091505b509150915061133686838387611340565b9695505050505050565b606083156113af5782516000036113a8576001600160a01b0385163b6113a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161050b565b50816113b9565b6113b983836113c1565b949350505050565b8151156113d15781518083602001fd5b8060405162461bcd60e51b815260040161050b9190611ca2565b60405180608001604052806004906020820280368337509192915050565b8260048101928215611437579160200282015b8281111561143757825182559160200191906001019061141c565b50611443929150611447565b5090565b5b808211156114435760008155600101611448565b6001600160a01b03811681146105d357600080fd5b60008083601f84011261148357600080fd5b5081356001600160401b0381111561149a57600080fd5b6020830191508360208285010111156114b257600080fd5b9250929050565b60008060008060008060008060c0898b0312156114d557600080fd5b88356114e08161145c565b975060208901356114f08161145c565b965060408901356115008161145c565b95506060890135945060808901356001600160401b038082111561152357600080fd5b61152f8c838d01611471565b909650945060a08b013591508082111561154857600080fd5b506115558b828c01611471565b999c989b5096995094979396929594505050565b60006020828403121561157b57600080fd5b81356001600160e01b0319811681146106d157600080fd5b6000806000806000608086880312156115ab57600080fd5b85356115b68161145c565b945060208601356115c68161145c565b93506040860135925060608601356001600160401b038111156115e857600080fd5b6115f488828901611471565b969995985093965092949392505050565b60008083601f84011261161757600080fd5b5081356001600160401b0381111561162e57600080fd5b6020830191508360208260051b85010111156114b257600080fd5b6000806000806040858703121561165f57600080fd5b84356001600160401b038082111561167657600080fd5b61168288838901611605565b9096509450602087013591508082111561169b57600080fd5b506116a887828801611605565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116f2576116f26116b4565b604052919050565b60006080828403121561170c57600080fd5b82601f83011261171b57600080fd5b604051608081018181106001600160401b038211171561173d5761173d6116b4565b60405280608084018581111561175257600080fd5b845b8181101561176c578035835260209283019201611754565b509195945050505050565b60006020828403121561178957600080fd5b81356106d18161145c565b6000806000606084860312156117a957600080fd5b83356001600160401b038111156117bf57600080fd5b840161016081870312156117d257600080fd5b95602085013595506040909401359392505050565b600080604083850312156117fa57600080fd5b82356118058161145c565b946020939093013593505050565b6000806040838503121561182657600080fd5b82356118318161145c565b91506020838101356001600160401b038082111561184e57600080fd5b818601915086601f83011261186257600080fd5b813581811115611874576118746116b4565b611886601f8201601f191685016116ca565b9150808252878482850101111561189c57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600080606085870312156118d057600080fd5b84356118db8161145c565b93506020850135925060408501356001600160401b038111156118fd57600080fd5b6116a887828801611471565b60008060008060008060008060a0898b03121561192557600080fd5b88356119308161145c565b975060208901356119408161145c565b965060408901356001600160401b038082111561195c57600080fd5b6119688c838d01611605565b909850965060608b013591508082111561198157600080fd5b61198d8c838d01611605565b909650945060808b013591508082111561154857600080fd5b8060005b60048110156109ae5781518452602093840193909101906001016119aa565b608081016104bc82846119a6565b60008060008060008060a087890312156119f057600080fd5b86356119fb8161145c565b95506020870135611a0b8161145c565b9450604087013593506060870135925060808701356001600160401b03811115611a3457600080fd5b611a4089828a01611471565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611a7f57600080fd5b8301803591506001600160401b03821115611a9957600080fd5b6020019150368190038213156114b257600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ad657611ad6611aae565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611b8757600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b83811015611bf7578181015183820152602001611bdf565b50506000910152565b60008251611c12818460208701611bdc565b9190910192915050565b6101008101818460005b6004811015611c45578154835260209092019160019182019101611c26565b5050506106d160808301846119a6565b818103818111156104bc576104bc611aae565b60008085851115611c7857600080fd5b83861115611c8557600080fd5b5050820193919092039150565b8183823760009101908152919050565b6020815260008251806020840152611cc1816040850160208701611bdc565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e0efe8d9fa661a8c4ec6b3d6c363ec17148180c58fbac55a8c109db3ab55a74564736f6c63430008130033",
    "sourceMap": "578:2118:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:176:29;;;;;;;;;;-1:-1:-1;581:176:29;;;;;:::i;:::-;;;;;;;;;;;;1489:298;;;;;;;;;;-1:-1:-1;1489:298:29;;;;;:::i;:::-;;:::i;:::-;;;2168:14:58;;2161:22;2143:41;;2131:2;2116:18;1489:298:29;;;;;;;;763:212;;;;;;;;;;-1:-1:-1;763:212:29;;;;;:::i;:::-;-1:-1:-1;;;763:212:29;;;;;;;;;;;-1:-1:-1;;;;;;3116:33:58;;;3098:52;;3086:2;3071:18;763:212:29;2954:202:58;1902:297:17;;;;;;;;;;-1:-1:-1;1902:297:17;;;;;:::i;:::-;;:::i;2256:121:20:-;;;;;;;;;;-1:-1:-1;2256:121:20;;;;;:::i;:::-;;:::i;634:35::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5664:32:58;;;5646:51;;5634:2;5619:18;634:35:20;5500:203:58;3143:195:39;;;;;;;;;;-1:-1:-1;3143:195:39;;;;;:::i;:::-;;:::i;1458:353:0:-;;;;;;;;;;-1:-1:-1;1458:353:0;;;;;:::i;:::-;;:::i;:::-;;;6640:25:58;;;6628:2;6613:18;1458:353:0;6494:177:58;3926:110:17;;;:::i;4188:158::-;;;;;;;;;;-1:-1:-1;4188:158:17;;;;;:::i;:::-;;:::i;3657:220:39:-;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;765:20:17:-;;;;;;;;;;-1:-1:-1;765:20:17;;;;;;;-1:-1:-1;;;;;765:20:17;;;1031:108;;;;;;;;;;-1:-1:-1;1121:11:17;1031:108;;1680:158;;;;;;;;;;-1:-1:-1;1680:158:17;;;;;:::i;:::-;;:::i;1219:264:29:-;;;;;;;;;;-1:-1:-1;1219:264:29;;;;;:::i;:::-;-1:-1:-1;;;1219:264:29;;;;;;;;;;;3730:113:17;;;;;;;;;;;;;:::i;2483:101::-;;;;;;;;;;-1:-1:-1;2483:101:17;;;;;:::i;:::-;;:::i;935:121:0:-;;;;;;;;;;;;;:::i;2585:109:20:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1208:161::-;;;;;;;;;;-1:-1:-1;1208:161:20;;;;;:::i;:::-;;:::i;981:232:29:-;;;;;;;;;;-1:-1:-1;981:232:29;;;;;:::i;:::-;-1:-1:-1;;;981:232:29;;;;;;;;;1489:298;1576:4;-1:-1:-1;;;;;;1611:48:29;;-1:-1:-1;;;1611:48:29;;:113;;-1:-1:-1;;;;;;;1675:49:29;;-1:-1:-1;;;1675:49:29;1611:113;:169;;;-1:-1:-1;;;;;;;1740:40:29;;-1:-1:-1;;;1740:40:29;1611:169;1592:188;1489:298;-1:-1:-1;;1489:298:29:o;1902:297:17:-;1991:31;:29;:31::i;:::-;2040:26;;;2032:58;;;;-1:-1:-1;;;2032:58:17;;11885:2:58;2032:58:17;;;11867:21:58;11924:2;11904:18;;;11897:30;-1:-1:-1;;;11943:18:58;;;11936:49;12002:18;;2032:58:17;;;;;;;;;2105:9;2100:93;2120:15;;;2100:93;;;2156:26;2162:4;;2167:1;2162:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2171:1;2174:4;;2179:1;2174:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2156:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2156:5:17;;-1:-1:-1;;;2156:26:17:i;:::-;2137:3;;;;:::i;:::-;;;;2100:93;;;;1902:297;;;;:::o;2256:121:20:-;963:12:17;:10;:12::i;:::-;2340:30:20::1;2357:12;2340:16;:30::i;:::-;2256:121:::0;:::o;3143:195:39:-;-1:-1:-1;;;;;1654:6:39;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:39;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:39;:20;-1:-1:-1;;;;;;;;;;;1254:54:35;-1:-1:-1;;;;;1254:54:35;;1175:140;1727:20:39;-1:-1:-1;;;;;1727:30:39;;1719:87;;;;-1:-1:-1;;;1719:87:39;;;;;;;:::i;:::-;3224:36:::1;3242:17;3224;:36::i;:::-;3311:12;::::0;;3321:1:::1;3311:12:::0;;;::::1;::::0;::::1;::::0;;;3270:61:::1;::::0;3292:17;;3311:12;3270:21:::1;:61::i;1458:353:0:-:0;1601:22;1635:24;:22;:24::i;:::-;1686:38;1705:6;1713:10;1686:18;:38::i;:::-;1669:55;;1772:32;1784:19;1772:11;:32::i;:::-;1458:353;;;;;:::o;3926:110:17:-;1121:11;3973:56;;-1:-1:-1;;;3973:56:17;;4023:4;3973:56;;;5646:51:58;-1:-1:-1;;;;;3973:22:17;;;;;;;4004:9;;5619:18:58;;3973:56:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4188:158;963:12;:10;:12::i;:::-;1121:11;4291:48:::1;::::0;-1:-1:-1;;;4291:48:17;;-1:-1:-1;;;;;13995:32:58;;;4291:48:17::1;::::0;::::1;13977:51:58::0;14044:18;;;14037:34;;;4291:23:17;;;::::1;::::0;::::1;::::0;13950:18:58;;4291:48:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4188:158:::0;;:::o;3657:220:39:-;-1:-1:-1;;;;;1654:6:39;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:39;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:39;:20;-1:-1:-1;;;;;;;;;;;1254:54:35;-1:-1:-1;;;;;1254:54:35;;1175:140;1727:20:39;-1:-1:-1;;;;;1727:30:39;;1719:87;;;;-1:-1:-1;;;1719:87:39;;;;;;;:::i;:::-;3772:36:::1;3790:17;3772;:36::i;:::-;3818:52;3840:17;3859:4;3865;3818:21;:52::i;:::-;3657:220:::0;;:::o;2762:131::-;2840:7;2080:4;-1:-1:-1;;;;;2089:6:39;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:39;;14284:2:58;2064:92:39;;;14266:21:58;14323:2;14303:18;;;14296:30;14362:34;14342:18;;;14335:62;14433:26;14413:18;;;14406:54;14477:19;;2064:92:39;14082:420:58;2064:92:39;-1:-1:-1;;;;;;;;;;;;2762:131:39;:::o;1680:158:17:-;1766:31;:29;:31::i;:::-;1807:24;1813:4;1819:5;1826:4;;1807:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1807:5:17;;-1:-1:-1;;;1807:24:17:i;:::-;1680:158;;;;:::o;3730:113::-;3799:37;;-1:-1:-1;;;3799:37:17;;3830:4;3799:37;;;5646:51:58;3773:7:17;;-1:-1:-1;;;;;1121:11:17;3799:22;;;;5619:18:58;;3799:37:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3792:44;;3730:113;:::o;2483:101::-;3268:19:38;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:38;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:38;1702:19:49;:23;;;3376:55:38;;-1:-1:-1;3414:12:38;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:38;;;;;;;:::i;:::-;3514:12;:16;;-1:-1:-1;;3514:16:38;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:38;;;;;3540:65;2557:20:17::1;2569:7;2557:11;:20::i;:::-;3629:14:38::0;3625:99;;;3675:5;3659:21;;-1:-1:-1;;3659:21:38;;;3699:14;;-1:-1:-1;15263:36:58;;3699:14:38;;15251:2:58;15236:18;3699:14:38;;;;;;;3258:472;2483:101:17;:::o;935:121:0:-;1010:39;;-1:-1:-1;;;1010:39:0;;1040:4;1010:39;;;15492:51:58;984:7:0;15559:18:58;;;15552:60;;;984:7:0;-1:-1:-1;;;;;1121:11:17;1010:21:0;;;;15465:18:58;;1010:39:0;15310:308:58;2585:109:20;2642:17;;:::i;:::-;2671:16;;;;;;;;;;;2678:9;;2671:16;;2678:9;2671:16;;;;;;;;;;;;;;;;;;;;;;;;2585:109;:::o;1208:161::-;3268:19:38;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:38;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:38;1702:19:49;:23;;;3376:55:38;;-1:-1:-1;3414:12:38;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:38;;;;;;;:::i;:::-;3514:12;:16;;-1:-1:-1;;3514:16:38;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:38;;;;;3540:65;1295:29:20::1;1321:1;1295:17;:29::i;:::-;1334:28;1351:10;1334:16;:28::i;2808:175:17:-:0;2881:10;-1:-1:-1;;;;;1121:11:17;2881:35;;;:58;;-1:-1:-1;2934:5:17;;;;;-1:-1:-1;;;;;2934:5:17;2920:10;:19;2881:58;2873:103;;;;-1:-1:-1;;;2873:103:17;;15825:2:58;2873:103:17;;;15807:21:58;;;15844:18;;;15837:30;15903:34;15883:18;;;15876:62;15955:18;;2873:103:17;15623:356:58;2873:103:17;2808:175::o;3366:287::-;3451:12;3465:19;3488:6;-1:-1:-1;;;;;3488:11:17;3508:5;3515:4;3488:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3450:70;;;;3535:7;3530:117;;3615:6;3609:13;3604:2;3596:6;3592:15;3585:38;1349:233;1524:5;;;;;-1:-1:-1;;;;;1524:5:17;1510:10;:19;;:50;;-1:-1:-1;1533:10:17;1555:4;1533:27;1510:50;1502:73;;;;-1:-1:-1;;;1502:73:17;;16733:2:58;1502:73:17;;;16715:21:58;16772:2;16752:18;;;16745:30;-1:-1:-1;;;16791:18:58;;;16784:40;16841:18;;1502:73:17;16531:334:58;2383:164:20;2465:41;2482:9;2493:12;2465:41;;;;;;;:::i;:::-;;;;;;;;2516:24;:9;2528:12;2516:24;;:::i;4352:135:17:-;4468:12;:10;:12::i;2494:922:35:-;689:66;2910:48;;;2906:504;;;2974:37;2993:17;2974:18;:37::i;:::-;2494:922;;;:::o;2906:504::-;3064:17;-1:-1:-1;;;;;3046:50:35;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:52:35;;;;;;;;-1:-1:-1;;3046:52:35;;;;;;;;;;;;:::i;:::-;;;3042:291;;3262:56;;-1:-1:-1;;;3262:56:35;;17868:2:58;3262:56:35;;;17850:21:58;17907:2;17887:18;;;17880:30;17946:34;17926:18;;;17919:62;-1:-1:-1;;;17997:18:58;;;17990:44;18051:19;;3262:56:35;17666:410:58;3042:291:35;-1:-1:-1;;;;;;;;;;;3148:28:35;;3140:82;;;;-1:-1:-1;;;3140:82:35;;18283:2:58;3140:82:35;;;18265:21:58;18322:2;18302:18;;;18295:30;18361:34;18341:18;;;18334:62;-1:-1:-1;;;18412:18:58;;;18405:39;18461:19;;3140:82:35;18081:405:58;3140:82:35;3099:138;3346:53;3364:17;3383:4;3389:9;3346:17;:53::i;1892:149:0:-;1966:10;-1:-1:-1;;;;;1121:11:17;1966:35:0;;1958:76;;;;-1:-1:-1;;;1958:76:0;;18693:2:58;1958:76:0;;;18675:21:58;18732:2;18712:18;;;18705:30;18771;18751:18;;;18744:58;18819:18;;1958:76:0;18491:352:58;1375:687:20;1490:22;1559:15;;;;:6;:15;:::i;:::-;:27;;-1:-1:-1;1555:432:20;;1804:18;1846:17;:15;:17::i;:::-;1835:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;1825:40;;;;;;1804:61;;1949:10;1897:6;:15;;;;;;;;:::i;:::-;1938:3;1913:15;;;;:6;:15;:::i;:::-;:28;;;-1:-1:-1;1913:28:20;:::i;:::-;1897:47;;;;;:::i;:::-;1887:58;;;;;;;:::i;:::-;;;;;;;;:72;1879:97;;;;-1:-1:-1;;;1879:97:20;;19801:2:58;1879:97:20;;;19783:21:58;19840:2;19820:18;;;19813:30;-1:-1:-1;;;19859:18:58;;;19852:42;19911:18;;1879:97:20;19599:336:58;1879:97:20;1588:399;1555:432;2023:31;;;;;;;;-1:-1:-1;;;;;2038:10:20;2023:31;;;;-1:-1:-1;2023:31:20;;;;;;;;;;;1996:59;1375:687;-1:-1:-1;;;1375:687:20:o;4316:337:0:-;4397:24;;4393:254;;4455:82;;4438:12;;4463:10;;-1:-1:-1;;4515:17:0;4488:19;;4438:12;4455:82;4438:12;4455:82;4488:19;4463:10;4515:17;4455:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2590:146:17;2655:5;:15;;-1:-1:-1;;;;;;2655:15:17;;-1:-1:-1;;;;;2655:15:17;;;;;;;;;;;;2685:44;;2723:5;;;;;;2710:11;2685:44;;;;;;;2590:146;:::o;1406:259:35:-;-1:-1:-1;;;;;1702:19:49;;;1479:95:35;;;;-1:-1:-1;;;1479:95:35;;20352:2:58;1479:95:35;;;20334:21:58;20391:2;20371:18;;;20364:30;20430:34;20410:18;;;20403:62;-1:-1:-1;;;20481:18:58;;;20474:43;20534:19;;1479:95:35;20150:409:58;1479:95:35;-1:-1:-1;;;;;;;;;;;1584:74:35;;-1:-1:-1;;;;;;1584:74:35;-1:-1:-1;;;;;1584:74:35;;;;;;;;;;1406:259::o;2057:265::-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:35;;;;;;;;1771:152;:::o;6674:198:49:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:49;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:49:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:49;;;8113:60;;;;-1:-1:-1;;;8113:60:49;;20766:2:58;8113:60:49;;;20748:21:58;20805:2;20785:18;;;20778:30;20844:31;20824:18;;;20817:59;20893:18;;8113:60:49;20564:353:58;8113:60:49;-1:-1:-1;8208:10:49;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:49;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:58;-1:-1:-1;;;;;89:31:58;;79:42;;69:70;;135:1;132;125:12;150:347;201:8;211:6;265:3;258:4;250:6;246:17;242:27;232:55;;283:1;280;273:12;232:55;-1:-1:-1;306:20:58;;-1:-1:-1;;;;;338:30:58;;335:50;;;381:1;378;371:12;335:50;418:4;410:6;406:17;394:29;;470:3;463:4;454:6;446;442:19;438:30;435:39;432:59;;;487:1;484;477:12;432:59;150:347;;;;;:::o;502:1205::-;628:6;636;644;652;660;668;676;684;737:3;725:9;716:7;712:23;708:33;705:53;;;754:1;751;744:12;705:53;793:9;780:23;812:31;837:5;812:31;:::i;:::-;862:5;-1:-1:-1;919:2:58;904:18;;891:32;932:33;891:32;932:33;:::i;:::-;984:7;-1:-1:-1;1043:2:58;1028:18;;1015:32;1056:33;1015:32;1056:33;:::i;:::-;1108:7;-1:-1:-1;1162:2:58;1147:18;;1134:32;;-1:-1:-1;1217:3:58;1202:19;;1189:33;-1:-1:-1;;;;;1271:14:58;;;1268:34;;;1298:1;1295;1288:12;1268:34;1337:58;1387:7;1378:6;1367:9;1363:22;1337:58;:::i;:::-;1414:8;;-1:-1:-1;1311:84:58;-1:-1:-1;1502:3:58;1487:19;;1474:33;;-1:-1:-1;1519:16:58;;;1516:36;;;1548:1;1545;1538:12;1516:36;;1587:60;1639:7;1628:8;1617:9;1613:24;1587:60;:::i;:::-;502:1205;;;;-1:-1:-1;502:1205:58;;-1:-1:-1;502:1205:58;;;;;;1666:8;-1:-1:-1;;;502:1205:58:o;1712:286::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;1865:23;;-1:-1:-1;;;;;;1917:32:58;;1907:43;;1897:71;;1964:1;1961;1954:12;2195:754;2292:6;2300;2308;2316;2324;2377:3;2365:9;2356:7;2352:23;2348:33;2345:53;;;2394:1;2391;2384:12;2345:53;2433:9;2420:23;2452:31;2477:5;2452:31;:::i;:::-;2502:5;-1:-1:-1;2559:2:58;2544:18;;2531:32;2572:33;2531:32;2572:33;:::i;:::-;2624:7;-1:-1:-1;2678:2:58;2663:18;;2650:32;;-1:-1:-1;2733:2:58;2718:18;;2705:32;-1:-1:-1;;;;;2749:30:58;;2746:50;;;2792:1;2789;2782:12;2746:50;2831:58;2881:7;2872:6;2861:9;2857:22;2831:58;:::i;:::-;2195:754;;;;-1:-1:-1;2195:754:58;;-1:-1:-1;2908:8:58;;2805:84;2195:754;-1:-1:-1;;;2195:754:58:o;3161:367::-;3224:8;3234:6;3288:3;3281:4;3273:6;3269:17;3265:27;3255:55;;3306:1;3303;3296:12;3255:55;-1:-1:-1;3329:20:58;;-1:-1:-1;;;;;3361:30:58;;3358:50;;;3404:1;3401;3394:12;3358:50;3441:4;3433:6;3429:17;3417:29;;3501:3;3494:4;3484:6;3481:1;3477:14;3469:6;3465:27;3461:38;3458:47;3455:67;;;3518:1;3515;3508:12;3533:784;3666:6;3674;3682;3690;3743:2;3731:9;3722:7;3718:23;3714:32;3711:52;;;3759:1;3756;3749:12;3711:52;3799:9;3786:23;-1:-1:-1;;;;;3869:2:58;3861:6;3858:14;3855:34;;;3885:1;3882;3875:12;3855:34;3924:70;3986:7;3977:6;3966:9;3962:22;3924:70;:::i;:::-;4013:8;;-1:-1:-1;3898:96:58;-1:-1:-1;4101:2:58;4086:18;;4073:32;;-1:-1:-1;4117:16:58;;;4114:36;;;4146:1;4143;4136:12;4114:36;;4185:72;4249:7;4238:8;4227:9;4223:24;4185:72;:::i;:::-;3533:784;;;;-1:-1:-1;4276:8:58;-1:-1:-1;;;;3533:784:58:o;4322:127::-;4383:10;4378:3;4374:20;4371:1;4364:31;4414:4;4411:1;4404:15;4438:4;4435:1;4428:15;4454:275;4525:2;4519:9;4590:2;4571:13;;-1:-1:-1;;4567:27:58;4555:40;;-1:-1:-1;;;;;4610:34:58;;4646:22;;;4607:62;4604:88;;;4672:18;;:::i;:::-;4708:2;4701:22;4454:275;;-1:-1:-1;4454:275:58:o;4734:761::-;4816:6;4869:3;4857:9;4848:7;4844:23;4840:33;4837:53;;;4886:1;4883;4876:12;4837:53;4935:7;4928:4;4917:9;4913:20;4909:34;4899:62;;4957:1;4954;4947:12;4899:62;4990:2;4984:9;5032:3;5024:6;5020:16;5102:6;5090:10;5087:22;-1:-1:-1;;;;;5054:10:58;5051:34;5048:62;5045:88;;;5113:18;;:::i;:::-;5149:2;5142:22;5184:6;5228:3;5213:19;;5244;;;5241:39;;;5276:1;5273;5266:12;5241:39;5300:9;5318:146;5334:6;5329:3;5326:15;5318:146;;;5402:17;;5390:30;;5449:4;5440:14;;;;5351;5318:146;;;-1:-1:-1;5483:6:58;;4734:761;-1:-1:-1;;;;;4734:761:58:o;5708:247::-;5767:6;5820:2;5808:9;5799:7;5795:23;5791:32;5788:52;;;5836:1;5833;5826:12;5788:52;5875:9;5862:23;5894:31;5919:5;5894:31;:::i;5960:529::-;6070:6;6078;6086;6139:2;6127:9;6118:7;6114:23;6110:32;6107:52;;;6155:1;6152;6145:12;6107:52;6195:9;6182:23;-1:-1:-1;;;;;6220:6:58;6217:30;6214:50;;;6260:1;6257;6250:12;6214:50;6283:22;;6339:3;6321:16;;;6317:26;6314:46;;;6356:1;6353;6346:12;6314:46;6379:2;6428;6413:18;;6400:32;;-1:-1:-1;6479:2:58;6464:18;;;6451:32;;5960:529;-1:-1:-1;;;5960:529:58:o;6676:323::-;6752:6;6760;6813:2;6801:9;6792:7;6788:23;6784:32;6781:52;;;6829:1;6826;6819:12;6781:52;6868:9;6855:23;6887:31;6912:5;6887:31;:::i;:::-;6937:5;6989:2;6974:18;;;;6961:32;;-1:-1:-1;;;6676:323:58:o;7004:898::-;7081:6;7089;7142:2;7130:9;7121:7;7117:23;7113:32;7110:52;;;7158:1;7155;7148:12;7110:52;7197:9;7184:23;7216:31;7241:5;7216:31;:::i;:::-;7266:5;-1:-1:-1;7290:2:58;7328:18;;;7315:32;-1:-1:-1;;;;;7396:14:58;;;7393:34;;;7423:1;7420;7413:12;7393:34;7461:6;7450:9;7446:22;7436:32;;7506:7;7499:4;7495:2;7491:13;7487:27;7477:55;;7528:1;7525;7518:12;7477:55;7564:2;7551:16;7586:2;7582;7579:10;7576:36;;;7592:18;;:::i;:::-;7634:53;7677:2;7658:13;;-1:-1:-1;;7654:27:58;7650:36;;7634:53;:::i;:::-;7621:66;;7710:2;7703:5;7696:17;7750:7;7745:2;7740;7736;7732:11;7728:20;7725:33;7722:53;;;7771:1;7768;7761:12;7722:53;7826:2;7821;7817;7813:11;7808:2;7801:5;7797:14;7784:45;7870:1;7865:2;7860;7853:5;7849:14;7845:23;7838:34;;7891:5;7881:15;;;;;7004:898;;;;;:::o;8317:612::-;8405:6;8413;8421;8429;8482:2;8470:9;8461:7;8457:23;8453:32;8450:52;;;8498:1;8495;8488:12;8450:52;8537:9;8524:23;8556:31;8581:5;8556:31;:::i;:::-;8606:5;-1:-1:-1;8658:2:58;8643:18;;8630:32;;-1:-1:-1;8713:2:58;8698:18;;8685:32;-1:-1:-1;;;;;8729:30:58;;8726:50;;;8772:1;8769;8762:12;8726:50;8811:58;8861:7;8852:6;8841:9;8837:22;8811:58;:::i;8934:1338::-;9094:6;9102;9110;9118;9126;9134;9142;9150;9203:3;9191:9;9182:7;9178:23;9174:33;9171:53;;;9220:1;9217;9210:12;9171:53;9259:9;9246:23;9278:31;9303:5;9278:31;:::i;:::-;9328:5;-1:-1:-1;9385:2:58;9370:18;;9357:32;9398:33;9357:32;9398:33;:::i;:::-;9450:7;-1:-1:-1;9508:2:58;9493:18;;9480:32;-1:-1:-1;;;;;9561:14:58;;;9558:34;;;9588:1;9585;9578:12;9558:34;9627:70;9689:7;9680:6;9669:9;9665:22;9627:70;:::i;:::-;9716:8;;-1:-1:-1;9601:96:58;-1:-1:-1;9804:2:58;9789:18;;9776:32;;-1:-1:-1;9820:16:58;;;9817:36;;;9849:1;9846;9839:12;9817:36;9888:72;9952:7;9941:8;9930:9;9926:24;9888:72;:::i;:::-;9979:8;;-1:-1:-1;9862:98:58;-1:-1:-1;10067:3:58;10052:19;;10039:33;;-1:-1:-1;10084:16:58;;;10081:36;;;10113:1;10110;10103:12;10277:326;10370:5;10393:1;10403:194;10417:4;10414:1;10411:11;10403:194;;;10476:13;;10464:26;;10513:4;10537:12;;;;10572:15;;;;10437:1;10430:9;10403:194;;10608:242;10788:3;10773:19;;10801:43;10777:9;10826:6;10801:43;:::i;10855:823::-;10961:6;10969;10977;10985;10993;11001;11054:3;11042:9;11033:7;11029:23;11025:33;11022:53;;;11071:1;11068;11061:12;11022:53;11110:9;11097:23;11129:31;11154:5;11129:31;:::i;:::-;11179:5;-1:-1:-1;11236:2:58;11221:18;;11208:32;11249:33;11208:32;11249:33;:::i;:::-;11301:7;-1:-1:-1;11355:2:58;11340:18;;11327:32;;-1:-1:-1;11406:2:58;11391:18;;11378:32;;-1:-1:-1;11461:3:58;11446:19;;11433:33;-1:-1:-1;;;;;11478:30:58;;11475:50;;;11521:1;11518;11511:12;11475:50;11560:58;11610:7;11601:6;11590:9;11586:22;11560:58;:::i;:::-;10855:823;;;;-1:-1:-1;10855:823:58;;-1:-1:-1;10855:823:58;;11637:8;;10855:823;-1:-1:-1;;;10855:823:58:o;12031:127::-;12092:10;12087:3;12083:20;12080:1;12073:31;12123:4;12120:1;12113:15;12147:4;12144:1;12137:15;12163:521;12240:4;12246:6;12306:11;12293:25;12400:2;12396:7;12385:8;12369:14;12365:29;12361:43;12341:18;12337:68;12327:96;;12419:1;12416;12409:12;12327:96;12446:33;;12498:20;;;-1:-1:-1;;;;;;12530:30:58;;12527:50;;;12573:1;12570;12563:12;12527:50;12606:4;12594:17;;-1:-1:-1;12637:14:58;12633:27;;;12623:38;;12620:58;;;12674:1;12671;12664:12;12689:127;12750:10;12745:3;12741:20;12738:1;12731:31;12781:4;12778:1;12771:15;12805:4;12802:1;12795:15;12821:135;12860:3;12881:17;;;12878:43;;12901:18;;:::i;:::-;-1:-1:-1;12948:1:58;12937:13;;12821:135::o;12961:408::-;13163:2;13145:21;;;13202:2;13182:18;;;13175:30;13241:34;13236:2;13221:18;;13214:62;-1:-1:-1;;;13307:2:58;13292:18;;13285:42;13359:3;13344:19;;12961:408::o;13374:::-;13576:2;13558:21;;;13615:2;13595:18;;;13588:30;13654:34;13649:2;13634:18;;13627:62;-1:-1:-1;;;13720:2:58;13705:18;;13698:42;13772:3;13757:19;;13374:408::o;14507:184::-;14577:6;14630:2;14618:9;14609:7;14605:23;14601:32;14598:52;;;14646:1;14643;14636:12;14598:52;-1:-1:-1;14669:16:58;;14507:184;-1:-1:-1;14507:184:58:o;14696:410::-;14898:2;14880:21;;;14937:2;14917:18;;;14910:30;14976:34;14971:2;14956:18;;14949:62;-1:-1:-1;;;15042:2:58;15027:18;;15020:44;15096:3;15081:19;;14696:410::o;15984:250::-;16069:1;16079:113;16093:6;16090:1;16087:13;16079:113;;;16169:11;;;16163:18;16150:11;;;16143:39;16115:2;16108:10;16079:113;;;-1:-1:-1;;16226:1:58;16208:16;;16201:27;15984:250::o;16239:287::-;16368:3;16406:6;16400:13;16422:66;16481:6;16476:3;16469:4;16461:6;16457:17;16422:66;:::i;:::-;16504:16;;;;;16239:287;-1:-1:-1;;16239:287:58:o;16870:602::-;17121:3;17106:19;;17110:9;17202:6;17079:4;17236:168;17250:4;17247:1;17244:11;17236:168;;;17309:13;;17297:26;;17352:4;17343:14;;;;17392:1;17380:14;;;;17263:9;17236:168;;;17240:3;;;17413:53;17461:3;17450:9;17446:19;17438:6;17413:53;:::i;18848:128::-;18915:9;;;18936:11;;;18933:37;;;18950:18;;:::i;18981:331::-;19086:9;19097;19139:8;19127:10;19124:24;19121:44;;;19161:1;19158;19151:12;19121:44;19190:6;19180:8;19177:20;19174:40;;;19210:1;19207;19200:12;19174:40;-1:-1:-1;;19236:23:58;;;19281:25;;;;;-1:-1:-1;18981:331:58:o;19317:277::-;19506:6;19498;19493:3;19480:33;19462:3;19532:16;;19557:13;;;19532:16;19317:277;-1:-1:-1;19317:277:58:o;20922:396::-;21071:2;21060:9;21053:21;21034:4;21103:6;21097:13;21146:6;21141:2;21130:9;21126:18;21119:34;21162:79;21234:6;21229:2;21218:9;21214:18;21209:2;21201:6;21197:15;21162:79;:::i;:::-;21302:2;21281:15;-1:-1:-1;;21277:29:58;21262:45;;;;21309:2;21258:54;;20922:396;-1:-1:-1;;20922:396:58:o",
    "linkReferences": {},
    "immutableReferences": {
      "4762": [
        {
          "start": 836,
          "length": 32
        },
        {
          "start": 1754,
          "length": 32
        },
        {
          "start": 1883,
          "length": 32
        },
        {
          "start": 2516,
          "length": 32
        },
        {
          "start": 2871,
          "length": 32
        },
        {
          "start": 3128,
          "length": 32
        },
        {
          "start": 3923,
          "length": 32
        },
        {
          "start": 4446,
          "length": 32
        }
      ],
      "5421": [
        {
          "start": 567,
          "length": 32
        },
        {
          "start": 4262,
          "length": 32
        }
      ],
      "9413": [
        {
          "start": 1504,
          "length": 32
        },
        {
          "start": 1568,
          "length": 32
        },
        {
          "start": 2028,
          "length": 32
        },
        {
          "start": 2092,
          "length": 32
        },
        {
          "start": 2239,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addDeposit()": "4a58db19",
    "aggregator()": "245a7bfc",
    "entryPoint()": "b0d691fe",
    "execute(address,uint256,bytes)": "b61d27f6",
    "executeBatch(address[],bytes[])": "18dfb3c7",
    "getBlsPublicKey()": "e02afbae",
    "getDeposit()": "c399ec88",
    "getNonce()": "d087d288",
    "initialize(address)": "c4d66de8",
    "initialize(uint256[4])": "ee472f36",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "setBlsPublicKey(uint256[4])": "18fc5c44",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd",
    "withdrawDepositTo(address,uint256)": "4d44560d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"oldPublicKey\",\"type\":\"uint256[4]\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"newPublicKey\",\"type\":\"uint256[4]\"}],\"name\":\"PublicKeyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SimpleAccountInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlsPublicKey\",\"outputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"\",\"type\":\"uint256[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"anOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"aPublicKey\",\"type\":\"uint256[4]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"newPublicKey\",\"type\":\"uint256[4]\"}],\"name\":\"setBlsPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getBlsPublicKey()\":{\"returns\":{\"_0\":\"public key from a BLS keypair that is used to verify the BLS signature, both separately and aggregated.\"}},\"initialize(address)\":{\"details\":\"The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"initialize(uint256[4])\":{\"params\":{\"aPublicKey\":\"public key from a BLS keypair that will have a full ownership and control of this account.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setBlsPublicKey(uint256[4])\":{\"params\":{\"newPublicKey\":\"public key from a BLS keypair that will have a full ownership and control of this account.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"deposit more funds for this account in the entryPoint\"},\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a transaction (called directly from owner, or by entryPoint)\"},\"executeBatch(address[],bytes[])\":{\"notice\":\"execute a sequence of transactions\"},\"getDeposit()\":{\"notice\":\"check current account deposit in the entryPoint\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"initialize(uint256[4])\":{\"notice\":\"The initializer for the BLSAccount instance.\"},\"setBlsPublicKey(uint256[4])\":{\"notice\":\"Allows the owner to set or change the BLS key.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"withdraw value from the account's deposit\"}},\"notice\":\"Minimal BLS-based account that uses an aggregated signature. The account must maintain its own BLS public key, and expose its trusted signature aggregator. Note that unlike the \\\"standard\\\" SimpleAccount, this account can't be called directly (normal SimpleAccount uses its \\\"signer\\\" address as both the ecrecover signer, and as a legitimate Ethereum sender address. Obviously, a BLS public key is not a valid Ethereum sender address.)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/bls/BLSAccount.sol\":\"BLSAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3\",\"dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0x295bb73ecafb78a11e7418cc91d5f3c7f5fd5b2eba5e063d1e7d6bb6163192d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7c7f1546b6880ec112761fd36465c5730611ca9b15e3121c2e3c494ee3f9b3ce\",\"dweb:/ipfs/QmPDJv3UTPSvrEoCUEhxTa2CoDmciwougiX3mmRTHcV5gB\"]},\"contracts/samples/bls/BLSAccount.sol\":{\"keccak256\":\"0xed761f08bf5f6b1aeb36792267ceea916e5adb9ca3a5e6110299481e50635add\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f2c475842d920cd4046d672679a897b8c355018615186b22615bcb7171ef2e47\",\"dweb:/ipfs/QmNvfZH7PCJfM6aEwMEMadgXtusfHvPj27ehcwoMjFyPHh\"]},\"contracts/samples/bls/IBLSAccount.sol\":{\"keccak256\":\"0x47499e922398cbe4bfd9fbeb98110357b22fbe93e557d068c6a15d785e1184a8\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c9e0521978d9abcc4f91a9e074ae6d3d3a2f6b940432e7042d4b767e553c1bea\",\"dweb:/ipfs/QmWdmPi6CK15BLdtBNmM2YwxM9czrSgchZAebK8vKfiXGz\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "anEntryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "anAggregator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[4]",
              "name": "oldPublicKey",
              "type": "uint256[4]",
              "indexed": false
            },
            {
              "internalType": "uint256[4]",
              "name": "newPublicKey",
              "type": "uint256[4]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PublicKeyChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SimpleAccountInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aggregator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "dest",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "func",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "dest",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "func",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBlsPublicKey",
          "outputs": [
            {
              "internalType": "uint256[4]",
              "name": "",
              "type": "uint256[4]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "anOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[4]",
              "name": "aPublicKey",
              "type": "uint256[4]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[4]",
              "name": "newPublicKey",
              "type": "uint256[4]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBlsPublicKey"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tokensReceived"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawDepositTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getBlsPublicKey()": {
            "returns": {
              "_0": "public key from a BLS keypair that is used to verify the BLS signature, both separately and aggregated."
            }
          },
          "initialize(address)": {
            "details": "The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`"
          },
          "initialize(uint256[4])": {
            "params": {
              "aPublicKey": "public key from a BLS keypair that will have a full ownership and control of this account."
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "setBlsPublicKey(uint256[4])": {
            "params": {
              "newPublicKey": "public key from a BLS keypair that will have a full ownership and control of this account."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "withdrawDepositTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDeposit()": {
            "notice": "deposit more funds for this account in the entryPoint"
          },
          "entryPoint()": {
            "notice": "return the entryPoint used by this account. subclass should return the current entryPoint used by this account."
          },
          "execute(address,uint256,bytes)": {
            "notice": "execute a transaction (called directly from owner, or by entryPoint)"
          },
          "executeBatch(address[],bytes[])": {
            "notice": "execute a sequence of transactions"
          },
          "getDeposit()": {
            "notice": "check current account deposit in the entryPoint"
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "initialize(uint256[4])": {
            "notice": "The initializer for the BLSAccount instance."
          },
          "setBlsPublicKey(uint256[4])": {
            "notice": "Allows the owner to set or change the BLS key."
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
          },
          "withdrawDepositTo(address,uint256)": {
            "notice": "withdraw value from the account's deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/samples/bls/BLSAccount.sol": "BLSAccount"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/core/BaseAccount.sol": {
        "keccak256": "0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c",
        "urls": [
          "bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3",
          "dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk"
        ],
        "license": "GPL-3.0"
      },
      "contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IAccount.sol": {
        "keccak256": "0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418",
        "urls": [
          "bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4",
          "dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/SimpleAccount.sol": {
        "keccak256": "0x295bb73ecafb78a11e7418cc91d5f3c7f5fd5b2eba5e063d1e7d6bb6163192d4",
        "urls": [
          "bzz-raw://7c7f1546b6880ec112761fd36465c5730611ca9b15e3121c2e3c494ee3f9b3ce",
          "dweb:/ipfs/QmPDJv3UTPSvrEoCUEhxTa2CoDmciwougiX3mmRTHcV5gB"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/bls/BLSAccount.sol": {
        "keccak256": "0xed761f08bf5f6b1aeb36792267ceea916e5adb9ca3a5e6110299481e50635add",
        "urls": [
          "bzz-raw://f2c475842d920cd4046d672679a897b8c355018615186b22615bcb7171ef2e47",
          "dweb:/ipfs/QmNvfZH7PCJfM6aEwMEMadgXtusfHvPj27ehcwoMjFyPHh"
        ],
        "license": "GPL-3.0"
      },
      "contracts/samples/bls/IBLSAccount.sol": {
        "keccak256": "0x47499e922398cbe4bfd9fbeb98110357b22fbe93e557d068c6a15d785e1184a8",
        "urls": [
          "bzz-raw://c9e0521978d9abcc4f91a9e074ae6d3d3a2f6b940432e7042d4b767e553c1bea",
          "dweb:/ipfs/QmWdmPi6CK15BLdtBNmM2YwxM9czrSgchZAebK8vKfiXGz"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752",
        "urls": [
          "bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3",
          "dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/samples/bls/BLSAccount.sol",
    "id": 5568,
    "exportedSymbols": {
      "Address": [
        11089
      ],
      "BLSAccount": [
        5567
      ],
      "BaseAccount": [
        141
      ],
      "ECDSA": [
        11897
      ],
      "ERC1967Upgrade": [
        9166
      ],
      "IAccount": [
        3402
      ],
      "IAggregator": [
        3436
      ],
      "IBLSAccount": [
        7080
      ],
      "IBeacon": [
        9228
      ],
      "IERC1155Receiver": [
        9619
      ],
      "IERC165": [
        11909
      ],
      "IERC1822Proxiable": [
        8825
      ],
      "IERC1967": [
        8815
      ],
      "IERC721Receiver": [
        10739
      ],
      "IERC777Recipient": [
        10759
      ],
      "IEntryPoint": [
        3640
      ],
      "INonceManager": [
        3659
      ],
      "IStakeManager": [
        3799
      ],
      "Initializable": [
        9397
      ],
      "Math": [
        12775
      ],
      "SignedMath": [
        12880
      ],
      "SimpleAccount": [
        5062
      ],
      "StorageSlot": [
        11302
      ],
      "Strings": [
        11531
      ],
      "TokenCallbackHandler": [
        8590
      ],
      "UUPSUpgradeable": [
        9513
      ],
      "UserOperation": [
        3826
      ],
      "UserOperationLib": [
        3996
      ],
      "ValidationData": [
        2594
      ],
      "_intersectTimeRange": [
        2738
      ],
      "_packValidationData": [
        2775,
        2813
      ],
      "_parseValidationData": [
        2653
      ],
      "calldataKeccak": [
        2823
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:2661:20",
    "nodes": [
      {
        "id": 5412,
        "nodeType": "PragmaDirective",
        "src": "36:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 5413,
        "nodeType": "ImportDirective",
        "src": "62:30:20",
        "nodes": [],
        "absolutePath": "contracts/samples/SimpleAccount.sol",
        "file": "../SimpleAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5568,
        "sourceUnit": 5063,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5414,
        "nodeType": "ImportDirective",
        "src": "93:27:20",
        "nodes": [],
        "absolutePath": "contracts/samples/bls/IBLSAccount.sol",
        "file": "./IBLSAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5568,
        "sourceUnit": 7081,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5567,
        "nodeType": "ContractDefinition",
        "src": "578:2118:20",
        "nodes": [
          {
            "id": 5421,
            "nodeType": "VariableDeclaration",
            "src": "634:35:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "245a7bfc",
            "mutability": "immutable",
            "name": "aggregator",
            "nameLocation": "659:10:20",
            "scope": 5567,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5420,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "634:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5425,
            "nodeType": "VariableDeclaration",
            "src": "675:28:20",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "publicKey",
            "nameLocation": "694:9:20",
            "scope": 5567,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$4_storage",
              "typeString": "uint256[4]"
            },
            "typeName": {
              "baseType": {
                "id": 5422,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "675:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 5424,
              "length": {
                "hexValue": "34",
                "id": 5423,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "683:1:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "4"
              },
              "nodeType": "ArrayTypeName",
              "src": "675:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                "typeString": "uint256[4]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5441,
            "nodeType": "FunctionDefinition",
            "src": "887:131:20",
            "nodes": [],
            "body": {
              "id": 5440,
              "nodeType": "Block",
              "src": "976:42:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5436,
                      "name": "aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5421,
                      "src": "986:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5437,
                      "name": "anAggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5430,
                      "src": "999:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "986:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5439,
                  "nodeType": "ExpressionStatement",
                  "src": "986:25:20"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5433,
                    "name": "anEntryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5428,
                    "src": "961:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 5434,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5432,
                  "name": "SimpleAccount",
                  "nameLocations": [
                    "947:13:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5062,
                  "src": "947:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "947:27:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5428,
                  "mutability": "mutable",
                  "name": "anEntryPoint",
                  "nameLocation": "911:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5441,
                  "src": "899:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 5427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5426,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "899:11:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3640,
                      "src": "899:11:20"
                    },
                    "referencedDeclaration": 3640,
                    "src": "899:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3640",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5430,
                  "mutability": "mutable",
                  "name": "anAggregator",
                  "nameLocation": "933:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5441,
                  "src": "925:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:48:20"
            },
            "returnParameters": {
              "id": 5435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:0:20"
            },
            "scope": 5567,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5465,
            "nodeType": "FunctionDefinition",
            "src": "1208:161:20",
            "nodes": [],
            "body": {
              "id": 5464,
              "nodeType": "Block",
              "src": "1285:84:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1321:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1313:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5454,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1313:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1313:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5451,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1295:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BLSAccount_$5567_$",
                          "typeString": "type(contract super BLSAccount)"
                        }
                      },
                      "id": 5453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1301:11:20",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4919,
                      "src": "1295:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5459,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:29:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5461,
                        "name": "aPublicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5446,
                        "src": "1351:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 5460,
                      "name": "_setBlsPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5554,
                      "src": "1334:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[4] memory)"
                      }
                    },
                    "id": 5462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5463,
                  "nodeType": "ExpressionStatement",
                  "src": "1334:28:20"
                }
              ]
            },
            "documentation": {
              "id": 5442,
              "nodeType": "StructuredDocumentation",
              "src": "1024:179:20",
              "text": " The initializer for the BLSAccount instance.\n @param aPublicKey public key from a BLS keypair that will have a full ownership and control of this account."
            },
            "functionSelector": "ee472f36",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5449,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5448,
                  "name": "initializer",
                  "nameLocations": [
                    "1273:11:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9299,
                  "src": "1273:11:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:11:20"
              }
            ],
            "name": "initialize",
            "nameLocation": "1217:10:20",
            "parameters": {
              "id": 5447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5446,
                  "mutability": "mutable",
                  "name": "aPublicKey",
                  "nameLocation": "1246:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5465,
                  "src": "1228:28:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1228:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5445,
                    "length": {
                      "hexValue": "34",
                      "id": 5444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1236:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1228:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:30:20"
            },
            "returnParameters": {
              "id": 5450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:0:20"
            },
            "scope": 5567,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5522,
            "nodeType": "FunctionDefinition",
            "src": "1375:687:20",
            "nodes": [],
            "body": {
              "id": 5521,
              "nodeType": "Block",
              "src": "1514:548:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 5476,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5468,
                        "src": "1526:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      {
                        "id": 5477,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5470,
                        "src": "1534:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 5478,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1525:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_UserOperation_$3826_calldata_ptr_$_t_bytes32_$",
                      "typeString": "tuple(struct UserOperation calldata,bytes32)"
                    }
                  },
                  "id": 5479,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:20:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 5480,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5468,
                          "src": "1559:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 5481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1566:8:20",
                        "memberName": "initCode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3809,
                        "src": "1559:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 5482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1575:6:20",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1559:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1585:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1559:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5512,
                  "nodeType": "IfStatement",
                  "src": "1555:432:20",
                  "trueBody": {
                    "id": 5511,
                    "nodeType": "Block",
                    "src": "1588:399:20",
                    "statements": [
                      {
                        "assignments": [
                          5486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5486,
                            "mutability": "mutable",
                            "name": "pubKeyHash",
                            "nameLocation": "1812:10:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 5511,
                            "src": "1804:18:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 5485,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1804:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5494,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 5490,
                                    "name": "getBlsPublicKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5566,
                                    "src": "1846:15:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$4_memory_ptr_$",
                                      "typeString": "function () view returns (uint256[4] memory)"
                                    }
                                  },
                                  "id": 5491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1846:17:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                    "typeString": "uint256[4] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                    "typeString": "uint256[4] memory"
                                  }
                                ],
                                "expression": {
                                  "id": 5488,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1835:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1839:6:20",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1835:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1835:29:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5487,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1825:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1825:40:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1804:61:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 5507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 5497,
                                        "name": "userOp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5468,
                                        "src": "1897:6:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                                          "typeString": "struct UserOperation calldata"
                                        }
                                      },
                                      "id": 5498,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1904:8:20",
                                      "memberName": "initCode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3809,
                                      "src": "1897:15:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    },
                                    "id": 5504,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexRangeAccess",
                                    "src": "1897:47:20",
                                    "startExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 5499,
                                            "name": "userOp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5468,
                                            "src": "1913:6:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                                              "typeString": "struct UserOperation calldata"
                                            }
                                          },
                                          "id": 5500,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1920:8:20",
                                          "memberName": "initCode",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3809,
                                          "src": "1913:15:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        },
                                        "id": 5501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1929:6:20",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "1913:22:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "313238",
                                        "id": 5502,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1938:3:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_128_by_1",
                                          "typeString": "int_const 128"
                                        },
                                        "value": "128"
                                      },
                                      "src": "1913:28:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                      "typeString": "bytes calldata slice"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                      "typeString": "bytes calldata slice"
                                    }
                                  ],
                                  "id": 5496,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1887:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 5505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1887:58:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 5506,
                                "name": "pubKeyHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5486,
                                "src": "1949:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1887:72:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "77726f6e67207075626b6579",
                              "id": 5508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1961:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d47f95102ecb77a503f8bf26fe03155315a477d7b00a1b0cee7c3b13797c2b5",
                                "typeString": "literal_string \"wrong pubkey\""
                              },
                              "value": "wrong pubkey"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d47f95102ecb77a503f8bf26fe03155315a477d7b00a1b0cee7c3b13797c2b5",
                                "typeString": "literal_string \"wrong pubkey\""
                              }
                            ],
                            "id": 5495,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1879:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1879:97:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5510,
                        "nodeType": "ExpressionStatement",
                        "src": "1879:97:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5515,
                            "name": "aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5421,
                            "src": "2038:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 5516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2050:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 5517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2052:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5514,
                          "name": "ValidationData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2594,
                          "src": "2023:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ValidationData_$2594_storage_ptr_$",
                            "typeString": "type(struct ValidationData storage pointer)"
                          }
                        },
                        "id": 5518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2023:31:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidationData_$2594_memory_ptr",
                          "typeString": "struct ValidationData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ValidationData_$2594_memory_ptr",
                          "typeString": "struct ValidationData memory"
                        }
                      ],
                      "id": 5513,
                      "name": "_packValidationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2813
                      ],
                      "referencedDeclaration": 2775,
                      "src": "2003:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ValidationData_$2594_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ValidationData memory) pure returns (uint256)"
                      }
                    },
                    "id": 5519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:52:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5475,
                  "id": 5520,
                  "nodeType": "Return",
                  "src": "1996:59:20"
                }
              ]
            },
            "baseFunctions": [
              4971
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "1384:18:20",
            "overrides": {
              "id": 5472,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1467:8:20"
            },
            "parameters": {
              "id": 5471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5468,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1426:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "1403:29:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3826_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 5467,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5466,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1403:13:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3826,
                      "src": "1403:13:20"
                    },
                    "referencedDeclaration": 3826,
                    "src": "1403:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3826_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5470,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1442:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "1434:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5469,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:51:20"
            },
            "returnParameters": {
              "id": 5475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5474,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "1498:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "1490:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:24:20"
            },
            "scope": 5567,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5537,
            "nodeType": "FunctionDefinition",
            "src": "2256:121:20",
            "nodes": [],
            "body": {
              "id": 5536,
              "nodeType": "Block",
              "src": "2330:47:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5533,
                        "name": "newPublicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5527,
                        "src": "2357:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 5532,
                      "name": "_setBlsPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5554,
                      "src": "2340:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[4] memory)"
                      }
                    },
                    "id": 5534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5535,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:30:20"
                }
              ]
            },
            "documentation": {
              "id": 5523,
              "nodeType": "StructuredDocumentation",
              "src": "2068:183:20",
              "text": " Allows the owner to set or change the BLS key.\n @param newPublicKey public key from a BLS keypair that will have a full ownership and control of this account."
            },
            "functionSelector": "18fc5c44",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5529,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2320:9:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4776,
                  "src": "2320:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "2320:9:20"
              }
            ],
            "name": "setBlsPublicKey",
            "nameLocation": "2265:15:20",
            "parameters": {
              "id": 5528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5527,
                  "mutability": "mutable",
                  "name": "newPublicKey",
                  "nameLocation": "2299:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5537,
                  "src": "2281:30:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5524,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2281:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5526,
                    "length": {
                      "hexValue": "34",
                      "id": 5525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2289:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2281:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2280:32:20"
            },
            "returnParameters": {
              "id": 5531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2330:0:20"
            },
            "scope": 5567,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5554,
            "nodeType": "FunctionDefinition",
            "src": "2383:164:20",
            "nodes": [],
            "body": {
              "id": 5553,
              "nodeType": "Block",
              "src": "2450:97:20",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5545,
                        "name": "publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5425,
                        "src": "2482:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_storage",
                          "typeString": "uint256[4] storage ref"
                        }
                      },
                      {
                        "id": 5546,
                        "name": "newPublicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5541,
                        "src": "2493:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_storage",
                          "typeString": "uint256[4] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 5544,
                      "name": "PublicKeyChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7071,
                      "src": "2465:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$_t_array$_t_uint256_$4_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[4] memory,uint256[4] memory)"
                      }
                    },
                    "id": 5547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:41:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5548,
                  "nodeType": "EmitStatement",
                  "src": "2460:46:20"
                },
                {
                  "expression": {
                    "id": 5551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5549,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5425,
                      "src": "2516:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_storage",
                        "typeString": "uint256[4] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5550,
                      "name": "newPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5541,
                      "src": "2528:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "2516:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage",
                      "typeString": "uint256[4] storage ref"
                    }
                  },
                  "id": 5552,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:24:20"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBlsPublicKey",
            "nameLocation": "2392:16:20",
            "parameters": {
              "id": 5542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5541,
                  "mutability": "mutable",
                  "name": "newPublicKey",
                  "nameLocation": "2427:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5554,
                  "src": "2409:30:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5538,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2409:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5540,
                    "length": {
                      "hexValue": "34",
                      "id": 5539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2417:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2409:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2408:32:20"
            },
            "returnParameters": {
              "id": 5543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2450:0:20"
            },
            "scope": 5567,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5566,
            "nodeType": "FunctionDefinition",
            "src": "2585:109:20",
            "nodes": [],
            "body": {
              "id": 5565,
              "nodeType": "Block",
              "src": "2661:33:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5563,
                    "name": "publicKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5425,
                    "src": "2678:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage",
                      "typeString": "uint256[4] storage ref"
                    }
                  },
                  "functionReturnParameters": 5562,
                  "id": 5564,
                  "nodeType": "Return",
                  "src": "2671:16:20"
                }
              ]
            },
            "baseFunctions": [
              7079
            ],
            "documentation": {
              "id": 5555,
              "nodeType": "StructuredDocumentation",
              "src": "2553:27:20",
              "text": "@inheritdoc IBLSAccount"
            },
            "functionSelector": "e02afbae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlsPublicKey",
            "nameLocation": "2594:15:20",
            "overrides": {
              "id": 5557,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2619:8:20"
            },
            "parameters": {
              "id": 5556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:2:20"
            },
            "returnParameters": {
              "id": 5562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5566,
                  "src": "2642:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5558,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2642:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5560,
                    "length": {
                      "hexValue": "34",
                      "id": 5559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2650:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2642:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2641:19:20"
            },
            "scope": 5567,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5416,
              "name": "SimpleAccount",
              "nameLocations": [
                "601:13:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5062,
              "src": "601:13:20"
            },
            "id": 5417,
            "nodeType": "InheritanceSpecifier",
            "src": "601:13:20"
          },
          {
            "baseName": {
              "id": 5418,
              "name": "IBLSAccount",
              "nameLocations": [
                "616:11:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7080,
              "src": "616:11:20"
            },
            "id": 5419,
            "nodeType": "InheritanceSpecifier",
            "src": "616:11:20"
          }
        ],
        "canonicalName": "BLSAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5415,
          "nodeType": "StructuredDocumentation",
          "src": "122:455:20",
          "text": " Minimal BLS-based account that uses an aggregated signature.\n The account must maintain its own BLS public key, and expose its trusted signature aggregator.\n Note that unlike the \"standard\" SimpleAccount, this account can't be called directly\n (normal SimpleAccount uses its \"signer\" address as both the ecrecover signer, and as a legitimate\n Ethereum sender address. Obviously, a BLS public key is not a valid Ethereum sender address.)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5567,
          7080,
          5062,
          9397,
          9513,
          9166,
          8815,
          8825,
          8590,
          9619,
          11909,
          10739,
          10759,
          141,
          3402
        ],
        "name": "BLSAccount",
        "nameLocation": "587:10:20",
        "scope": 5568,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 20
}